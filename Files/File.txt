    <!DOCTYPE html>
<html lang="ru">
<head>




    <link rel="canonical" href="https://www.ixbt.com/cpu/cpu-digest-2009.shtml" />



    <meta charset="UTF-8"/>
    <meta name="viewport" content="initial-scale=1"/>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge"/>

    <title>Современные десктопные процессоры архитектуры x86</title>

    <meta name="description" content="Этот материал представляет собой обновлённую, существенно переработанную и дополненную версию статьи 2006 года, которая называлась «Современные десктопные процессоры архитектуры x86: общие принципы работы (x86 CPU FAQ 1.0)». Правда, чтобы не вводить потенциальных читателей в заблуждение словом «FAQ», мы решили назвать новый материал более правильным, как нам кажется, термином — «дайджест». Действительно, ведь большая его часть — это не ответы на конкретные вопросы, а разъяснения и краткие выжимки из чего угодно — от технической документации до истории развития микропроцессорной отрасли." >
    <meta name="title" content="Современные десктопные процессоры архитектуры x86">

    <meta property="fb:app_id" content="372988576485499"/>
    <meta name="robots" content="max-image-preview:large">
    <meta property="fb:pages" content="239502966103173" />
    <meta property="og:type" content="article"/>
    <meta property="og:url" content="https://www.ixbt.com/cpu/cpu-digest-2009.shtml"/>
    <meta property="og:title" content="Современные десктопные процессоры архитектуры x86"/>
    <meta property="og:locale" content="ru_RU"/>
    <meta property="og:site_name" content="iXBT.com"/>
    <meta property="og:description" content="Этот материал представляет собой обновлённую, существенно переработанную и дополненную версию статьи 2006 года, которая называлась «Современные десктопные процессоры архитектуры x86: общие принципы работы (x86 CPU FAQ 1.0)». Правда, чтобы не вводить потенциальных читателей в заблуждение словом «FAQ», мы решили назвать новый материал более правильным, как нам кажется, термином — «дайджест». Действительно, ведь большая его часть — это не ответы на конкретные вопросы, а разъяснения и краткие выжимки из чего угодно — от технической документации до истории развития микропроцессорной отрасли."/>
    <meta property="yandex_recommendations_image"
          content="https://www.ixbt.com"/>
    <meta property="og:image" content="https://www.ixbt.com"/>

    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@ixbtcom">
    <meta name="twitter:title" content="Современные десктопные процессоры архитектуры x86">
    <meta name="twitter:description" content="Этот материал представляет собой обновлённую, существенно переработанную и дополненную версию статьи 2006 года, которая называлась «Современные десктопные процессоры архитектуры x86: общие принципы работы (x86 CPU FAQ 1.0)». Правда, чтобы не вводить потенциальных читателей в заблуждение словом «FAQ», мы решили назвать новый материал более правильным, как нам кажется, термином — «дайджест». Действительно, ведь большая его часть — это не ответы на конкретные вопросы, а разъяснения и краткие выжимки из чего угодно — от технической документации до истории развития микропроцессорной отрасли.">
    <meta name="twitter:image" content="https://www.ixbt.com">

    <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="icon" type="image/ico" href="/favicon.ico" />
    <meta content="" name="author">





<link rel="stylesheet" href="https://www.ixbt.com/site2/resources/css/style.min.css?v=2"/>

<link rel="stylesheet" href="https://www.ixbt.com/live/modules/ixbt/css/comments.min.css" media="print" onload="this.media='all'; this.onload=null;">
        <script>
        isPad = false;
        isMobile = false;
        isDesktop = false;



    </script>
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-TL6BLW');</script>
<!-- End Google Tag Manager -->

<script type="text/javascript" > (function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter25165136 = new Ya.Metrika({ id:25165136, clickmap:true, trackLinks:true, accurateTrackBounce:true }); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], x = "https://mc.yandex.ru/metrika/watch.js", s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; for (var i = 0; i < document.scripts.length; i++) { if (document.scripts[i].src === x) { return; } } s.type = "text/javascript"; s.async = true; s.src = x; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks"); </script>

<script type="text/javascript">
    function getCookie(name) {
        var matches = document.cookie.match(new RegExp(
            "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
        ));
        return matches ? decodeURIComponent(matches[1]) : undefined;
    }
    window.jitsuPageProps = window.jitsuPageProps || { project_slug: "ixbt", page_type: "other", publication_type: "", publication_id: "", design: 'legacy', ym_uid: getCookie('_ym_uid'),ym_first_visit: getCookie('_ym_d'), ym_has_adblock: getCookie('_ym_isad'),cookie_policy_accepted: getCookie('cookie_policy_accepted'), other_ids: {tmr_lvid: getCookie('tmr_lvid'),top100_id: getCookie('top100_id'),adtech_uid: getCookie('adtech_uid'),ajs_anonymous_id: getCookie('ajs_anonymous_id'),ajs_user_id:getCookie('ajs_user_id')}};
    window.jitsuLoaded = function (jitsu) {
        jitsu.page(window.jitsuPageProps);
    }
</script>
<script async src="https://jitsu.ixbt.com/p.js"
        data-write-key="ldnJKbzhrZfbZydPPBEd4nUkqNlW2EHt:cVYWd65uWi8QVUqyknT26DDe51FEflVZ"
        data-onload="jitsuLoaded"
        data-init-only="true"></script>













<script type="text/javascript" src="https://www.ixbt.com/live/modules/ixbt/js/main.min.js"></script>
<script defer type="text/javascript" src="https://www.ixbt.com/site2/resources/javascript/plugins.js"></script>
<script defer type="text/javascript" src="https://www.ixbt.com/site2/resources/javascript/kocmoc.js"></script>
<script src="https://www.ixbt.com/site2/resources/javascript/ixbit_tv.js" defer></script>

<meta name="VK35850">

<script defer type="text/javascript" src="https://forum.ixbt.com/login.js"></script>

<script async src="/site2/resources/javascript/prebid/2024-03-01/prebid.js"></script>
<script async src="https://cdn.al-adtech.com/ssp/sync-urls.js"></script>
<script async src="https://yandex.ru/ads/system/header-bidding.js"></script>
<style>
    @media(max-width: 740px){
        .bcontainer {
            display: block;
            min-height: 300px;
            max-height: 600px;
            overflow-x:hidden;
            max-width: 100%;
        }
        .b-first-mobile {
            max-height: 360px;
        }
        .video-slider-block, .g-grid_column__small {
            display: none;
        }

    }
    @media(min-width: 740px){
        .bcontainer {
            display:block;
            min-height: 120px;
            max-height: 300px;
            overflow-x:hidden;
            max-width:  100%;
        }
        .b-120 {
            max-height: 120px;
        }

    }
</style>
<script type="text/javascript">
    var isMobile = false;
    var isDesktop = false;
    var isPad = false;
    var sizeArray = [];
    var sizeArrayHigh = [];
    var sizeArrayVertical = [];
    var adCode = [];
    var pixelWidth = window.innerWidth * window.devicePixelRatio;
    var placesArray = [];
    var blocksArray = {};
    var advSeed = Math.random();

    if(getCookie('auth_param') == '?y3%rN') {
        const style = document.createElement('style');
        style.textContent = '.deskadv,.mobadv,#yandex_recommend,#brandplace,.clickable_zone,.clickable_zone_right,.clickable_zone_left{display:none !important}body{background-image: none !important; background-color: #FFF !important;}';
        document.head.append(style);
    } else {
        var pbjs = pbjs || {};
        pbjs.que = pbjs.que || [];
        isMobile = window.matchMedia('(max-width: 740px)').matches;
        isPad = window.matchMedia('(min-width: 740px) and (max-width: 1025px)').matches;
        isDesktop = window.matchMedia('(min-width: 1025px)').matches;

        if (isMobile) {

            placesArray = ['n10','n20','n30','n40'];

            if(advSeed <= 0.1) {
        //        blocksArray = { // experiment
        //            n10: 'cxbgs', n20: 'cxbgw', n30: 'cxbgz', n40: 'cxbhc', n60: 'cxbhf'
        //        }
        //    } else if (advSeed <= 0.2) {
                blocksArray = { // control
                    n10: 'cxbgt', n20: 'cxbgx', n30: 'cxbha', n40: 'cxbhd', n60: 'cxbhg'
                }
            } else {
                blocksArray = { // common
                    n10: 'cxbgu', n20: 'cxbgy', n30: 'cxbhb', n40: 'cxbhe', n60: 'cxbhh'
                }
            }

            if (pixelWidth < 640) {

                sizeArray = [[336, 280], [300, 250], [300, 300], [250, 250]];
                sizeArrayHigh = [[336, 280], [300, 250], [300, 300], [240, 400], [250,250]];

            } else {
                sizeArray = [[336, 280], [300, 250], [300, 300], [640, 480], [250, 250]];
                sizeArrayHigh = [[336, 280], [300, 250], [300, 300], [640, 480], [240, 400], [250, 250]];
            }

            var placeName;
            placeName = placesArray.shift();

            if (typeof placeName !== 'undefined') {
                //n10
                adCode.push(
                    {
                        code: placeName, sizes: sizeArray, bids: [{
                            bidder: 'otm', params : {placementId: 2153, sendTargetRef: true}}
                            , {bidder: 'astralab', params : {placementId: '61b0688ae11e18a9677776cf',sendTargetRef: true}}
                            , {bidder: 'pb_vox', params : {placementId: '64b141517bc72ff5a4a7e694',placement: 'banner'}}
                            , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}
                            //, {bidder: 'clickscloud', params : {placementId: 361,sendTargetRef: true}}
                            , {bidder: 'segmento', sendTargetRef: true, params: {placementId: 648,sendTargetRef: true}} // 336x280
                            , {bidder: 'buzzoola', params: {placementId: 1234376, sendTargetRef:	true}}
                            , {bidder: 'mediasniper', params: {placementId: 30001, sendTargetRef:true}}
                            , {bidder: 'adfox_roden-media', params: { p1: 'cxaaf', p2: 'y'}}
                            , {bidder: 'betweendigital', params: {placementId: 2431115, sendTargetRef:true}} //300x250
                            , {bidder: 'roxot', params: { placementId: '44f4e7ee-d7eb-4ab4-a15f-649e3473ec7e', sendTargetRef: true }}
                            , {bidder: 'pb_mytarget', params : {placementId: '222274'}}
                            , {bidder: 'videonow', params: {placementId: 5694245,sendTargetRef: true}}
                            , {bidder: 'Gnezdo', params: {placementId: 347942, sendTargetRef: true}}

                        ]
                    });
            }

            placeName = placesArray.shift();
            if (typeof placeName !== 'undefined') {
                //n20
                if (pixelWidth > 640) {
                    adCode.push(
                        {
                            code: placeName, sizes: sizeArray,
                            codeType: 'combo',
                            bids: [
                                {bidder: 'astralab', params : {placementId: '60f80c1177c187fdd105d80f',sendTargetRef: true}}
                                , {bidder: 'buzzoola', params: {placementId: 1236565, sendTargetRef: true}}
                                , {bidder: 'betweendigital', params: {placementId: 4602547,sendTargetRef: true}}
                                , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}
                                // , {bidder: 'videonow', params: {placementId: 5694245,sendTargetRef: true}}
                                , {bidder: 'mytarget', params : {placementId: 1334853,sendTargetRef: true}}
                                , {bidder: 'roxot', params: { placementId: 'da955b55-55cb-4b85-a665-023e6fe87f1d', sendTargetRef: true }}
                                , {bidder: 'adfox_roden-media', params: { p1: 'cxaag', p2: 'y'}}

                            ]
                        });
                } else {
                    adCode.push(
                        {
                            code: placeName, sizes: sizeArray,
                            bids: [
                                {bidder: 'betweendigital', params: {placementId: 3541161, sendTargetRef:true}} // 300x250
                                , {bidder: 'pb_vox', params : {placementId: '64b141767bc72ff5a4a7e696',placement: 'banner'}}
                                , {bidder: 'pb_mytarget', params : {placementId: '638801'}} // 300x250
                                , {bidder: 'astralab', params : {placementId: '60f80c1177c187fdd105d80f',sendTargetRef: true}} //сombo
                                , {bidder: 'otm', params : {placementId: 2154,sendTargetRef: true}} // 300x250

                                , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}
                                //, {bidder: 'clickscloud', params : {placementId: 362,sendTargetRef: true}}
                                , {bidder: 'segmento', params : {placementId: 649,sendTargetRef: true}} // 336x280
                                , {bidder: 'buzzoola', params: {placementId: 1234378, sendTargetRef:	true}}
                                , {bidder: 'mediasniper', params: {placementId: 30002, sendTargetRef:	true}}
                                , {bidder: 'roxot', params: { placementId: '3d0492d8-67ba-47ec-ad09-2a27fb008052', sendTargetRef: true }}
                                , {bidder: 'adfox_roden-media', params: { p1: 'cxaag', p2: 'y'}}
                               // , {bidder: 'videonow', params: {placementId: 5694245,sendTargetRef: true}}
                            ]
                        });
                }
            }
            placeName = placesArray.shift();
            if (typeof placeName !== 'undefined') {
                //n30
                adCode.push(
                    {
                        code: placeName, sizes: sizeArrayHigh, bids: [
                            {bidder: 'betweendigital', params: {placementId: 3541162, sendTargetRef:true}} // 300x250
                            , {bidder: 'pb_vox', params : {placementId: '64b141947bc72ff5a4a7e698',placement: 'banner'}}
                            , {bidder: 'astralab', params : {placementId: '64f83635ed73c301a64f3a13',sendTargetRef: true}}
                            , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}

                            , {bidder: 'pb_mytarget', params : {placementId: '638803'}} // 300x250
                            , {bidder: 'segmento', params : {placementId: 654,sendTargetRef: true}} // 240x400
                            , {bidder: 'otm', params : {placementId: 2155,sendTargetRef: true}} // 300x250
                            , {bidder: 'mediasniper', params: {placementId: 30003, sendTargetRef:	true}}
                            , {bidder: 'roxot', params: { placementId: 'b24361ad-1ff5-42de-a182-af78ccc092ca', sendTargetRef: true }}
                            , {bidder: 'adfox_roden-media', params: { p1: 'cxaai', p2: 'y'}}
                            , {bidder: 'buzzoola', params: {placementId: 1221594, sendTargetRef:	true}}
                        ]
                    });
            }

            placeName = placesArray.shift();
            if (typeof placeName !== 'undefined') {
                //n40
                adCode.push(
                    {
                        code: placeName, sizes: sizeArrayHigh, bids: [
                            {
                            bidder: 'betweendigital', params: {placementId: 3915105, sendTargetRef:true}} // 300x250
                            , {bidder: 'pb_vox', params : {placementId: '64b141cd4d506e4a709c8561',placement: 'banner'}}
                            , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}
                            , {bidder: 'pb_mytarget', params : {placementId: '727843'}} // 300x250
                            , {bidder: 'otm', params : {placementId: 2156,sendTargetRef: true}} // 300x250
                            , {bidder: 'mediasniper', params: {placementId: 30004, sendTargetRef: true}}
                            , {bidder: 'roxot', params: { placementId: '9889b3f2-f6ae-4e76-8ffa-f40f1d89b429', sendTargetRef: true }}
                            , {bidder: 'adfox_roden-media', params: { p1: 'cxaaj', p2: 'y'}}
                            , {bidder: 'buzzoola', params: {placementId: 1221602, sendTargetRef: true}}
                        ]
                    });


            }
        } else  {

            sizeArray = [[728, 90], [300, 90], [560, 90], [468, 60]];
            sizeArrayHigh = [[728, 90], [300, 90], [560, 90], [468, 60], [700, 250], [728, 280]];

            var sizeArrayVerticalFirst = [[300, 600], [120, 600], [160, 600], [240, 400]];
            var sizeArrayVerticalSecond = [[300, 600], [120, 600], [160, 600], [240, 400]];
            placesArray = ['n10', 'n20', 'n30', 'n40'];

            if(advSeed <= 0.1) {
                blocksArray = { // control
                    n10: 'cxbhk', n20: 'cxbhn', n30: 'cxbhq', n40: 'cxbht' , n60: 'cxcgu', v10: 'cxbhw', v30: 'cxbhz'
                }
        //    } else if (advSeed <= 0.2) {
        //        blocksArray = { // experiment
        //            n10: 'cxbhj', n20: 'cxbhm', n30: 'cxbhp', n40: 'cxbhs', n60: 'cxcgw', v10: 'cxbhv', v30: 'cxbhy'
        //        }
            } else {
                blocksArray = { // common
                    n10: 'cxbhl', n20: 'cxbho', n30: 'cxbhr', n40: 'cxbhu', n60: 'cxcgv', v10: 'cxbhx', v30: 'cxbia'
                }
            }


            placeName = placesArray.shift();
            if (typeof placeName !== 'undefined') {
                //n10
                adCode.push(
                    {
                        code: placeName, sizes: sizeArray, bids: [
                            {bidder: 'betweendigital',params : {placementId: 3988375, sendTargetRef:true}} // 728x90
                            , {bidder: 'pb_vox', params : {placementId: '64b141f84d506e4a709c8563',placement: 'banner'}}
                            , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}
                            , {bidder: 'pb_mytarget', params : {placementId: '638797'}} // 728x90
                            , {bidder: 'segmento', params : {placementId: 650,sendTargetRef: true}} // 728x90
                            , {bidder: 'otm', params : {placementId: 2159,sendTargetRef: true}} // 728x90
                            , {bidder: 'mediasniper', params: {placementId: 30005, sendTargetRef:	true}}
                            , {bidder: 'adfox_roden-media', params: { p1: 'cwzzs', p2: 'y'}}
                            , {bidder: 'roxot', params: { placementId: '2dc7e70d-82fe-4e29-8e62-7c756848622a', sendTargetRef: true }}
                            , {bidder: 'buzzoola', params: {placementId: 1221461, sendTargetRef:	true}}
                            , {bidder: 'Gnezdo', params: {placementId: 347961, sendTargetRef: true}}
                        ]
                    });

            }
            placeName = placesArray.shift();
            if (typeof placeName !== 'undefined') {
                //n20
                adCode.push(
                    {
                        code: placeName, sizes: sizeArray, bids: [
                            {bidder: 'betweendigital',params : {placementId: 4498150, sendTargetRef:true}} //
                            , {bidder: 'pb_mytarget', params : {placementId: '244988'}} // 728x90
                            , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}

                            //, {bidder: 'clickscloud', params : {placementId: 366,sendTargetRef: true}}
                            , {bidder: 'pb_vox', params : {placementId: '64b142067bc72ff5a4a7e69a',placement: 'banner'}}
                            , {bidder: 'otm', params : {placementId: 2160,sendTargetRef: true}} // 728x90
                            , {bidder: 'mediasniper', params: {placementId: 30006, sendTargetRef: true}}
                            , {bidder: 'adfox_roden-media', params: { p1: 'cwzzv', p2: 'y'}}
                            , {bidder: 'roxot', params: { placementId: '8baaa0ad-fdf8-43c4-a34e-9521f45fb6d9', sendTargetRef: true }}
                            , {bidder: 'buzzoola', params: {placementId: 1221460, sendTargetRef:	true}}
                        ]
                    });
            }
            placeName = placesArray.shift();
            if (typeof placeName !== 'undefined') {
                //n30
                adCode.push({
                    code: placeName, sizes: sizeArrayHigh, bids: [
                        {bidder: 'betweendigital',params : {placementId: 3785089, sendTargetRef:true}} // 728x90
                        , {bidder: 'pb_mytarget', params : {placementId: '638799'}} // 728x90
                        , {bidder: 'otm',params : {placementId: 2161,sendTargetRef: true}} // 728x90
                        , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}

                        , {bidder: 'pb_vox', params : {placementId: '64b142197bc72ff5a4a7e69c',placement: 'banner'}}
                        , {bidder: 'mediasniper', params: {placementId: 30007, sendTargetRef:	true}}
                        , {bidder: 'roxot', params: { placementId: 'd3857cc7-2ed1-4195-a6a5-1f1b0eeaa7c0', sendTargetRef: true }}
                        , {bidder: 'adfox_roden-media', params: { p1: 'cwzzw', p2: 'y'}}
                        , {bidder: 'buzzoola', params: {placementId: 1221462, sendTargetRef:	true}}
                    ]
                });
            }

            placeName = placesArray.shift();
            if (typeof placeName !== 'undefined') {
                //n40
                adCode.push({
                    code: placeName, sizes: sizeArrayHigh, bids: [
                        {bidder: 'betweendigital',params : {placementId: 4498151, sendTargetRef:true}} // 728x90
                        , {bidder: 'pb_mytarget', params : {placementId: '1005508'}} // 728x90
                        , {bidder: 'otm', params : {placementId: 28235,sendTargetRef: true}} // 728x90
                        , {bidder: 'mediasniper', params: {placementId: 30008, sendTargetRef:	true}}
                        , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}

                        , {bidder: 'pb_vox', params : {placementId: '64b142367bc72ff5a4a7e69e',placement: 'banner'}}
                        , {bidder: 'roxot', params: { placementId: '5080c73c-dd7f-4449-8734-39b21f656eb2', sendTargetRef: true }}
                        , {bidder: 'adfox_roden-media', params: { p1: 'cwzzx', p2: 'y'}}
                        , {bidder: 'buzzoola', params: {placementId: 1236566, sendTargetRef:	true}}
                    ]
                });
            }

            if (isDesktop) {


                adCode.push({
                    code: 'v10', sizes: sizeArrayVerticalFirst, bids: [
                        {bidder: 'betweendigital',params : {placementId: 1860193, sendTargetRef:true}} // 300x600
                        , {bidder: 'pb_mytarget', params : {placementId: '243779'}} // 300x600
                        , {bidder: 'pb_vox', params : {placementId: '64b144ec4d506e4a709c8565',placement: 'banner'}}
                        , {bidder: 'otm', params : {placementId: 2157,sendTargetRef: true}} // 300x600
                        , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}
                        , {bidder: 'segmento', params : {placementId: 652,sendTargetRef: true}} // 300x600
                        , {bidder: 'roxot', params: { placementId: 'ace54c40-a37c-44db-83b5-d0903018dd49', sendTargetRef: true }}
                        , {bidder: 'buzzoola', params: {placementId: 1234379, sendTargetRef: true}}
                        , {bidder: 'mediasniper', params: {placementId: 30009, sendTargetRef: true}}
                        , {bidder: 'Gnezdo', params: {placementId: 347956, sendTargetRef: true}}
                        , {bidder: 'adfox_roden-media', params: { p1: 'cwzzz', p2: 'emwl'}}
                    ]
                });
                adCode.push({
                    code: 'v30', sizes: sizeArrayVerticalSecond, bids: [

                        {bidder: 'betweendigital',params : {placementId: 3541185, sendTargetRef:true}} // 300x600
                        , {bidder: 'pb_mytarget', params : {placementId: '222248'}} // 300x600
                        , {bidder: 'pb_vox', params : {placementId: '64b145017bc72ff5a4a7e6a0',placement: 'banner'}}
                        , {bidder: 'otm', params : {placementId: 2158,sendTargetRef: true}} // 300x600
                        , {bidder: 'segmento', params : {placementId: 654,sendTargetRef: true}} // 240x400
                        , {bidder: 'mediasniper', params: {placementId: 30010, sendTargetRef:	true}}
                        , {bidder: 'pb_adkernel', params : {host: 'cpm.appocean.media', zoneId: 216079}}

                        , {bidder: 'roxot', params: { placementId: '66332e4b-8bcf-4586-9f76-40b190d74f8f', sendTargetRef: true }}
                        , {bidder: 'buzzoola', params: {placementId: 1221463, sendTargetRef:	true}}
                        , {bidder: 'Gnezdo', params: {placementId: 347960, sendTargetRef: true}}
                        , {bidder: 'adfox_roden-media', params: { p1: 'cxaaa', p2: 'emwl'}}
                    ]
                });
            }
        }


        syncPixels = [{
            bidder: 'betweendigital',
            pixels: ['https://ads.betweendigital.com/sspmatch?p=33565&r=$' + Date.now()]
        }];
        window.YaHeaderBiddingSettings = {
            biddersMap: {

                mytarget: 788441
                // pb_between: 2495527
                , betweendigital: 797430
                , pb_adkernel: 2398810
                , otm: 1556362
                , segmento: 1496181
                , astralab: 1725999
                , buzzoola: 1948953
                , videonow: 1840942
                , mediasniper: 2221582
                , pb_vox: 2494962
                , 'adfox_roden-media': 2233018
                , pb_mytarget: 2398812
                , roxot: 2734369
                , Gnezdo: 2772399
            },
            //syncPixels: syncPixels,
            pbjs: pbjs,
            adUnits: adCode,
            timeout: isMobile? 1000 : 700,

        };
    }


</script>
<script>window.yaContextCb = window.yaContextCb || []</script>
<script src="https://yandex.ru/ads/system/context.js" async></script>
<script async src="https://cdn.skcrtxr.com/roxot-wrapper/js/roxot-manager.js?pid=337bf825-1e47-4fc2-8be5-1c3a850fdbc2"></script>

    <script>
        window.jitsuPageProps = window.jitsuPageProps || { project_slug: "ixbt", page_type: "other", publication_type: "", publication_id: "", design: 'legacy'};
        window.jitsuPageProps.project_slug = "ixbt";
        window.jitsuPageProps.page_type = "publication";
        window.jitsuPageProps.publication_type = "article";
        window.jitsuPageProps.publication_id = "7500";
    </script>
</head>

<body id="pagebody" class="branding">

<script>

    dataLayer.push({
        "metadataAuthor": "",
        "metadataContentType" : "article",
        "metadataIxbtProject": "ixbtcom",
        "metadataCategoryName" : "Платформа ПК",
        "metadataSubcategoryName" : "",
        "publicationId": "7500",
        "publicationType": "ixbt_article",
        "metadataType":"ixbt_article"
    });
</script>

<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TL6BLW"
                  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<noscript><div><img src="https://mc.yandex.ru/watch/25165136" style="position:absolute; left:-9999px;" alt="" /></div></noscript>


<script>
    if(getCookie('auth_param') == '?y3%rN') {

        const style = document.createElement('style');
        style.textContent = 'body{background-image: none !important; background-color: #FFF !important;}.branding .b-content__breadcrumbs, .main__container {margin-top: 0 !important;}.br-mobile-pic-bg {padding-bottom: 0 !important; background-image: none !important;}';
        document.head.append(style);
        $('#pagebody').removeClass('branding');

    }
</script>




<div class="b-content b-content__uppermenu">
<style>
    a [data-name="adtune-feedback"] {
        position: absolute;
        min-height:150px !important;
        min-width: 300px !important;

    }
</style>
<div class="slide_menu__common_overlay"></div>
<div class="slide_menu__common">

    <div class="mainmenu__list __menulist">
        <ul class="list" style="padding-bottom: 150px;">
            <li style="padding:0 0 15px 0;" class="mobile_login" id="auth_mobile_block"><a style="margin-left: 15px;" href="javascript:;" onClick="ixbtcommon_login(reload, 1)"><i class="icon icon-arrow_square"></i><span class="ixbt_login">Войти</span></a></li>
            <li><a href="/live/">Блоги</a></li>
            <li><a href="/news/">Новости</a></li>
            <li><a href="/3dv/">Видеокарты и мониторы</a></li>
            <li><a href="/supply/">Корпуса, БП, ИБП</a></li>
            <li><a href="/platform/">Платформа ПК</a></li>
            <li><a href="/projector/">Проекторы и ТВ</a></li>
            <li><a href="/ds/"> Hi-Fi и мультимедиа</a></li>
            <li><a href="/sw/">Программы и ОС</a></li>
            <li><a href="/mobilepc/">Ноутбуки и планшеты</a></li>
            <li><a href="/md/">Мобильные устройства</a></li>
            <li><a href="/printers/">Принтеры и периферия</a></li>
            <li><a href="/ch/">Комфортный дом</a></li>
            <li><a href="/data/">Носители информации</a></li>
            <li><a href="/medium/">iT-Среда</a></li>
            <li><a href="/car/">OnRoad</a></li>
            <li><a href="/nw/">Сети и серверы</a></li>
            <li><a href="/dp/">Фото</a></li>
            <li><a href="/dv/">Видео </a></li>
            <!--  <li><a href="/maclife/">Maclife</a></li> -->
        </ul>
    </div>
    <div class="addition__list">
        <li><a href="//forum.ixbt.com">Конференция</a></li>
        <li><a href="https://www.ixbt.com/news/search/">Поиск</a></li>
    </div>
</div>

<div class="b-mainmenu __mainmenu">
    <div class="mainmenu__wrapper">
        <div class="mainmenu--topline">
            <ul class="topline__left">
                <li><a href="//forum.ixbt.com">Конференция</a>
                </li>
                                <li><a href="https://ixbt.games">Games</a>
                </li>
                <li><a href="https://ixbt.photo">Фото</a>
                </li>
                <li><a href="https://komok.com">Komok</a>
                </li>
                <li><a href="https://ixbt.market">Market</a>
                </li>
                <li><a href="https://prosound.ixbt.com">Prosound</a>
                </li>
                <li><a href=" https://ixbt.pro">ПроБизнес</a>
                </li>
            </ul>
            <ul class="topline__right" id="auth_top_block2"><li><a href="javascript:;" onClick="ixbtcommon_login(reload, 1)"><i class="icon icon-arrow_square"></i><span class="ixbt_login">Войти</span></a></li></ul>
        </div>
        <div class="mainmenu--line">
            <div class="line__logo">
                <a href="/" class="w-logo">
                    <!-- desktop лого  -->
                    <i class="icon icon-logo_ixbt" style="xposition: relative;"></i>
                    <!-- Юбилейное лого  -->
                    <!-- <img src="/site2/resources/images/ixbt-logo-25.png" class="ixbt_25years" title="25 лет Online"> -->
                    <!-- <img src="/pic/digit21.png" width="43" height="33" style="position: absolute; top:10px; left: 67px;" title="21 год Online"> -->
                    <!-- <img src="/pic/ny_tree.png" width="32" height="44" style="position: absolute; top:-12px; left: 78px;" title="С Новым 2019 годом!"> -->
<!-- НГ оформление desktop <img src="/pic/ny_2020.png" width="91" height="58" style="position: absolute; top:-12px; left: 24px;" title="С Новым 2020 годом!"> -->
                </a>
            </div>
            <div class="line__menu">
                <ul class="menu__mainmenu __mainmenu mobile-hide" style="height:39px;">
                    <li><a href="/articles/current/" data-menuitem="reviews" class="">Обзоры</a>
                    </li>
                    <li><a href="/news/" data-menuitem="news" class="">Новости</a>
                    </li>
                    <li><a href="/live/" data-menuitem="blogs" class="">Блоги</a>
                    </li>
                    <li style="margin-left: 10px;"><div style="height: 28px;" id="honor-announce-banner"></div>

                        <script>
                            if (isPad || isDesktop || isMobile) {
                                window.yaContextCb.push(()=>{
                                    Ya.adfoxCode.create({
                                        ownerId: 263225,
                                        containerId: 'honor-announce-banner',
                                        params:
                                            {
                                                p1: 'cvwyc',
                                                p2: 'gvnp'
                                            }
                                    })
                                })
                            }
                        </script></li>
                </ul>
                <ul class="menu__right social_links">
                    <li>
                        <a target="_blank" rel="nofollow" title="Новостной твиттер" href="https://twitter.com/ixbtcom/">
                            <div class="social_icon_div twitter-icon-ixbt"></div>
                        </a>
                    </li>
                    <li>
                        <a target="_blank" rel="nofollow" title="Новости и статьи в Telegram" href="https://t.me/ixbt_official">
                            <div class="social_icon_div telegram-icon-ixbt"></div>
                        </a>
                    </li>
                    <li>
                        <a target="_blank" rel="nofollow" title="Страница ВКонтакте" href="https://vk.com/ixbt_official">
                            <div class="social_icon_div vkontakte-icon-ixbt"></div>
                        </a>
                    </li>
                    <li>
                        <a target="_blank" rel="nofollow" title="Дзен" href="https://dzen.ru/ixbt.com">
                            <img src="https://www.ixbt.com/site2/resources/images/zen.svg" style="width:24px; height: 24px; ">
                        </a>
                    </li>
                    <li>
                        <a target="_blank" rel="nofollow" title="Наш Youtube" href="https://www.youtube.com/c/IxbtTV">
                            <div class="social_icon_div youtube-icon-ixbt"></div>
                        </a>
                    </li>
                    <li>
                        <a target="_blank" rel="nofollow" title="RuTube" href="https://rutube.ru/channel/23474179/">
                            <svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" width="24px" height="24px" style="shape-rendering:geometricPrecision;text-rendering:geometricPrecision;image-rendering:optimizeQuality;fill-rule:evenodd;clip-rule:evenodd" viewBox="0 0 248.02 248.02"><defs><style>.str0{stroke:#fff;stroke-width:.14;stroke-miterlimit:22.9256}.fil1{fill:#fff}</style></defs><g id="Слой_x0020_1"><g id="_2756696155696"><circle cx="124.01" cy="124.01" r="124.01" style="fill:#6766b7;fill-rule:nonzero"/><path class="fil1 str0" d="M65.07 171.74V76.02h86.76c13.91 0 25.67 5.94 27.1 21.37.91 9.9.82 13.91.1 21.95-.97 10.77-5.9 18.89-19.69 21.19l22.82 31.21h-26.67l-20.79-31.21H89v31.21H65.07zm82.06-74.49L89 97.39v21.95h57.08c5.55 0 9.41 0 9.41-7.5v-6.88c0-6.77-3.45-7.72-8.36-7.71z"/><circle class="fil1 str0" cx="186.58" cy="65.26" r="12.36"/></g></g></svg>
                        </a>
                    </li>
                    <li>
                        <form action="//www.ixbt.com/news/search/" id="cse-search-box">
                            <div style="text-align: right;position: relative;">
                                <input type="hidden" name="cx" value="partner-pub-2944014748278485:43aq2mxbk7t">
                                <input type="hidden" name="cof" value="FORID:10">
                                <input type="hidden" name="ie" value="utf8">
                                <input type="text" class="search_input" name="q" size="50%" style="padding: 2px 6px; display: none;" placeholder="Введите текст для поиска....">
                                <a value="" class="btn-main-search btn-main-search" style="position: relative;">
                                    <i class="icon icon-search"></i>
                                </a>
                            </div>
                        </form>
                    </li>
                </ul>
                <!--<ul class="menu__right">
                        <li><a href="#"><i class="glyphicon-search"></i></a></li>
                        <li><a href="#"><i class="glyphicon-gear"></i></a></li>
                        <li><a href="#"><i class="glyphicon-question-sign"></i></a></li>
                </ul> -->
            </div>
        </div>

    </div>
</div>
<div class="b-mainmenu__mobile honor-mobile-menu">
    <div class="mainmenu__container">
        <div class="container__left">
            <!-- Мобильное лого  -->
            <a href="/" class="logo">
            	<!-- обычное лого -->
            	<i class="icon icon-logo_ixbt"></i>
            	<!-- Юбилейное лого  -->
            	<!-- <img src="/site2/resources/images/ixbt-logo-25.png" class="ixbt_25years_mobile"  title="25 лет Online"> -->
            </a>

            <a class="menu__part_link" href="/articles/current/">Статьи</a>
            <a class="menu__part_link" href="/news/">Новости</a>
            <div style="height: 28px;" id="honor-announce-banner-mob"></div>

            <script>
                if (isPad || isDesktop || isMobile) {
                    window.yaContextCb.push(()=>{
                        Ya.adfoxCode.create({
                            ownerId: 263225,
                            containerId: 'honor-announce-banner-mob',
                            params:
                                {
                                    p1: 'cvwyc',
                                    p2: 'gvnp'
                                }
                        })
                    })
                }
            </script>

            <a class="menu __menucaller icon-menu__open"><div style="width: 18px;" class="icon icon-burger"></div></a>

        </div>

        <!--<div class="container__right"><a href="https://www.ixbt.com/news/search/" class="search"><i class="icon icon-search"></i></a><a href="#" class="login_mobile"><i class="icon icon-arrow_square_right"></i></a></div> -->
    </div>
    <div class="mainmenu__list __menulist">
        <ul class="list" style="padding-bottom: 150px;">
            <li><a href="/news/">Новости</a></li>
            <li><a href="/3dv/">Видеокарты, мониторы</a></li>
            <li><a href="/supply/">Корпуса, БП, ИБП</a></li>
            <li><a href="/platform/">Платформа ПК</a></li>
            <li><a href="/projector/">Проекторы и ТВ</a></li>
            <li><a href="/ds/"> Hi-Fi и мультимедиа</a></li>
            <li><a href="/sw/">Программы и ОС</a></li>
            <li><a href="/mobilepc/">Ноутбуки, планшеты</a></li>
            <li><a href="/md/">Мобильные устройства</a></li>
            <li><a href="/printers/">Принтеры, периферия</a></li>
            <li><a href="/ch/">Комфортный дом</a></li>
            <li><a href="/data/">Носители информации</a></li>
            <li><a href="/medium/">iT-Среда</a></li>
            <li><a href="/car/">OnRoad</a></li>
            <li><a href="/nw/">Сети, серверы</a></li>
            <li><a href="/dp/">Фото</a></li>
            <li><a href="/dv/">Видео </a></li>
            <!--<li><a href="/maclife/">Maclife</a></li>-->
        </ul>
    </div>
</div>
</div>

<div class="b-content b-content__breadcrumbs">
    <div class="b-content--wrapper">
        <ul class="b-content__breadcrumbs_ul b-content__breadcrumbs_ul_se">
            <li><a href="/"><img src="data:image/svg+xml,%3C%3Fxml version='1.0' %3F%3E%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3Cstyle%3E.cls-1%7Bfill:none;stroke:%234f4b9f;stroke-linejoin:round;stroke-width:2px;%7D%3C/style%3E%3C/defs%3E%3Ctitle/%3E%3Cg id='_371-Home'%3E%3Cpolyline class='cls-1' points='1 16 16 1 31 16'/%3E%3Cpolyline class='cls-1' points='27 12 27 31 5 31 5 12'/%3E%3Cpolyline class='cls-1' points='12 31 12 19 20 19 20 31'/%3E%3C/g%3E%3C/svg%3E" style="width:14px; height:14px"></a></li>
                                                                        <li><a href="/platform/">Платформа ПК</a></li>
                                                            <span class="adv_button_container">
    <div class="adv_button" id="adv_button"></div>
    <script>
        if (isPad || isDesktop || isMobile) {
            window.yaContextCb.push(()=>{
                Ya.adfoxCode.create({
                ownerId: 263225,
                containerId: 'adv_button',
                params:
                        {
                            p1: 'cksvs',p2: 'gvnp','puid10':'ixbtcom','puid4':'ixbt_art','puid3':'ix_cat_platform','puid14':Math.floor((Math.random()*100)),'puid5':'h50'
                         }
    })
    })
    }
</script>
</span>


        </ul>
    </div>
</div>
<div class="b-content b-content__pagecontent">
    <div class="b-content--wrapper">
        <div class="g-grid">
            <div class="g-grid_column g-grid_column__big" data-test>
                <div class="b-article" itemscope itemtype="http://schema.org/Article">

                    <div itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
                        <div itemprop="logo image" itemscope itemtype="https://schema.org/ImageObject">
                            <img style="display: none;" itemprop="url contentUrl" src="https://www.ixbt.com/pic/articles/logo.png" />
                            <meta itemprop="width" content="113" />
                            <meta itemprop="height" content="61" />
                        </div>
                        <meta itemprop="name" content="iXBT.com - новости и обзоры IT" />
                        <meta itemprop="address" content="115201, Москва, Каширское шоссе, д. 22 кор. 3 стр. 2;" />
                        <meta itemprop="telephone" content="+7(499)519-00-95 " />
                    </div>


                    <div class="b-article__header">
                        <h1 itemprop="headline">Современные десктопные процессоры архитектуры x86</h1>
                        <a class="comment-link"></a>
                        <meta itemprop="name" content="Современные десктопные процессоры архитектуры x86  — общие принципы работы (x86 CPU digest 2.0)">
                        <meta itemprop="mainEntityOfPage" content="//www.ixbt.com/cpu/cpu-digest-2009.shtml">
                                                                                    </div>


                                    <div class="b-article__tags">
                                                            </div>

                    <div class="bcontainer b-120 bmobile-container b-first-mobile" id="n10"></div>

                    <script>

                        window.yaContextCb.push(()=>{
                            Ya.adfoxCode.create({
                                ownerId: 263225,
                                containerId: 'n10',
                                params:
                                    {
                                        p1: blocksArray.n10, p2: isMobile ? 'ftsc' : 'ftsb','puid5': isMobile ? 'm10':'h10','puid10':'ixbtcom','puid4':'ixbt_art','puid3':'ix_cat_platform','puid14':Math.floor((Math.random()*100)),'partner-stat-id':30075003                                    }
                            })
                        })
                    </script>


                
                    <div class="b-article__content" itemprop="articleBody" id="main-pagecontent__div">
                                            <div class="content"><div class="rebrand_article_content_block">общие принципы работы (x86 CPU digest 2.0)<script>    if (typeof (window.wBlocks) == "undefined") { (function (g, b, d) { var c = b.head || b.getElementsByTagName("head"), D = "readyState", E = "onreadystatechange", F = "DOMContentLoaded", G = "addEventListener", H = setTimeout; function f() { /*on script loaded*/ } H(function () { if ("item" in c) { if (!c[0]) { H(arguments.callee, 25); return; } c = c[0]; } var a = b.createElement("script"), e = false; a.onload = a[E] = function () { if ((a[D] && a[D] !== "complete" && a[D] !== "loaded") || e) { return false; } a.onload = a[E] = null; e = true; f(); return true; }; a.src = "http://whisla.com/content/scripts/whisla.scroll.js"; c.insertBefore(a, c.firstChild); }, 0); if (b[D] == null && b[G]) { b[D] = "loading"; b[G](F, d = function () { b.removeEventListener(F, d, false); b[D] = "complete"; }, false); } })(this, document); } else { whislaGetBlocks(); }</script><div class="whisla" id="whisla_cbc7b3c0-d136-4705-b355-fd93269ddeda"></div><br /><p>Этот материал представляет собой обновлённую, существенно переработанную и дополненную версию статьи 2006 года, которая называлась «<a href="x86-cpu-faq-2006.shtml">Современные десктопные процессоры архитектуры x86: общие принципы работы (x86 CPU FAQ 1.0)</a>». Правда, чтобы не вводить потенциальных читателей в заблуждение словом «FAQ», мы решили назвать новый материал более правильным, как нам кажется, термином — «дайджест». Действительно, ведь большая его часть — это не ответы на конкретные вопросы, а <em>разъяснения</em> и краткие выжимки из чего угодно — от технической документации до истории развития микропроцессорной отрасли. Для кого предназначен данный материал? Нам видятся две группы потенциальных читателей.<p>Первая — это те, кто <em>вдруг</em> обнаружил, что ему действительно интересно узнать, как работает современный x86-процессор. Для них мы попытались сосредоточить в рамках статьи максимальное количество полезных сведений, которые позволяют получить более-менее полное представление об этом процессе, даже не имея до этого (почти) никаких специальных знаний: здесь объясняется значение основных терминов, устройство современных CPU, принципы взаимодействия различных их составляющих между собой, а также процессора с компьютерной системой в целом.<p>Вторая группа — это те, кто не найдёт в статье почти ничего нового для себя — но им попросту лень писать нечто похожее самостоятельно, чтобы сосредоточить разбросанные по мозгу знания в одном месте, «причесать» их, систематизировать, упорядочить, осовременить, и так далее. Мы сами отлично понимаем, как бывает лениво писать конспекты :) (а особенно — хорошие конспекты), поэтому если наш дайджест вас устраивает — мы с радостью дарим вам возможность им пользоваться.<p>Ну и традиционное предупреждение: если иное не указано явно, то слово «процессор» в данном материале обозначает «x86(-64) процессор, предназначенный для установки в десктопы или (намного реже) мобильные компьютеры». Серверные процессоры, специализированные процессоры с архитектурой x86, всевозможные embedded-варианты — всё это в рамках статьи <em>не рассматривается</em>.Оглавление<ul><li><a href="cpu-digest-2009.shtml#01">Введение</a><ul><li><a href="cpu-digest-2009.shtml#02">Общее устройство вычислительной машины</a><li><a href="cpu-digest-2009.shtml#03">Код и данные: основной принцип работы процессора</a></ul><li><a href="cpu-digest-2009.shtml#04">Общие принципы взаимодействия процессора и ОЗУ</a><ul><li><a href="cpu-digest-2009.shtml#05">Контроллер памяти</a><li><a href="cpu-digest-2009.shtml#06">Процессорная шина</a><li><a href="cpu-digest-2009.shtml#07">Оперативная память</a><ul><li><a href="cpu-digest-2009.shtml#08">Разрядность шины памяти, N-канальные контроллеры памяти</a><li><a href="cpu-digest-2009.shtml#09">Скорость чтения и записи</a><li><a href="cpu-digest-2009.shtml#10">Латентность</a></ul></ul><li><a href="cpu-digest-2009.shtml#11">Процессор: сведения общего характера</a><ul><li><a href="cpu-digest-2009.shtml#12">Понятие архитектуры</a><ul><li><a href="cpu-digest-2009.shtml#13">Архитектура как совместимость с кодом</a><li><a href="cpu-digest-2009.shtml#14">Архитектура как характеристика семейства процессоров</a><li><a href="cpu-digest-2009.shtml#15">64-битные расширения классической x86 (IA32) архитектуры</a></ul><li><a href="cpu-digest-2009.shtml#16">Процессорное ядро</a><ul><li><a href="cpu-digest-2009.shtml#17">О многоядерности (многопроцессорности) как концепции</a><li><a href="cpu-digest-2009.shtml#18">Число ядер и технология HyperTherading</a><li><a href="cpu-digest-2009.shtml#19">Различия между ядрами одной микроархитектуры</a><li><a href="cpu-digest-2009.shtml#20">Ревизии</a><li><a href="cpu-digest-2009.shtml#21">Частота работы ядра</a></ul><li><a href="cpu-digest-2009.shtml#22">Виртуализация</a><li><a href="cpu-digest-2009.shtml#23">Особенности образования названий процессоров</a><li><a href="cpu-digest-2009.shtml#24">Измерение скорости «в мегагерцах» — как это возможно?</a><li><a href="cpu-digest-2009.shtml#25">О некоторых особенностях технологии DDR и шин HT и QPI</a><li><a href="cpu-digest-2009.shtml#26">Внешние данные: корпус, разъём, охлаждение</a>  </ul><li><a href="cpu-digest-2009.shtml#27">Процессор: детальней</a><ul><li><a href="cpu-digest-2009.shtml#28">Кэш</a><ul><li><a href="cpu-digest-2009.shtml#29">Общее описание и принцип действия</a><li><a href="cpu-digest-2009.shtml#30">Многоуровневое кэширование</a></ul><li><a href="cpu-digest-2009.shtml#31">Декодер</a><li><a href="cpu-digest-2009.shtml#32">Регистры процессора</a><li><a href="cpu-digest-2009.shtml#33">Функциональные устройства</a><ul><li><a href="cpu-digest-2009.shtml#34">Арифметико-логические устройства</a><li><a href="cpu-digest-2009.shtml#35">Блоки вычислений с плавающей запятой и векторной обработки</a><li><a href="cpu-digest-2009.shtml#36">Блоки обмена данных с памятью</a></ul><li><a href="cpu-digest-2009.shtml#37">Энергосбережение</a></ul><li><a href="cpu-digest-2009.shtml#38">Процессор: ещё детальней</a><ul><li><a href="cpu-digest-2009.shtml#39">Особенности кэшей</a><ul><li><a href="cpu-digest-2009.shtml#40">Частота работы кэша и его шина</a><li><a href="cpu-digest-2009.shtml#41">Эксклюзивный и неэксклюзивный кэш</a></ul><li><a href="cpu-digest-2009.shtml#42">Суперскалярность и внеочередное исполнение команд</a><li><a href="cpu-digest-2009.shtml#43">Предварительное (опережающее) декодирование и кэширование</a><ul><li><a href="cpu-digest-2009.shtml#44">Предсказание ветвлений</a><li><a href="cpu-digest-2009.shtml#45">Предвыборка данных</a>  </ul></ul><li><a href="cpu-digest-2009.shtml#47">Приложение: генеалогическое древо x86-процессоров</a><li><a href="cpu-digest-2009.shtml#46">Заключение</a></ul><a name="01"></a>Введение <h3><a name="02"></a>Общее устройство вычислительной машины </h3><p>Любой компьютер как универсальный инструмент для работы с информацией устроен очень просто. Все его части можно разделить на 3 вида: устройства обработки, хранения и обмена (ввода-вывода), причём последние могут осуществлять обмен данными как между компьютером и человеком, так и между другими компьютерами. С информационной точки зрения больше ничего там нет, хотя учитывая, что компьютер — устройство электрическое, ему нужен источник питания, кабели и т.п., но это общая часть всей электроники. При этом каждый элемент сам делится на компоненты вышеперечисленных трёх видов. Например, процессор относится к устройствам обработки, но внутри себя имеет блоки собственно вычислений, локальной памяти и обмена. Большая часть пока ещё непонятных терминов именует конкретные детали процессора или методы их взаимодействий. <h3><a name="03"></a>Код и данные: основной принцип работы процессора </h3><p>Если не пытаться изложить здесь «кратенько» курс информатики для средней школы, то единственное что хотелось бы напомнить — это то, что процессор (за редкими исключениями) исполняет не программы, написанные на каком-нибудь языке программирования (один из которых, вы, возможно, даже знаете), а так называемый машинный код. Т.е. командами для него являются последовательности байтов, находящихся в памяти компьютера, не имеющие ничего общего не только с каким-то человеческим языком, но и с языком программирования высокого уровня. Каждая команда занимает до нескольких байт, в среднем — 3-5. Там же, в основной памяти (ОЗУ, RAM) находятся и данные. Они могут находиться в отдельной области, а могут и быть перемешаны с кодом. Различие между кодом и данными состоит в том, что данные — это то, над чем процессор производит операции. А код — это команды, которые ему сообщают, какую именно операцию он должен произвести. Одновременно в памяти располагаются множество программ, необходимых им данных и некоторое свободное место.<div align="center"><img src="images/cpu-digest-2009/von-neumann.png" width="582" height="417" /><br /><em>Блок-схема «<a href="//www.ixbt.com/click/?c=53616c7465645f5f6812ae08ead148fcaed1c52c3a9583f95e7c05ffe4f9fee5388c072a8be51893f9a3d2e3bdba5436d2df981e145242cee855a8fc882619fb81e429d15520c0499132ff869e16ab126132ca03f40e6e1e6e4d54ba49debbe755c80572854e618c55ee9bc259d3b04b9ef0df93dfa3282afd24172edc999ed6c47e0e0e7d101732cb64db856278878d2464f0bb70ee9700bdcf0c0ee91d549992db1d06d59cd73a3e31df8de339f05a450c1cf86922ef8a0aa37b7c48943b7b191577bebe77eb029e7a4c2e42047338&h=d5a65d90c08292233f8c85d82253bcef684a4751" rel="nofollow" target="_blank" title="http://ru.wikipedia.org/wiki/%D0%90%D1%80%D1%85%D0%B8%D1%82%D0%B5%D0%BA%D1%82%D1%83%D1%80%D0%B0_%D1%84%D0%BE%D0%BD_%D0%9D%D0%B5%D0%B9%D0%BC%D0%B0%D0%BD%D0%B0">машины фон Неймана</a>»,<br /> на принципах которой построены все x86-процессоры</em></div><p>Чтобы исполнить команду, процессор должен прочитать её из памяти. Чтобы произвести операцию над данными (а этого требует почти каждая команда), процессор должен прочитать их из памяти, и, возможно, после произведения над ними определённого действия, записать их обратно в память в обновлённом (изменённом) виде. Команды и данные идентифицируются их адресом, который представляет собой порядковый номер байта в памяти, с которого эти данные начинаются (если они занимают несколько байт). <a name="04"></a>Общие принципы взаимодействия процессора и ОЗУ <p>Возможно, кого-то удивит, что достаточно большой раздел в «Дайджесте», посвящённом x86 CPU, выделен под объяснение особенностей функционирования памяти в современных системах, основанных на данном типе процессоров. Однако факты — упрямая вещь: сами x86-процессоры ныне содержат так много блоков, отвечающих именно за оптимизацию их работы с ОЗУ, что игнорировать эту тесную связь было бы совершенно нелепо. Можно сказать даже так: уж, коль решения, связанные с оптимизацией работы с памятью, стали неотъемлемой частью самих процессоров — то и саму память можно рассматривать в качестве некоего «придатка», функционирование которого оказывает непосредственное влияние на скорость работы CPU. Без понимания особенностей взаимодействия процессора с памятью, невозможно понять, за счёт чего тот или иной процессор (та или иная система) исполняет программы медленнее или быстрее. <h3><a name="05"></a>Контроллер памяти </h3><p>Итак, ранее выше мы уже говорили о том, что как команды, так и данные, попадают в процессор из оперативной памяти. На самом деле всё немного сложнее. Ещё недавно в большинстве x86-систем (т.е. компьютеров на базе x86-процессоров), процессор к памяти обращаться сам не мог, т.к. не имел в своём составе соответствующих узлов. Некоторые не самые новые, но ещё популярные линейки процессоров (Intel Core 2, Celeron и Pentium всех видов) используют такую классическую организацию и сейчас. В этой схеме процессор обращается к «промежуточному» специализированному устройству, называемому контроллером памяти, а уже тот, в свою очередь — к микросхемам ОЗУ, размещенным на модулях памяти. Модули вы наверняка видели — это такие длинные узкие текстолитовые «планочки» (фактически — небольшие платы) с несколькими микросхемами на них, вставляемые в специальные разъёмы на системной плате. Роль контроллера ОЗУ, таким образом, проста: он служит своего рода «мостом» между памятью и использующими её устройствами (а это не только процессор, но об этом — чуть позже).<div align="center"><img src="images/cpu-digest-2009/ext-vs-int.png" width="585" height="307" /><br /><em>x86-система с внешним контроллером памяти (слева)<br /> и с контроллером памяти, встроенным в процессор (справа)</em></div><p>В традиционной схеме, контроллер памяти входит в состав чипсета — набора микросхем, являющегося основой системной платы. От быстродействия контроллера во многом зависит скорость обмена данными между процессором и памятью, это один из важнейших компонентов, влияющих на общую производительность компьютера. По «новой» схеме (к ней относятся процессоры Intel Core с буквой «i», и все ныне выпускаемые CPU AMD), контроллер памяти входит в состав самого процессора — теперь никаких посредников между памятью и процессором нет, так что общаться им оказывается проще и быстрее. Однако многочисленным устройствам ввода-вывода жизнь несколько усложнилась — им путь до памяти стал на один шаг длиннее, т.к. чипсет никуда не исчез (а лишь лишился контроллера памяти), и теперь обращаться к памяти требуется через процессор, отвлекая его от выполнения программ. Тем не менее, новая схема является прогрессивной, потому что процессору важнее всего получить доступ к памяти как можно быстрее, даже ценой некоторого усложнения доступа для других устройств — именно он является главным потребителем и производителем той информации, которая записана в памяти. <h3><a name="06"></a>Процессорная шина </h3><p>Любой процессор обязательно оснащён как минимум одной процессорной шиной, которую в среде x86 CPU иногда по старинке называют FSB (Front Side Bus), хотя современные процессоры имеют для неё разные названия (QPI для Intel и HyperTransport для AMD). В многопроцессорных платах таких шин несколько, и связаны они с другими процессорами и чипсетом. В домашних компьютерах, где процессор, как правило, один, шина у него единственная (не считая шины памяти, если в процессор встроен её контроллер) и связывает его с чипсетом, а через него — со всеми остальными устройствами. <h3><a name="07"></a>Оперативная память </h3><h4><a name="08"></a>Разрядность шины памяти, N-канальные контроллеры памяти </h4><p>На сегодняшний день вся память, используемая в современных десктопных x86-системах, имеет шину шириной 64 бита. Это означает, что за один такт по данной шине одновременно может быть передано количество информации, кратное 8 байтам (8 байт для SDR-шин, 16 байт для DDR-шин). Особняком стоит только память типа RDRAM, применявшаяся в системах на базе процессоров Intel Pentium 4 на заре становления архитектуры NetBurst, но сейчас это направление признано тупиковым для x86-ПК (к слову — руку к этому приложила всё та же компания Intel, которая в своё время активно пропагандировала данный тип памяти). Некоторую неразбериху вносят лишь многоканальные контроллеры, обеспечивающие одновременную работу с несколькими отдельными друг от друга 64-битными шинами. Применительно к 2-канальным котроллерам некоторые производители заявляют о «128-битности». Однако арифметика на уровне 1-го класса в данном случае работает с оговоркой: 2x64 равно 128 только когда все каналы работают одновременно. Т.е. N-канальный контроллер памяти теоретически может увеличить скорость работы с данными в N раз, но при этом ширина каждой шины памяти во всех современных контроллерах, применяемых в x86-системах по-прежнему равна 64 битам. На данный момент времени, одноканальный контроллер памяти можно смело назвать анахронизмом: все современные x86-системы оснащены как минимум 2-канальными контроллерами памяти, а некоторые — даже 3-канальными.<br /><h4><a name="09"></a>Скорость чтения и записи </h4><p>Скорость чтения и записи информации в память теоретически ограничивается исключительно пропускной способностью самой памяти. Так, например, двухканальный контроллер памяти стандарта DDR2-800 теоретически способен обеспечить скорость чтения и записи информации, равную 8 байт (ширина шины) * 2 (количество каналов) * 2 (протокол DDR, обеспечивающий передачу 2 пакетов данных за 1 такт) * 400'000'000 (фактическая частота работы шины памяти равная 400 МГц, т.е. 400 млн. тактов в секунду). Упомянем, что полученное произведение измеряется не в МБ/с (ГБ/с), а млн. (млрд.) байт/с, что несколько меньше честных двоичных «мега-» и «гига-». Даже с учётом этого, значения, получаемые в результате практических тестов, как правило, чуть ниже теоретических: сказывается «неидеальность» конструкции контроллера памяти, плюс накладки (задержки), вызванные работой подсистемы кэширования самого процессора (см. ниже раздел про процессорный кэш). Однако основной «подвох» содержится даже не в накладках, а в том, что скорость «линейного» чтения или записи является вовсе не единственной характеристикой, влияющей на фактическую скорость работы процессора с ОЗУ. Необходимо кроме линейной скорости считывания или записи учитывать ещё и такую характеристику, как латентность. <h4><a name="10"></a>Латентность </h4><p>Латентность (она же — задержка) является не менее важной характеристикой с точки зрения быстродействия подсистемы памяти, чем скорость «прокачки данных». Большая скорость обмена данными хороша тогда, когда их размер относительно велик, но если нам требуется «понемногу с разных адресов» — то на первый план выходит именно латентность. Что это такое? В общем случае — время, которое требуется для того, чтобы начать считывать информацию с определённого адреса. И действительно: с момента, когда процессор посылает контроллеру памяти команду на считывание (запись), и до момента, когда эта операция осуществляется, проходит определённое время. Причём оно вовсе не равно времени, которое требуется на пересылку данных. Приняв команду на чтение или запись от процессора, контроллер памяти «указывает» ей, с каким адресом он желает работать. Доступ к любому произвольно взятому адресу не может быть осуществлён мгновенно. Возникает задержка: адрес указан, но память не готова предоставить к нему доступ, особенно если он указывает на слишком далёкое от предыдущей операции место (по разнице адресов). В общем случае, эту задержку и принято называть латентностью. У разных типов памяти она разная. Так, например, память типа DDR3 имеет в среднем большие задержки, чем DDR2 (при одинаковой частоте передачи данных). В результате, если данные в программе расположены «хаотично» и «небольшими кусками», либо метод считывания или записи совсем не последовательный, то скорость обмена становится намного менее важной, чем скорость доступа к «началу куска», т.к. задержки при переходе на очередной адрес влияют на быстродействие системы намного сильнее, чем скорость считывания или записи.<p>«Соревнование» между скоростью чтения (записи) и латентностью — одна из основных головных болей разработчиков современных систем: к сожалению, рост скорости чтения (записи) почти всегда приводит к увеличению латентности. Так, например, память типа DDR обладает в среднем лучшей (меньшей) латентностью, чем DDR2. В свою очередь, у DDR3 латентность ещё выше (то есть хуже), чем у DDR2. Правда, здесь следует хорошо понимать, каким образом следует правильно сравнивать латентность. Если вы интересовались данным вопросом, вам наверняка хорошо знакома строчка вида «4-4-4-12», обозначающая как раз величину задержек при выполнении некоторых операций. Задержки в данном случае указаны в тактах частоты, на которой работает память. В то же время, если нас интересует латентность как единица измерения скорости, то считать её нужно не в тактах, а в секундах. Именно на этом часто «прокалываются» не очень хорошо разбирающиеся в вопросе пользователи, не понимающие, почему латентность, к примеру, в 6 тактов, может быть меньше, чем латентность в 4 такта. А всё очень просто: например, если модуль памяти с латентностью в 6 тактов, работает на частоте 800 МГц, а модуль памяти с латентностью 4 — на частоте 400 МГц — то совершенно очевидно, что 6 тактов на частоте 800 МГц займут меньше времени, чем 4 на частоте 400.<p>Также следует понимать, что «общая» латентность подсистемы памяти зависит не только от неё самой, но и от контроллера памяти и места его расположения — все эти факторы тоже влияют на задержку. Именно поэтому компания AMD в процессе разработки архитектуры AMD64 решила «одним махом» решить проблему высокой латентности, интегрировав контроллер прямо в процессор — чтобы максимально «сократить дистанцию» между процессорным ядром и модулями ОЗУ. Затея удалась, но с подвохом: теперь система на базе процессора AMD может работать только с той памятью, на которую рассчитан контроллер процессора. Наверное, поэтому компания Intel долго не решалась на такой кардинальный шаг, предпочитая действовать традиционными методами: усовершенствуя контроллер памяти в чипсете и механизм предзагрузки в процессоре (про него см. ниже) — пока всё-таки не согласилась, что идея AMD выгодней.<p>В завершение заметим, что понятия «скорость чтения / записи» и «латентность», в общем случае, применимы к любому типу памяти — в том числе не только к классическому ОЗУ (SDR, Rambus, DDR, DDR2, DDR3, …), но и к кэшу (см. ниже). <a name="11"></a>Процессор: сведения общего характера <h3><a name="12"></a>Понятие архитектуры </h3><h4><a name="13"></a>Архитектура как совместимость с кодом </h4><p>Наверняка вы часто встречались с термином «x86», или «Intel-совместимый процессор» (или «IBM PC compatible» — но это уже по отношению к компьютеру). Иногда также встречается термин «Pentium-совместимый» (почему именно Pentium — вы поймете сами чуть позже). Что скрывается за всеми этими названиями? На данный момент наиболее корректно с точки зрения авторов выглядит следующая простая формулировка: современный x86-процессор — это процессор, способный корректно исполнять машинный код архитектуры x86-64 (архитектура 32-битных процессоров Intel, дополненная 64-битными расширениями от AMD). В первом приближении современный x86 — это код, исполняемый процессором i80386 (известным в народе как «386-й»), окончательно же основной набор команд 32-битной архитектуры IA32 сформировался с выходом процессора Intel Pentium Pro (с очень незначительным дополнениями в следующих процессорах). Что означает «основной набор» и какие есть еще? Для начала ответим на первую часть. «Основной» в данном случае означает то, что с помощью исключительно этого набора команд может быть написана любая программа для процессора архитектуры x86.<p>Кроме того, у архитектуры IA32 существуют «официальные» расширения (дополнительные наборы команд) от разработчика самой архитектуры, компании Intel: MMX, многочисленные SSE (вплоть до 4.2) и AVX. Также существуют «неофициальные» (не от Intel) расширенные наборы команд: EMMX, 3DNow!, Extended 3DNow!, SSE4.a и XOP — их разработала компания AMD. Впрочем, «официальность» и «неофициальность» в данном случае понятие относительное — де-факто всё сводится к тому, что некоторые расширения набора команд Intel как разработчик изначального набора признаёт, а некоторые — нет, разработчики же программного обеспечения используют то, что им лучше всего подходит. В отношении расширенных наборов команд существует правило хорошего тона: прежде чем их использовать, программа должна проверить, поддерживает ли их процессор. Иногда отступления от этого правила встречаются (и могут приводить к неправильному функционированию программ), но объективно это является проблемой некорректно написанной программы, а не процессора.<p>Для чего предназначены дополнительные наборы команд? В первую очередь — для увеличения быстродействия при выполнении наиболее частых операций. Одна команда из дополнительного набора, как правило, выполняет действие, для которого понадобилась бы небольшая процедура, состоящая из команд основного набора, причём специальная команда выполняется процессором быстрее, чем заменяющая её последовательность. Однако в 99% случаев ничего такого, чего нельзя было бы сделать с помощью основных команд, команды из дополнительного набора также не делают. Таким образом, упомянутая выше программная проверка поддержки дополнительных наборов команд процессором должна выполнять очень простую функцию: если, например, процессор поддерживает SSE — значит, считать будем быстро и с помощью команд из набора SSE. Если нет — будем считать медленнее, с помощью команд из основного набора. Корректно написанная программа обязана действовать именно так. Впрочем, сейчас практически никто не проверяет у процессора наличие поддержки MMX, т.к. все CPU, вышедшие за последние 10 лет, этот набор поддерживают гарантированно. Для справки приведём табличку, на которой обобщена информация о поддержке различных расширенных наборов команд различными десктопными (предназначенными для настольных ПК) и некоторыми мобильными процессорами.<table><tr class="thead"><td>Процессор</td><td>Год выпуска</td><td>x86-64</td><td>PPro</td><td>MMX</td><td>Версия<br />SSE</td><td>3DNow!</td></tr><tr class="thead"><td colspan="7"><em>Процессоры Intel</em></td></tr><tr class="row1"><td>Pentium</td><td>1993</td><td></td><td></td><td></td><td></td><td></td></tr><tr class="row2"><td>Pentium Pro</td><td>1995</td><td></td><td>x</td><td></td><td></td><td></td></tr><tr class="row1"><td>Pentium MMX</td><td rowspan="2">1997</td><td></td><td></td><td>x</td><td></td><td></td></tr><tr class="row2"><td>Pentium II</td><td></td><td>x</td><td>x</td><td></td><td></td></tr><tr class="row1"><td>Celeron</td><td>1998</td><td></td><td>x</td><td>x</td><td></td><td></td></tr><tr class="row2"><td>Pentium III</td><td>1999</td><td></td><td>x</td><td>x</td><td>1</td><td></td></tr><tr class="row1"><td>Pentium 4</td><td rowspan="2">2000</td><td></td><td>x</td><td>x</td><td>2</td><td></td></tr><tr class="row2"><td>Celeron</td><td></td><td>x</td><td>x</td><td>1</td><td></td></tr><tr class="row1"><td>Celeron</td><td>2002</td><td></td><td>x</td><td>x</td><td>2</td><td></td></tr><tr class="row2"><td>Pentium M</td><td>2003</td><td></td><td>x</td><td>x</td><td>2</td><td></td></tr><tr class="row1"><td>Pentium 4</td><td rowspan="2">2004</td><td>x</td><td>x</td><td>x</td><td>3</td><td></td></tr><tr class="row2"><td>Celeron D</td><td></td><td>x</td><td>x</td><td>3</td><td></td></tr><tr class="row1"><td>Pentium D, EE</td><td rowspan="2">2005</td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">3</td><td></td></tr><tr class="row2"><td>Celeron D</td><td></td></tr><tr class="row1"><td>Celeron</td><td rowspan="4">2006</td><td>x</td><td>x</td><td>x</td><td>3S</td><td></td></tr><tr class="row2"><td>Celeron M</td><td rowspan="2"></td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">3</td><td></td></tr><tr class="row1"><td>Core Solo, Duo</td><td></td></tr><tr class="row2"><td>Core 2</td><td>x</td><td>x</td><td>x</td><td>3S</td><td></td></tr><tr class="row1"><td>Core 2</td><td rowspan="4">2007</td><td>x</td><td>x</td><td>x</td><td>4.1</td><td></td></tr><tr class="row2"><td>Celeron M</td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">3S</td><td></td></tr><tr class="row1"><td>Pentium (DC)</td><td></td></tr><tr class="row2"><td>Pentium (DC, M)</td><td></td><td>x</td><td>x</td><td>3</td><td></td></tr><tr class="row1"><td>Atom</td><td rowspan="3">2008</td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">3S</td><td></td></tr><tr class="row2"><td>Celeron (DC)</td><td></td></tr><tr class="row1"><td>Core i7</td><td>x</td><td>x</td><td>x</td><td>4.2</td><td></td></tr><tr class="row2"><td>Core i3, i5</td><td>2009</td><td>x</td><td>x</td><td>x</td><td>4.2</td><td></td></tr><tr class="row1"><td>Core i9</td><td>2010</td><td>x</td><td>x</td><td>x</td><td>4.2</td><td></td></tr><tr class="thead"><td colspan="7"><em>Процессоры AMD</em></td></tr><tr class="row1"><td>K5</td><td>1996</td><td></td><td></td><td></td><td></td><td></td></tr><tr class="row2"><td>K6</td><td>1997</td><td></td><td></td><td>x</td><td></td><td></td></tr><tr class="row1"><td>K6-3D, K6-2+</td><td>1998</td><td></td><td></td><td>x</td><td></td><td>x</td></tr><tr class="row2"><td>K6-III</td><td rowspan="2">1999</td><td></td><td></td><td>x</td><td></td><td>x</td></tr><tr class="row1"><td>Athlon</td><td></td><td>x</td><td>x</td><td></td><td>x</td></tr><tr class="row2"><td>Duron</td><td>2000</td><td></td><td>x</td><td>x</td><td></td><td>x</td></tr><tr class="row1"><td>Athlon XP</td><td rowspan="3">2001</td><td rowspan="3"></td><td rowspan="3">x</td><td rowspan="3">x</td><td rowspan="3">1</td><td rowspan="3">x</td></tr><tr class="row2"><td>Athlon 4 (M)</td></tr><tr class="row1"><td>Duron</td></tr><tr class="row2"><td>Athlon 64</td><td>2003</td><td>x</td><td>x</td><td>x</td><td>2</td><td>x</td></tr><tr class="row1"><td>Sempron</td><td>2004</td><td></td><td>x</td><td>x</td><td>1 (2)</td><td>x</td></tr><tr class="row2"><td>Athlon XP-M</td><td rowspan="5">2005</td><td></td><td>x</td><td>x</td><td>2</td><td>x</td></tr><tr class="row1"><td>Sempron</td><td>x</td><td>x</td><td>x</td><td>2 (3)</td><td>x</td></tr><tr class="row2"><td>Athlon (64) X2</td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">3</td><td rowspan="2">x</td></tr><tr class="row1"><td>Turion (M)</td></tr><tr class="row2"><td>Sempron (M)</td><td></td><td>x</td><td>x</td><td>3</td><td>x</td></tr><tr class="row1"><td>Phenom</td><td>2007</td><td>x</td><td>x</td><td>x</td><td>4.a</td><td>x</td></tr><tr class="row2"><td>Athlon X2</td><td>2008</td><td>x</td><td>x</td><td>x</td><td>4.a</td><td>x</td></tr><tr class="row1"><td>Athlon Neo</td><td rowspan="3">2009</td><td>x</td><td>x</td><td>x</td><td>3</td><td>x</td></tr><tr class="row2"><td>Phenom II</td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">x</td><td rowspan="2">4.a</td><td rowspan="2">x</td></tr><tr class="row1"><td>Athlon II, X3, X4</td></tr></table><p>Примечания:<br />PPro — означает наличие всех общих команд;<br />Версия SSE — номер последней поддерживаемой версии, подразумевая и все предыдущие;<br />Ряд SSE: SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2;<br />Для процессоров AMD наличие SSE4.a означает поддержку только SSE, SSE2, SSE3 и SSE4.a;<br />(M) — мобильная модель, даже если явно в имени не указано;<br />(DC) — двухядерный процессор, указано в индексе модели.<p>На данный момент всё популярное десктопное программное обеспечение (операционные системы Windows и Linux, офисные пакеты, компьютерные игры, и прочее) разрабатывается именно для x86-процессоров. Оно выполняется (за исключением «дурно воспитанных» программ) на любом x86-процессоре, независимо от того, кто его произвёл. Поэтому вместо ориентированных на разработчика изначальной архитектуры терминов «Intel-совместимый» или «Pentium-совместимый», стали употреблять нейтральное название: «x86-совместимый процессор», «процессор с архитектурой x86». В данном случае под «архитектурой» понимается архитектура системы команд (ISA, <a href="//www.ixbt.com/click/?c=53616c7465645f5f58f4d0e024e14df291ebdf3f949f446610f17b86289342846dc220ed861021e46ee45fe70ad2c2c94a98164376f251dee874934418119f97b68b1a351411374612df3894c35ba290&h=f8da5f20b498e5b340d423d4fbc133b65dde9a71" rel="nofollow" target="_blank" title="http://en.wikipedia.org/wiki/Instruction_set">Instruction Set Architecture</a>) — совместимость с определённым набором команд с точки зрения программиста. Есть и другая трактовка того же термина. <h4><a name="14"></a>Архитектура как характеристика семейства процессоров </h4><p>«Железячники» — люди, работающие в основном не с программным обеспечением, а с аппаратным — под «архитектурой» понимают несколько другое (правда, более корректно то, что они называют «архитектурой», называется «микроархитектурой», но приставку «микро» частенько опускают). Для них «архитектура CPU» — это некий набор свойств, присущий целому семейству процессоров, как правило, выпускаемому в течение многих лет (иначе говоря — их организация и «внутренняя конструкция»). Например, любой специалист по x86 CPU вам скажет, что процессор с ALU, работающими на удвоенной частоте, QDR-шиной, Trace cache, и, возможно, поддержкой технологии Hyper-Threading — это «процессор архитектуры NetBurst» (не пугайтесь незнакомых терминов — все нужные будут разъяснены чуть позже). Таким образом, понятие «архитектуры» применительно к процессорам двойственно: под ним может пониматься как совместимость с единым набором команд, так и совокупность аппаратных решений, присущих определённой достаточно широкой группе процессоров. <h4><a name="15"></a>64-битные расширения классической x86 (IA32) архитектуры </h4><p>В 2003 г. сначала AMD, а через год — и Intel, анонсировали практически идентичные технологии (впрочем, AMD предпочитает называть это архитектурой), благодаря которым классические x86 (IA32) CPU получили статус 64-битных. В случае с AMD данная технология получила наименование «AMD64», в случае с Intel — сначала «EM64T», а теперь Intel 64. Впрочем, сегодня часто указывают нейтральное «x86-64» — как общее обозначение всех 64-битных расширений архитектуры x86, не привязанное к зарегистрированным торговым маркам. Употребление одного из трёх приведённых наименований зависит больше от личных предпочтений употребляющего, чем от фактических различий — ибо различия между AMD64 и EM64T умещаются на кончике очень тонкой иглы. Так или иначе, всё сводится к следующему: все целочисленные регистры (общего назначения) стали вместо 32-битных 64-битными, число регистров (и общих, и векторных) удвоилось, 32-битные команды x86-кода получили свои 64-битные аналоги, а объём адресуемой памяти (и физической, и виртуальной) многократно увеличился (за счёт того, что логический адрес приобрёл вместо 32-битного 64-битный формат). Количество маркетинговых спекуляций на тему «64-битности» превысило все разумные пределы, поэтому следует рассмотреть достоинства данного нововведения.<p>Что не изменилось? В первую очередь — быстродействие процессоров. Вопиющей глупостью будет считать, что один и тот же процессор при переходе из привычного 32-битного в 64-битный режим (а 32-битный режим все нынешние x86 CPU поддерживают в обязательном порядке) станет работать вдвое быстрее. Разумеется, в некоторых случаях ускорение от использования 64-битной целочисленной арифметики может присутствовать — но количество этих случаев сильно ограничено, и большинства современного пользовательского программного обеспечения они никак не касаются. Кстати: а почему мы употребили термин «64-битная целочисленная арифметика»? А потому, что блоки операций с плавающей точкой (см. ниже) во всех x86-процессорах уже давным-давно не 32-битные. И даже не 64-битные. Классический вещественный вычислитель, окончательно ставший частью CPU ещё во времена старого доброго 32-битного Intel Pentium* — уже был 80-битным (и до сих пор таков). Векторные операнды команд SSE (с любой цифрой) — и вовсе 128-битные! В этом плане архитектура x86 достаточно парадоксальна: притом, что формально процессоры данной архитектуры достаточно долгое время оставались 32-битными — разрядность тех блоков, где «большая битность» была реально необходима — наращивалась совершенно независимо от остальных (<a href="cpu-bitness.shtml">более подробно о проблеме разрядности процессоров можно почитать в отдельном материале</a>). Например, процессоры AMD Athlon XP и Intel Pentium 4 «Northwood» совмещали в себе блоки, работающие с 32-битными, 80-битными, и 128-битными операндами. 32-битными оставались лишь основной набор команд (унаследованный от первого процессора архитектуры IA32 — Intel 386) и адресация памяти (максимум 4 гигабайта, если не считать «эквилибристического выверта» от Intel — <a href="//www.ixbt.com/click/?c=53616c7465645f5f03a4fb8d08864d99cb5417992db23dc62bf26f5ec31885936145dbddc233c1f0751a54093339124deb4bf9baaefcf848821d0c7092cd4d6007ec9a5863f3784d0060d08ec695d534&h=da7b8956c192abe4df7ab333e657e1b3230e9140" rel="nofollow" target="_blank" title="http://ru.wikipedia.org/wiki/PAE">Physical Address Extension</a>, позволявшего «32-битным» процессорам использовать 36(!)-битную адресацию).<blockquote>* — первым x86 CPU, в который был интегрирован FPU (ранее он устанавливался на плату в качестве отдельного чипа), стал процессор предыдущего поколения — i486DX. Но в линейке i486 всё-таки присутствовал i486SX, в состав которого FPU не входил. Начиная с Pentium, Intel больше не выпускала x86 CPU без FPU, и эту моду быстро подхватили все остальные производители.</blockquote><p>Таким образом, то, что процессоры AMD и Intel стали «формально 64-битными», на практике принесло нам лишь три усовершенствования: появление команд для работы с 64-битными целыми числами, увеличение количества и/или разрядности регистров, и увеличение максимального объёма адресуемой памяти. Заметим: реальной пользы этих нововведений (особенно третьего!) никто не отрицает. Равно как никто не отрицает заслуг компании AMD в продвижении идеи «осовременивания» (за счёт введения 64-битности) x86-процессоров. Мы лишь хотим предостеречь от чрезмерных ожиданий: не стоит надеяться на то, что компьютер, покупавшийся «в ценовом классе ВАЗа», от установки 64-битного программного обеспечения станет «лихим Мерседесом». Чудес на свете не бывает... <h3><a name="16"></a>Процессорное ядро </h3><h4><a name="17"></a>О многоядерности (многопроцессорности) как концепции</h4><div align="center"><img src="images/cpu-digest-2009/1-th-1-cpu.png" width="311" height="486" /><br /><br /><em>Классическая одноядерная (однопроцессорная) схема: в памяти находится код нескольких программ («кирпичики» разного цвета), но в один момент времени процессор выполняет код только одной из них</em></div><p>Прежде, чем мы начнём описывать особенности многоядерных систем, нужно вначале объяснить, зачем вообще они нужны, и как за счёт большего количества ядер и/или процессоров может достигаться  положительный эффект. В данном случае мы для простоты считаем, что система, собранная на базе одного процессора с двумя ядрами, практически идентична по функционалу системе на базе двух процессоров с одним ядром — если ядра в обоих случаях идентичны*. Более подробное разъяснение можно прочитать в отдельном, более сложном материале, но хотя бы схематически описать ситуацию просто необходимо. Всё нижесказанное относится к концепции SMP (<a href="//www.ixbt.com/click/?c=53616c7465645f5f3c9a0b02cc2e7e09756e81918e27dd5ca7a339b93a5a5515d37b008a6d8255c609389c0d2d5f2984abc705df8fb0836bdb792092c50aeeabb4a17ec48d00ecf957f9bf0e118a3c55c5ae45f1d70647e8163a7c35d7d31a5bec09303cc27085ba5abdcd617c36ae76cca406de8580fce3b2b11a25898b970c17b00db97c38aadcfaae8264ca3ff4a99d25027c2838b04aa94a6090f1fbb1c5046577f77b94d17cedbd43d42003b85488cc5faf148001de8bb407773b1e1ca27635d63e4b4b2e11c916715b6bd06c54abe6add6aad352f4a28bc8175fdf1d8eec950cddf38ed3b9092c2e92a11eb25a68e9fd3ed0aff5154dd3638aba83009330f32f6728c6c75fd60ceae7656824a9&h=0223ed6c86271c6012086274897c4bdf3887e3ef" rel="nofollow" target="_blank" title="http://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D0%BC%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%87%D0%BD%D0%BE%D0%B5_%D0%BC%D1%83%D0%BB%D1%8C%D1%82%D0%B8%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D1%81%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5">Symmetric Multiprocessing</a>, cимметричная многопроцессорность), т.к. пока на x86 прижился именно этот вариант. Он требует, чтобы при любом числе процессоров (строго говоря — процессорных ядер) в системе они все были одинаковые, каждый может быть заменен любым другим, и все они осуществляют доступ к одному и тому же массиву памяти.<blockquote> * — pаньше многоядерный процессор на массовом рынке был мечтой практически неосуществимой, поэтому в тех отраслях, где требовалась высокая производительность в специфических задачах, использовались системы не многоядерные, а многопроцессорные. Вместо того, чтобы интегрировать N ядер в один чип — на системную плату устанавливали N разъёмов, и в них — N одноядерных процессоров. Условно, современный десктоп на N-ядерном процессоре, можно приравнять к N-процессорной системе. Впрочем, многопроцессорные системы есть и сейчас — для тех, кого не устраивает максимально возможное количество ядер в одном CPU. Так, например, если вам нужна 16-процессорная (16-ядерная) система — то ввиду отсутствия 16-ядерных x86-процессоров (пока, на 2009 г.…), вам придётся согласиться на 4-процессорную систему, в которой у каждого процессора будет по 4 ядра.</blockquote><div align="center"><img src="images/cpu-digest-2009/4-cpu-mb.png" width="391" height="435" /><br /><em>4-процессорная системная плата, в каждый сокет которой можно установить<br /> 6-ядерный процессор. В результате мы получим 24-ядерную x86-систему.</em></div><p>Итак, наш главный вопрос: для чего всё это нужно? Каким образом за счёт увеличения количества ядер (процессоров) увеличивается быстродействие? Сразу расскажем, какой основной вопрос возникает при более детальном ознакомлении с многоядерными (многопроцессорными) системами: <em>«Почему быстродействие увеличивается в разных случаях по-разному, а иногда не увеличивается вовсе?»</em> Проще всего разъяснить это на примере простой и понятной аналогии с неким количеством работы, и неким количеством людей. Рассмотрим два самых распространённых варианта.<p><strong><em>Вариант №1:</em></strong> несколько совершенно независимых друг от друга задач. Например, мы находимся в загородном доме, и нам необходимо наколоть дров и выкосить газон. Если у нас в распоряжении один человек — он будет вынужден сделать сначала одно дело, а потом другое, либо делать их параллельно, переключаясь между ними — но всё равно в один конкретный момент времени он будет занят чем-то одним. Если же есть два человека — то один может заняться колкой дров, а другой — косить газон. Заметьте: <em>сами по себе задачи не стали выполняться быстрее — но мы экономим время за счёт того, что они выполняются параллельно</em>. Продолжив аналогию, вы легко поймёте основной недостаток наращивания в данной ситуации количества людей  до бесконечности (а они у нас олицетворяют процессорные ядра или одноядерные процессоры): рано или поздно для ещё одного человека просто не найдётся работы. Или ресурсов: например, колоть дрова можно и вдвоём — но что делать, если у нас всего один топор?<p><strong><em>Вариант №2:</em></strong> одна частично или полностью распараллеливаемая задача. Почти идеально распараллеливаемая задача (при условии, как уже было упомянуто выше, наличия должного количества ресурсов) — это та же колка дров, или, например, мытьё полов. Каждому в руки по швабре и ведру, каждому свой участок пола — и вперёд! Вы, правда, наверняка заметите, на основании банального житейского опыта, что ещё и задача должна быть соответствующего масштаба: хорошо мыть полы вчетвером в большом доме, но совершенно бессмысленно — в одной комнатушке. В случае с многоядерностью всё совершенно аналогично: быстро выполняемая задача, даже если она хорошо параллелится, вызывает давно известный эффект: согласование действий между выполняющими работу начинает занимать время, сопоставимое с временем выполнения самой работы каждым исполнителем. Русская пословица «у семи нянек дитя без глаза» примерно характеризует данную ситуацию.<p>Более сложный случай — например, варка борща. Конечно, хозяйка может поручить кому-то почистить овощи, кому-то нарезать, и т.д., но всё равно на некотором этапе у нас начнётся достаточно длительный процесс (собственно варки), в котором участие более чем одного человека совершенно не требуется. Это и есть частично распараллеливаемая задача: некоторые её этапы могут выполняться параллельно, а некоторые — нет. Совершенно очевидно, что <em>даже если выделить на выполнение этой задачи двух людей, в 2 раза её выполнение не ускорится</em> (а если четырёх — то в случае с борщом, четвёртый может оказаться в большинстве случаев лишним). И у многоядерных процессоров на частично распараллеливаемой задаче не все ядра могут задействоваться одновременно всё время. А значит, некоторые из них как минимум иногда будут простаивать.<p>Подытожим: добавление ещё одного ядра не всегда приводит к ускорению, а даже если и приводит — то не всегда настолько, сколько можно было бы ожидать в идеальном случае. Фактически, всё зависит от решаемых задач (используемых программ). Некоторые задачи параллелятся хорошо, некоторые — не очень, некоторые не параллелятся вообще. Почти идеально в большинстве случаев параллелятся две независимых задачи, но… для этого нужно, чтобы у вас достаточно часто возникала потребность решать несколько независимых задач одновременно! Говоря конкретней, двухъядерный процессор на программах обычного пользователя в среднем получит ускорение примерно раза в полтора, а 4-ядерный — примерно в два по сравнению с одноядерным. А вот при запуске «профессиональных» программ кратность ускорения часто почти равна числу ядер.<h4><a name="18"></a>Число ядер и технология Hyper-Threading </h4><p>Первое, что надо сказать о ядрах — в одном процессоре их бывает много. В вашем их, скорее всего, не менее двух, а вообще их может быть от 1 до 6 (скоро — и больше). Все ядра одинаковые, но кроме них в процессоре есть и обслуживающие их общие блоки — общий кэш, контроллер памяти и шины обмена с другими процессорами и/или с чипсетом. В новейших процессорах к этому списку скоро добавятся и специализированные ядра, например, для 3D-графики и декодирования видео. Когда говорят об устройстве ядер, то имеют ввиду каждое ядро многоядерного процессора (даже если говорится «ядро» в единственном числе).<div align="center"><img src="images/cpu-digest-2009/2-th-2-cpu.png" width="614" height="489" /><br /><em>Многоядерная (многопроцессорная) система: благодаря наличию двух ядер (процессоров), можно одновременно исполнять код двух программ</em></div><p>Как было сказано, у многоядерности есть ограничения по увеличению производительности. Когда задачи или их части выполняются параллельно, ядра конкурируют за доступ к общим блокам. Например, если запустить две задачи, сильно зависящие от пропускной способности памяти, и которым не хватит объёма кэша каждого ядра, то производительности общего для ядер кэша, а также контроллера памяти может быть недостаточно, чтобы насытить сразу два ядра. В результате они оба будут простаивать до половины времени — реальное увеличение скорости по сравнению с однопоточным исполнением может быть околонулевым. Противоположная ситуация, когда программы оптимизированы под многоядерные процессоры и не перегружают разделяемые ресурсы, выглядит примерно так: процессор исполняет столько потоков, сколько у него ядер, причём каждый поток в основном использует блоки своего ядра, а общение ядер между собой, а также с памятью достаточно редко, чтобы даже исполнение нескольких потоков не перегружало общие элементы процессора и не приводило к задержкам работы ядер. Подобрать по такому критерию несколько разных программ весьма сложно, а вот оптимизировать одну — удаётся куда чаще. Именно в таких случаях и удаётся получить то, что называется линейным ростом производительности от числа потоков (фактически — ядер): 2 ядра работают вдвое быстрее одного, 4 — вдвое быстрее двух, и т.д.. Всё вышесказанное касается и многопроцессорных систем, где число ядер каждого CPU надо умножить на число последних.<p>Дополнительную сложность вносит поддержка некоторыми процессорами технологии Hyper-Threading (гиперпоточности). Она позволяет одному ядру работать за два — хотя и не так эффективно, как реально существующая пара ядер, зато куда дешевле. При этом операционная система сообщает о процессоре с вдвое большим числом ядер, поскольку видит число ядер логических (по максимальному количеству одновременно запускаемых программ), а не физических (по числу реально выполняемых). Изменение производительности может быть от почти незаметного замедления до внушительного (20-50 %) ускорения и сильно зависит от набора исполняемых программ, а в среднем же ускорение равно 10-15%. К сожалению, чем лучше программа оптимизирована под настоящую многоядерность, тем меньше она выиграет от «виртуальной» за счёт Hyper-Threading.<div align="center"><img src="images/cpu-digest-2009/2-th-1-cpu.png" width="311" height="486" /><br /><em>Процессор с поддержкой Hyper-Threading: на одном физическом ядре одновременно выполняется код двух приложений</em></div><h4><a name="19"></a>Различия между ядрами одной микроархитектуры</h4><p> «Процессорное ядро» (как правило, для краткости его называют просто «ядро») — это конкретное воплощение (микро)архитектуры (т.е. архитектуры в «аппаратном» смысле), являющееся стандартом для целой серии процессоров. Например, K10 — это микроархитектура, которая лежит в основе многих сегодняшних процессоров AMD: Athlon II, Phenom, Phenom II, Opteron. Микроархитектура задаёт общие принципы: «средний» по длине конвейер, исполнение до трёх команд за такт, предсказание переходов и внеочередное исполнение, и прочие «глобальные» особенности. Ядро — более конкретное воплощение. Например, процессоры микроархитектуры К10 с двумя ядрами, без поддержки многопроцессорности и кэша L3, с шиной HyperTransport частотой в 2 ГГц — это более-менее полное описание ядра Regor для Athlon II.<p>Можно сказать что «ядро» — это конкретное воплощение определённой микроархитектуры «в кремнии», обладающее (в отличие от самой микроархитектуры) набором строго обусловленных характеристик. Микроархитектура — аморфна, она описывает общие принципы построения процессора. Ядро — микроархитектура, «обросшая» всевозможными параметрами и характеристиками. Чрезвычайно редки случаи, когда процессоры сменяли микроархитектуру, сохраняя название. И, наоборот, практически любое наименование процессора хотя бы несколько раз за время своего существования «меняло» ядро. Например, общее название серии процессоров AMD — «Athlon 64» — это одна микроархитектура (K8), но целых 13 ядер — от Sledgehammer (2003 г.) до Huron (2009 г.). Разные ядра, построенные на одной микроархитектуре, могут иметь в том числе разное быстродействие. <h4><a name="20"></a>Ревизии </h4><p>Ревизия — одна из модификаций ядра, крайне незначительно отличающаяся от предыдущей, почему и не заслуживает звания «нового ядра». Как правило, из выпусков очередной ревизии производители процессоров не делают большого события, это происходит «в рабочем порядке». Так что даже если вы покупаете один и тот же процессор, с полностью аналогичным названием и характеристиками, но с интервалом где-то в полгода — вполне возможно, фактически он будет уже немного другой. Выпуск новой ревизии, как правило, связан с какими-то мелкими усовершенствованиями. Например, удалось чуть-чуть снизить энергопотребление, понизить напряжение питания, что-то оптимизировать, или была устранена пара мелких (иногда не очень…) ошибок. С точки зрения производительности была всего пара примеров, когда бы одна ревизия ядра отличалась от другой настолько существенно, чтобы об этом имело смысл говорить. Хотя чисто теоретически возможен и такой вариант — например, подвергся оптимизации один из блоков процессора, ответственный за исполнение нескольких команд. Подводя итог, можно сказать что «заморачиваться» ревизиями процессоров чаще всего не стоит: в очень редких случаях изменение ревизии вносит какие-то кардинальные изменения. <h4><a name="21"></a>Частота работы ядра </h4><p>Как правило, именно этот параметр в просторечии именуют «частотой процессора». Хотя в общем случае определение «частота работы ядра» всё же более корректно, так как совершенно не обязательно все составляющие CPU функционируют на той же частоте, что и ядро (наиболее частым примером обратного являлись старые «слотовые» x86 CPU — Intel Pentium II и Pentium III для Slot 1, AMD Athlon для Slot A — у них L2-кэш функционировал на 1/2, и даже иногда на 1/3 частоты работы ядра). Примерно также сегодня в большинстве процессоров работает кэш L3 — на своей отдельной частоте, меньшей, чем у каждого ядра. Ещё одним распространённым заблуждением является уверенность в том, что частота работы ядра однозначным образом определяет производительность. Это дважды не так.<p>Во-первых, каждое конкретное процессорное ядро (в зависимости от того, как оно спроектировано, сколько содержит исполняющих блоков различных типов, и т.д. и т.п.) может исполнять разное число команд за один такт, частота же — это всего лишь количество таких тактов в секунду. Таким образом (приведённое далее сравнение, разумеется, очень сильно упрощено) процессор, ядро которого исполняет 3 инструкции за такт, может иметь на треть меньшую частоту, чем процессор, исполняющий 2 инструкции за такт — и при этом обладать полностью аналогичным быстродействием.<p>Во-вторых, даже в рамках одного и того же ядра, увеличение частоты вовсе не всегда приводит к пропорциональному увеличению быстродействия. Здесь вам очень пригодятся знания, которые вы могли почерпнуть из раздела «Общие принципы взаимодействия процессора и ОЗУ». Дело в том, что скорость исполнения команд ядром процессора — это вовсе не единственный показатель, влияющий на скорость выполнения программы. Не менее важна скорость поступления команд и данных на CPU. Представим себе чисто теоретически такую систему: быстродействие процессора — 10'000 команд в секунду, скорость работы памяти — 1000 байт в секунду. Даже если принять, что одна команда занимает не более одного байта, а данных у нас нет совсем, с какой скоростью будет исполняться программа в такой системе? Не более 1000 команд в секунду, и производительность CPU тут совершенно ни при чём: мы будем ограничены не ей, а скоростью поступления команд в процессор. Таким образом, следует понимать: невозможно непрерывно наращивать одну только частоту ядра, не ускоряя одновременно подсистему памяти, так как в этом случае начиная с определённого этапа, увеличение частоты CPU перестанет сказываться на увеличении быстродействия системы в целом.<p>Наконец, у компании Intel есть технология TurboBoost, особенность которой в том, что процессоры с её поддержкой вообще не имеют никакой конкретной частоты чего-либо. Смысл TurboBoost — увеличивать частоту загруженных ядер в зависимости от числа простаивающих, а также от температуры и энергопотребления всего процессора. В результате «нормальная» частота (написанная на коробке процессора или в прайс-листе) реально почти всегда будет превышена на 133-666 МГц (в мобильных процессорах серии Core i7 возможен разгон на 1333 МГц, если работает только одно ядро), причём всё время меняясь. Грубо говоря, можно сказать, что TurboBoost даст примерно +10% к скорости «за просто так». <h3><a name="22"></a>Виртуализация</h3><p>Виртуализация в вычислительной технике — это возможность запускать несколько операционных систем (и программы из-под каждой из них) так, что они будут работать будто бы на своих отдельных компьютерах (т.е. подразумевается виртуализация «железа» по отношению к програмам). Впервые она появилась аж в 60-е годы на мейнфреймах IBM и до недавнего времени была полезна лишь для программирования и высокопроизводительных сетевых серверов. Однако новая ОС фирмы Microsoft Windows 7 уже требует аппаратную поддержку виртуализации в процессоре, если предполагается запускать 32-битные программы, написанные для Windows XP и более ранних версий (т.е. читай — всегда). Так зачем нужна эта аппаратная поддержка, если ранее и программной справлялись? <p>Аппаратная поддержка виртуализации в процессоре фактически означает наличие дополнительного поднабора команд, который позволяет инициировать, вызвать, завершать и переключать виртуальные ОС быстрее и с более надёжной изоляцией друг от друга (что важно для устойчивости и безопасности всей системы), чем программными средствами. Как обычно, оба главных производителя CPU стараются подчеркнуть преимущества своих реализаций, так что им даны разные имена: Intel Virtualization Technology (Intel VT) и AMD Virtualization (AMD-V). Причём между ними действительно есть небольшая разница, но, опять же, крайне незначительная и не приводящая к несовместимости. С точки зрения пользователя вердикт прост — поддержку виртуализации в процессоре лучше иметь, чем не иметь, т.к. даже если она не пригодится сейчас, то, возможно, пригодится через пару лет, а разница в стоимости у процессоров с и без неё почти незаметна. Более того — в новых CPU, виртуализацию поддерживают все модели, так что «хочешь, не хочешь»… <h3><a name="23"></a>Особенности образования названий процессоров </h3><p>Раньше, когда небо было голубее, пиво — вкуснее, а девушки — красивее <em>(прим. ред.: мнение редакции не всегда совпадает с мнением авторов, особенно насчёт девушек)</em>, процессоры называли просто: имя производителя + название модельного ряда («линейки») + частота. Например: «AMD K6-2 450 MHz». В настоящее время оба основных производителя от этой традиции отошли и вместо частоты употребляют какие-то непонятные циферки, обозначающие невесть что. В первой версии статьи на этом месте было краткое объяснение того, что же эти циферки обозначают. Однако с тех пор (а прошло всего 3 года) оба основных производителя x86 CPU неоднократно меняли и дополняли эти правила, так что фактически уследить за ними в рамках даже регулярно обновляющегося цикла статей невозможно, да и не очень требуется. Есть способы лучше. Если вам нужно узнать основные характеристики какого-то процессора, проще всего просто набрать его полное имя в Гугле или Яндексе, и среди первой десятки результатов вы наверняка найдёте краткое описание его внутренностей. Если же требуется сравнить разные процессоры, названия которых вы не помните или не знаете, подойдёт Википедия: вот список <a href="//www.ixbt.com/click/?c=53616c7465645f5f690a6a8017f0b37bfc6a60fe53557525453eb3cc6e63ab7dee0d00490f5150f555417623a3a920fad03d3db45e98ec75c9c617b225415c24fb5cadbc8e5be8360e8667c724dea618249a2a74d8c23e0af42afb129a65c074&h=650cdae437a7ad18c08365b5355ac85203d67659" rel="nofollow" target="_blank" title="http://en.wikipedia.org/wiki/List_of_AMD_microprocessors">всех процессоров AMD</a>, а вот — <a href="//www.ixbt.com/click/?c=53616c7465645f5fc0f60e7c807deab64040c02cd0b24783bc463ecdb7518833752385575c86e704116fe8b0dc17b83f4628bc1713db07e872c1edff4a2591d1503702291bc33f6d64a00b99694a83fab045195849ca7ab5ebd84dee51620431&h=98ede28b92760a6356b3c5d72bb6d275da8b7a83" rel="nofollow" target="_blank" title="http://en.wikipedia.org/wiki/List_of_Intel_microprocessors">процессоры Intel</a>. Для любителей экзотики есть ещё <a href="//www.ixbt.com/click/?c=53616c7465645f5f60e001ce40d51a82496a57bf9540af453a6f66bfb5f8d663e6311e283a96f0a620dc4e4279cda309137735636ad8727c90db6e216bd2c7c7512eea5e48c4d25a2d3b546325342d24c46718c27a3af05e806fb9ddc4fe6ec4&h=acbe149f1bd22abeaab84bccfba6f30ef0e2eba5" rel="nofollow" target="_blank" title="http://en.wikipedia.org/wiki/List_of_VIA_microprocessors">процессоры VIA</a>. Ссылки на детальные списки процессоров по линейкам (Celeron, Sempron, Core i7, Phenom, Nano и т.п.) см. в самом внизу страницы напротив слова Lists.<p>Что касается общего положения, то у обоих основных производителей ситуация примерно такая (с многочисленными исключениями, разумеется). Сначала указывается название линейки процессоров. Оно говорит об общей направленности применения: бюджетные, основные (mainstream), дешёвые и экономные (для нетбуков), основные и экономные (для ноутбуков), просто быстрые и быстрые с поддержкой многопроцессорности (для рабочих станций и серверов). После указывается номер поколения этой линейки — не обязательно порядковый, но чем больше — тем «круче». Затем, на том месте, где ранее была частота — 2-4-значное число «рейтинга» производительности, обозначающее сразу несколько методов её увеличения:<ul><li> число физических ядер (логических больше, если у процессора есть технология типа Hyper-Threading); <li> их частота (при наличии технологии Turbo Boost или ей подобной — максимальная частота продолжительной надёжной работы всех ядер с их полной загрузкой, максимальной допустимой температурой корпуса процессора и «нормальным» напряжением питания); <li> полный объём всех кэшей; <li> число контроллеров и шин памяти и чипсета; <li> частота этих шин; <li> возможность частотного разгона разными способами; <li> наличие дополнительных специализированных блоков и шин; <li> разные мелочи. </ul><p>Причём это число не является оценкой самой производительности, т.е. вы не только не сможете сказать, насколько модель 2300 быстрее модели 1200, но даже и какая из них быстрее в конкретной программе. Можно лишь утверждать, что с точки зрения производителя, модель 2300 <em>сложнее в производстве</em>, чем модель 1200 — у неё выше некоторые технические характеристики, больше ядер или кэша, и т.д. и т.п. При этом подразумевается, что раз уж модель с более высоким номером снабдили всеми этими «наворотами» — то она и работать будет быстрее (иначе зачем было снабжать?) Однако практика свидетельствует, что сбывается это предположение отнюдь не всегда.<p>Также иногда к «рейтингу» спереди или сзади добавляются 1-2 буквы для обозначения класса потребления энергии: для немобильных процессоров — просто «обычный» и «экономный», а для мобильных — более детальная градация. <h4><a name="24"></a>Измерение скорости «в мегагерцах» — как это возможно? </h4><p>Никак это не возможно, потому что скорость не измеряется в мегагерцах, как не измеряется расстояние в килограммах. Однако господа маркетологи давно уже поняли, что в словесном поединке между физиком и психологом побеждает всегда последний — причём независимо от того, кто на самом деле прав <em>(прим. маркетологов: хотите об этом поговорить?)</em> Поэтому мы и читаем про «сверхбыструю 1066-мегагерцевую шину», мучительно пытаясь понять, как скорость может измеряться с помощью частоты. На самом деле, раз уж прижилась такая извращённая тенденция, нужно просто чётко представлять себе, что имеется в виду. А имеется в виду следующее: если мы «закрепим» ширину шины на N битах — то её пропускная способность действительно будет зависеть от того, на какой частоте данная шина функционирует, и какое количество данных она способна передавать за такт. По обычной процессорной шине с «одинарной» скоростью (такая шина была, например, у процессора Intel Pentium III) за такт передаётся 64 бита, то есть 8 байт. Соответственно, если рабочая частота шины равна 100 МГц (100'000'000 тактов в секунду) — то скорость передачи данных будет равна 8 байт * 100'000'000 герц &#x2248; 763 мегабайта в секунду (а если считать в «десятичных мегабайтах», в которых принято считать потоки данных, то ещё красивее — 800 мегабайт в секунду). Соответственно, если на тех же 100 мегагерцах работает DDR-шина, способная передавать за один такт удвоенный объём данных — скорость вырастет ровно вдвое. Поэтому, согласно парадоксальной логике господ маркетологов, данную шину следует именовать «200-мегагерцевой». Хотя реальная частота работы у вышеописанных шин одинаковая — 100 мегагерц. Вот так «мегагерцы» и стали синонимом скорости.<p>Впрочем, независимые источники также указывают производительность шины не в герцах, а в транзакциях (т.е. актах передачи данных) в секунду — МТ/s или GТ/s (с приставками мега и гига). Это число надо умножить на ширину шины в байтах. Тем не менее, главное здесь — выучить наизусть один простой принцип: если уж мы занимаемся таким извращением, как сравнение скорости двух шин между собой «в мегагерцах» — то они обязательно должны быть одинаковой ширины и одного типа передачи за такт. Иначе получается как в одном форуме, где человек всерьёз доказывал, что пропускная способность AGP2X («133-мегагерцевая», но 32-битная шина) — выше, чем пропускная способность FSB у Pentium III 800 (реальная частота 100 МГц, ширина 64 бита). <h4><a name="25"></a>О некоторых особенностях технологий DDR и шин НТ и QPI </h4><p>Как уже было сказано, в режиме DDR по шине за один такт передаётся удвоенный объём информации. Правда, в документах, ориентированных больше на прославление достижений производителей, чем на объективное освещение реалий, почему-то не всегда указывают одно маленькое «но»: режимы удвоенной скорости включаются только при пакетной передаче данных, а она всегда включена не во всех типах шин. Т.е. если мы запросили из памяти парочку мегабайтов с адреса X по адрес Y — то да, эти два мегабайта будут переданы с удвоенной скоростью. А вот сам запрос на данные может быть передан по шине и с «одинарной» скоростью! Соответственно, если запросов у нас много, а размер пересылаемых данных не очень велик, то количество данных, которые «путешествуют» по шине с одинарной скоростью (а запрос — это тоже данные) будет почти равно количеству тех, которые передаются со скоростью удвоенной. Это касается шин доступа к памяти и старых шин связи с чипсетом, но новые шины включают пакетную передачу для любых видов информации. Новые — это HyperTransport (она же — НТ, но не путайте с HyperThreading) для процессоров AMD и QPI для Intel. У новичков есть четыре главных особенности, отличающие их от предыдущих решений: эти шины уже (как правило, 32 бита), в несколько раз быстрее по частоте, могут соединять только 2 устройства (на старые шины можно «повесить» и более) и, самое интересное, — они полнодуплексные. Т.е. фактически состоят из двух разнонаправленных половинок, позволяющих одновременно передавать данные в обе стороны. Так что для оценки скорости надо различать три цифры: частота работы шины (как правило, в спецификациях указывается именно она), количество передач данных в одном направлении (вдвое больше частоты за счёт DDR) и число совокупных передач данных в обоих направлениях (ещё вдвое больше). Теперь, если умножить второе или третье число на ширину шины в байтах, мы получим заветные гигабайты в секунду (точнее, млрд. байт/с) — в одном или двух направлениях. <p>Возможно, через несколько лет таким же изменениям подвергнется и шина между процессором и памятью — она станет узкой, сверхбыстрой и двухнаправленной. Однако возможность подключать несколько модулей памяти наверняка сохранится. <h4><a name="26"></a>Внешние данные: корпус, разъём, охлаждение </h4><p>У любого процессора есть не только интерьер, но и экстерьер — «одёжка», по которой его встречают. Не пользователи, конечно, а коллеги-компоненты по компьютеру. Чтобы процессор вообще заработал, требуется соблюсти несколько важных пунктов.<p>Во-первых, у процессора есть корпус определённого размера с определённым количеством выводов в определённом расположении — всё это должно точно подходить к разъёму для CPU на материнской плате (компактные процессоры для неттопов и нетбуков продаются вместе с мат. платами сразу запаянные в них). Тип разъёма (сокета) обозначается буквой или числом выводов. Для каждого процессора указывается тот разъём, который для него подходит. Причём «подходит» означает не только механическую совместимость (т.е. процессор физически умещается в разъёме в единственно верном положении, обозначенном специальной меткой-ключём), но и электрическую, силовую и интерфейсную. Последнее гарантирует, что выводы и контакты расположены в ожидаемом порядке, на выводы питания подаётся именно то напряжение и та сила тока, которая нужна, а к информационным выводам подключены нужные шины и линии управления чипсета и периферии. Впрочем, установка процессора нового поколения вместо старого даже при совпадении разъёма не всегда закончится удачно, потому что…<p>Во-вторых, BIOS (загрузочная программа, стартующая сразу после включения компьютера и записанная в микросхеме флеш-памяти на материнской плате) ожидает обнаружить лишь те виды процессоров, которые в него заложили разработчики системной платы. Но если ваш новый процессор вышел позже, то для поддержки всех его функций придётся обновить и сам BIOS, новую версию которого («прошивку») нужно загрузить с сайта производителя материнской платы, убедившись, что в ней есть поддержка новинки. Впрочем, иногда это не требуется — если новый CPU не сильно отличается от старого, то и обновление BIOS'а ему не нужно, но это должно быть явно сказано производителем процессора или системной платы.<p>В-третьих, даже если процессор точно заработал всеми своими наворотами и гигагерцами, есть ещё кое-что, без чего его работа может очень быстро закончится — охлаждение. При покупке стоит обратить внимание на то, сколько процессор выделяет энергии (эта величина почти равна её потреблению) — параметр TDP (Thermal Design Power), измеряемый в ваттах. Фактически это требование к системе охлаждения — именно столько тепла должен отводить кулер или радиатор, чтобы процессор не перегревался (для каждого процессора и вида корпуса есть своя максимально допустимая температура, гарантирующая продолжительную надёжную работу). Если перегрев всё-таки произойдёт, процессор сначала станет снижать фактическую частоту работы (причём различными программами-мониторами это не обязательно фиксируется), а затем может и вовсе подать сигнал аварийного отключения питания всего компьютера. Для этого в каждый современный CPU встроен датчик температуры, выдающий показания системной плате, а также собственным механизмам защиты, главная цель которых — не дать физически сжечь процессор (ценой потери производительности и даже данных).<a name="27"></a>Процессор: детальней <h3><a name="28"></a>Кэш </h3><h4><a name="29"></a>Общее описание и принцип действия </h4><p>Во всех современных процессорах есть кэш (cache). Это разновидность памяти (кардинальные отличия кэша от ОЗУ — скорость работы и меньшая задержка доступа), которая является своего рода «буфером» между контроллером памяти и процессором и служит для увеличения скорости работы с ОЗУ. Каким образом? Чтобы объяснить, сразу откажемся от попахивающих детским садом сравнений, которые частенько встречаются в популяризаторской литературе на процессорную тематику (бассейны, соединённые трубами разного диаметра, и т.д. и т.п.). Всё-таки человек, который дочитал статью до этого места и не заснул <em>(прим. ред. — а ведь авторы так старались!)</em>, наверное, способен выдержать и «переварить» чисто техническое объяснение, без бассейнов, кошечек и одуванчиков.<p>Итак, представим, что у нас есть много сравнительно медленной памяти (пусть это будет ОЗУ размером 1 мегабайт) и относительно мало очень быстрой (пусть это будет кэш размером всего 1 килобайт). Как нам с помощью этого несчастного килобайта увеличить скорость работы со всей памятью вообще? А вот здесь следует вспомнить, что данные в процессе работы программы, как правило, не бездумно перекидываются с места на место — они изменяются. Считали из памяти значение какой-то переменной, прибавили к нему какое-то число — записали обратно на то же место. Считали массив, отсортировали по возрастанию — опять-таки записали в память. Т.е. в каждый момент программа работает не со всей памятью, а, как правило, с относительно маленьким её фрагментом. Напрашивается решение — загрузить этот фрагмент в «быструю» память, обработать его там, а потом уже записать обратно в «медленную» (или просто удалить из кэша, если данные не изменялись). В общем случае, именно так и работает процессорный кэш: любая считываемая из памяти информация попадает не только в процессор, но и в кэш. И если эта же информация нужна снова, сначала процессор проверяет: нет ли её в кэше? Если есть (а современные кэши совершенны настолько, что это происходит в подавляющем большинстве случаев) — информация берётся оттуда, и обращения к памяти не происходит вовсе. Аналогично с записью: информация, если её объём влезает в кэш, пишется именно туда, и только потом, когда процессор закончил операцию записи, и занялся выполнением других команд, данные, записанные в кэш, параллельно с работой процессорного ядра «потихоньку» выгружаются в ОЗУ.<div align="center"><img src="images/cpu-digest-2009/cache.png" width="625" height="333" /><br /><em>Основной принцип работы процессорного кэша. Второй этап предусматривает два различных варианта развития событий: быстрый ответ, либо передачу запроса дальше, в память. Третий этап в случае быстрого ответа отсутствует.</em></div><p>Говоря по-научному, кэш использует эффекты, которые называются временной и пространственной локальностью информации. Пространственная локальность означает, что несколько обращений к памяти подряд произойдут по адресам, скорее «близким» друг к другу, чем «далёким». Дело в том, что при чтении данных, которых не оказалось в кэше, процессор из памяти получает только их, а кэш дополнительно запрашивает себе ещё несколько десятков байт «вокруг». В результате, если первое обращение закэшировано, то, скорее всего, и для всех последующих также не потребуется обращаться к памяти. А временная локальность означает, что данные, к которым недавно обращались, скорее всего в течение ближайшего времени понадобятся ещё раз или много раз. Поэтому после удачного попадания в кэш (именно так это событие и называется — кэш-попадание, а отсутствие нужных данных в кэше — кэш-промах) информация там остаётся и даже получает больший «рейтинг популярности» (зачем — см. ниже).<p>Разумеется, объём данных, прочитанных и записанных за всё время работы программы — намного больше объёма кэша. Поэтому некоторые из них приходится время от времени удалять, чтобы в кэш могли поместиться новые, более актуальные. Самый простой из известных механизмов обеспечения данного процесса — отслеживание времени последнего обращения к данным, находящимся в кэше. Так, если нам необходимо поместить новые данные в кэш, а он уже «забит под завязку», контроллер, управляющий кэшем, смотрит: к какому фрагменту кэша не происходило обращения дольше всего (та самая «популярность»). Этот фрагмент и является первым кандидатом на «вылет», а на его место записываются новые данные, с которыми нужно работать сейчас.<p>Чтобы было понятно, насколько важен кэш, приведём простой пример: скорость обмена данными современного процессора с быстрейшим из своих кэшей (подробней — абзацем ниже) в 5-10 раз превосходит скорость его работы с памятью, а задержки меньше в 50 раз! Фактически, в полную силу современные процессоры способны работать только с кэшем: как только они сталкиваются с необходимостью прочитать данные из памяти — все их хвалёные гигагерцы просто простаивают. Опять-таки, простой пример: выполнение простейшей инструкции процессором происходит за 1 такт, т.е. за секунду он может выполнить такое количество простых инструкций, какова его частота (на самом деле еще больше, но это оставим на потом…). А вот время ожидания данных из памяти может в худшем случае составить более 200 тактов! Что делает процессор, пока ждёт нужные данные? А ничего не делает. Или, в лучшем случае, при наличии технологии гиперпоточности, переключается на другой поток команд, которому без кэша также плохо, как и этому. <h4><a name="30"></a>Многоуровневое кэширование </h4><p>Специфика конструирования современных процессорных ядер привела к тому, что систему кэширования в подавляющем большинстве CPU приходится делать многоуровневой. Кэш первого уровня (самый «близкий» к ядру) традиционно разделяется на две (как правило, равные) части: кэш инструкций (L1I) и кэш данных (L1D). Это разделение предусматривается так называемой «гарвардской архитектурой» процессора, которая по состоянию на сегодня является самой популярной теоретической основой для построения современных CPU. В L1I, соответственно, аккумулируются только команды (с ним работает декодер), а в L1D — только данные (они впоследствии, как правило, попадают во внутренние регистры процессора — обо всём этом см. ниже). Иерархически «над» L1 стоит кэш второго уровня — L2. Он, как правило, в 2-8 раз больше по объёму, примерно втрое медленнее, и является уже «смешанным» — там располагаются и команды, и данные. В первых многоядерных процессорах у каждого ядра были свои L1, но общий L2. Сегодня у каждого ядра есть свой L2, зато общим для всех ядер является L3 (кэш третьего уровня), который в 4-32 раза больше, чем L2, и ещё примерно втрое медленнее (но всё ещё быстрее памяти). Алгоритм работы с многоуровневым кэшем в общих чертах не отличается от алгоритма работы с одноуровневым, просто добавляются дополнительные итерации: сначала информация ищется в L1, если там промах — в L2, потом — в L3, и уже потом, если ни на одном уровне кэша она не найдена — идёт обращение к основной памяти (ОЗУ).<div align="center"><img src="images/cpu-digest-2009/k10-vs-k8.gif" width="510" height="344" /><br /><em>В новой архитектуре (К10) AMD использует общий для всех ядер кэш третьего уровня.<br /> Раньше, в AMD К8, все ядра имели только свои собственные кэши 1 и 2 уровня.<br /> Примерно так же выглядят новая и старая архитектуры Intel.</em></div><h3><a name="31"></a>Декодер </h3><p>На самом деле, исполнительные блоки всех современных десктопных x86-процессоров вовсе не работают с кодом в стандарте x86. У каждого процессора есть своя, «внутренняя» система команд, имеющая мало общего с теми командами (тем самым «кодом»), которые поступают извне. В общем случае, команды, исполняемые ядром — намного проще, «примитивнее», чем команды стандарта x86. Чтобы процессор с точки зрения программиста или пользователя «внешне выглядел» как x86 CPU, существует декодер: этот блок отвечает за преобразование «внешнего» x86-кода во «внутренние» команды, исполняемые ядром (при этом достаточно часто одна команда x86-кода преобразуется в несколько более простых «внутренних»). Декодер является важной частью современного процессора: от его быстродействия зависит то, насколько постоянным будет поток команд, поступающих на исполняющие блоки. Ведь они не способны работать с кодом x86, поэтому будут ли они что-то делать или простаивать — во многом зависит от эффективности работы декодера.<h3><a name="32"></a>Регистры процессора </h3><p>Регистры — по сути, те же ячейки памяти, но «территориально» они расположены прямо в процессорном ядре. Разумеется, скорость работы с регистрами намного больше не только скорости работы с ОЗУ, но и с кэшами любого уровня. Поэтому большинство команд архитектуры x86 предусматривают осуществление действий именно над содержимым регистров, а не над содержимым памяти. Однако общий объём регистров процессора, как правило, очень мал — он не сравним даже с объёмом кэшей первого уровня и составляет всего сотни байт. Поэтому код программы (не на языке высокого уровня, а именно машинный) обычно содержит примерно такую последовательность операций: загрузить в регистры процессора информацию из ОЗУ, произвести некое действие над содержимым этих регистров, поместив результат туда же, в регистры, а потом снова выгрузить результат в основную память. Т.к. работа с памятью куда медленнее, было бы неплохо, чтобы объём данных в регистрах был больше — тогда промежуточные результаты вычислений можно целиком (или почти…) хранить в ядре, не обращаясь даже в кэш, что резко ускорит работу процессора. Однако увеличить размер или число регистров значительно сложнее, чем увеличить кэш и, тем более, нарастить объём памяти (это вообще любой продвинутый пользователь сделает). Тем не менее, примерно раз в 5-10 лет к стандартному на этот момент набору регистров добавляется ещё столько же новых, либо сами регистры удваиваются (а при введении x86-64 с целочисленными регистрами произошло и то, и другое).<h3><a name="33"></a>Функциональные устройства</h3><p>Пройдя через все уровни кэша, декодер и некоторые подготовительные модули, команды наконец-то попадают в те блоки, ради которых вся эта катавасия и устраивалась: функциональные (исполняющие) устройства (ФУ). По сути, именно они и являются единственно необходимым элементом процессора. Можно обойтись без кэша — скорость снизится, но программы работать будут. Можно обойтись без декодера — исполняющие устройства станут сложнее, но работать процессор будет. Более того, у процессоров с системой команд концепции RISC (с точки зрения программиста, архитектура x86 к ней не отсносится, но для примера имеет смысл заметить) декодер отсутствует принципиально. А без функциональных устройств обойтись невозможно, ибо именно они исполняют операции над данными. Разных ФУ бывает много, но самые главные из них — арифметико-логические устройства (ALU), блоки вычислений с плавающей точкой (FPU), блоки векторной обработки (SIMD — таково общее название концепции векторных вычислений, означающее «одна команда, много данных») и блоки обмена данных с памятью.  Каждое ФУ может исполнить только те команды, которые предназначены для него. Распределением команд, поступающих с декодера, по различным исполняющим устройствам занимается специальный блок-планировщик. <h4><a name="34"></a>Арифметико-логические устройства </h4><p>ALU (если не указано иное, то подразумевается именно целочисленный блок) традиционно отвечают за самые частые операции: простые арифметические действия (сложение, вычитание, сравнение) с целыми числами, логические операции («и», «или», «исключающее или» и «не»), копирование и простые преобразования чисел, а также битовые сдвиги. Блоков ALU в современных процессорах, как правило, 3. Для чего — вы поймёте позже, прочитав раздел «Суперскалярность и внеочередное исполнение команд». Внимательный читатель заметит, что выше не указаны ещё некоторые команды с целыми числами, которые, вроде бы должны быть исполнены в АЛУ. Например — умножение. Однако всё не так просто. Дело в том, что число и разнообразие функциональных устройств зависит от частоты встречи разных команд. Т.к. команды сложения, вычитания и копирования среди целых чисел наиболее «популярны», имеет смысл делать несколько АЛУ, исполняющих именно их, а вот целочисленное умножение, и, тем более, деление встречается куда реже, поэтому целочисленный умножитель почти во всех процессорах один (иногда — универсальный, в т.ч. и для вещественных чисел), а делителя нет вообще (эта операция делается в умножителе с использованием специальных таблиц констант для ускорения деления). <h4><a name="35"></a>Блоки вычислений с плавающей запятой* и векторной обработки </h4><p>FPU занимается выполнением команд, работающих с числами с плавающей запятой, кроме того, традиционно на него «вешают всех собак» в виде дополнительных наборов команд для работы с векторными данными (MMX и SSE с разными цифрами) — независимо от того, работают они с числами с плавающей запятой, или с целыми. Этих ФУ также 3-4, но тут расклад сил несколько иной — как правило, каждый блок умеет делать копирование данных, но только 2 или 3 исполняют простые команды (как у целочисленного АЛУ — их иногда называют SIMD ALU или SSE ALU), только один — умножение и деление, и ещё один — всё остальное (перетасовки элементов вектора, сложные преобразования форматов данных и пр.).<blockquote>* — по традиции русской математической школы, мы называем FPU «блоком вычислений с плавающей запятой», хотя буквально его название (Floating Point Unit) переводится как «…с плавающей точкой» — согласно американскому стандарту написания таких чисел.</blockquote><h4><a name="36"></a>Блоки обмена данных с памятью </h4><p>Тут есть 3 вида модулей — 2-3 так называемых AGU или устройства генерации адреса, подготавливающие адрес операции обмена, и по одному блоку загрузки и сохранения (выгрузки), соединённых с кэшем данных первого уровня. Тут всё просто — готовим адрес, а затем либо пишем данные из регистра в кэш, либо наоборот — читаем из кэша в регистр.<h3><a name="37"></a>Энергосбережение</h3><p>Помимо вычислительных «наворотов», у современных CPU есть ещё и различные технологии для уменьшения потребления энергии. Причём это касается процессоров не только для мобильных устройств, но и для настольных ПК, и даже серверов. Дело в том, что уменьшение потребления электроэнергии также приводит к уменьшению тепловыделения, которое за последние годы сильно выросло — ещё 10 лет назад было трудно себе представить, что средний процессор будет потреблять электричества и выделять тепла под 100 ватт, а то и больше. Системы охлаждения всё чаще становятся слишком дорогими и шумными, притом, что это один из самых ненадёжных узлов компьютера, требующий регулярного ухода. А если охлаждение не справится — процессор (или другой чувствительный компонент) перегреется. О перегреве и защите от него уже сказано выше, но с некоторых пор не помогает и это, нужны дополнительные меры. Такими мерами стали технологии регулировки потребления энергии в зависимости от требуемой загрузки процессора. Для Intel это называется SpeedStep, для AMD — Cool'n'Quiet и PowerNow! (плюс номер версии).<p>Анализируя загрузку различных блоков и шин, контроллер энергосбережения может снизить их частоту работы (для компонентов, которые могут работать несинхронно) или приостановить тактирование полностью, а также указать материнской плате понизить питающее напряжение (тоже — не всего процессора, а отдельного ядра или блока, хотя и не каждого). Регулировка напряжений особенно эффективна, т.к. от него потребляемая и выделяемая мощность зависит больше. Однако и частота (за редкими исключениями) и напряжение не могут упасть до нуля: реально частота падает в 2-3 раза относительно максимума, а напряжение — процентов на 20-30. Т.е. даже при полном простое (чего в многозадачных ОС не бывает никогда) процессор всё равно будет потреблять несколько ватт, а особо энергоэффективные CPU для ноутбуков — доли ватта. Тем не менее, это на порядок меньше, чем в случае отсутствия энергосберегающих технологий. Разумеется, во всех современных материнских платах и ОС энергосбережение процессора поддерживается и включено по умолчанию. Что касается эффективности, то считается, что технологии AMD чуть отстают от Intel, но реальная разница скорее всего окажется околонулевой, т.к. процессор — не единственная часть компьютера. В частности, современная видеокарта «налегает на ватты» посильнее многих серверных CPU, даже если она в корпусе одна; аналогично и для ноутбуков.<p>Также заметим, что переход на новый технологический процесс при изготовлении микросхем (грубо говоря, он измеряется в нанометрах и определяет минимальный размер элемента на чипе) помимо возможности размещения большего числа транзисторов и ускорения их срабатывания также приводит и к уменьшённому энергопотреблению. Так что, например, одинаковые по устройству и частоте процессоры, изготовленные по 65-нанометровой и 45-нанометровой технологии, будут потреблять разное количество энергии — у второго будет чуть меньшее питающее напряжение и потребляемый ток. <a name="38"></a>Процессор: ещё детальней <h3><a name="39"></a>Особенности кэшей </h3><h4><a name="40"></a>Частота работы кэша и его шина </h4><p>Во всех современных x86 CPU кэши L1 и L2 работают на той же частоте, что и процессорное ядро, но это вовсе не всегда было так (данный вопрос уже поднимался выше). Однако скорость работы с кэшем зависит не только от частоты, но и от ширины шины, с помощью которой он соединён с ядром. Как вы помните, скорость передачи данных является произведением частоты работы шины (количества тактов в секунду) на количество байт, которые передаются по шине за такт. Это количество можно увеличивать за счёт введения технологии DDR (Double Data Rate) и/или за счёт увеличения ширины шины. В случае с кэшем более популярен второй вариант — не в последнюю очередь из-за «пикантных особенностей» DDR, описанных выше. Более того, можно поставить сразу две параллельные шины, передающие данные в разные стороны — т.е. преобразовав шину в двунаправленную (полнодуплексную) удвоенной ширины. Споры о том, какой из подходов лучше (двунаправленная шина, но более узкая в каждом направлении, или однонаправленная широкая) — продолжаются до сих пор, как и множество других споров относительно технических решений, применяемых двумя основными конкурентами на рынке x86 CPU. Ранее под минимально разумной шириной шины кэша принималась разрядность внешней шины самого процессора, т.е. 64 бита. Теперь же большинство новых моделей имеют встроенный многоканальный контроллер памяти, общая эффективная ширина которого — 128 и более бит. Однако внутри процессора ширина шин между ядром и кэшем, а также самими кэшами может быть ещё шире: в большинстве случаев — 256 бит. <h4><a name="41"></a>Эксклюзивный и не эксклюзивный кэш </h4><p>Концепции эксклюзивного и не эксклюзивного кэширования очень просты: в случае не эксклюзивного кэша, информация на всех уровнях кэширования может дублироваться. Таким образом, L2 может содержать в себе данные, которые уже находятся в L1I и L1D, а L3 может содержать в себе полную копию всего содержимого L2 (и, соответственно, L1I и L1D). Эксклюзивный кэш, в отличие от не эксклюзивного, предусматривает чёткое разграничение: если информация содержится на каком-то уровне кэша — то на всех остальных она отсутствует. Плюс эксклюзивного кэша очевиден: общий размер кэшируемой информации равен суммарному объёму кэшей всех уровней — а у не эксклюзивного кэша размер кэшируемой информации (в худшем случае) равен объёму самого большого (по размеру и по номеру) уровня кэша. Минус эксклюзивного кэша менее очевиден, но он есть: необходим специальный механизм, который следит за собственно «эксклюзивностью» (например, «удаление» информации из L1 фактически инициирует процесс её копирования в L2).<p>Не эксклюзивный кэш традиционно использует компания Intel, эксклюзивный (с момента появления процессоров Athlon на ядре Thunderbird) — компания AMD. В целом, мы наблюдаем здесь классическое противостояние между объёмом и скоростью: за счёт эксклюзивности, при одинаковых объёмах L1/L2 у AMD общий размер кэшируемой информации получается больше — но за счёт неё же он работает медленней (задержки, вызванные наличием механизма обеспечения эксклюзивности). Следует заметить, что недостатки не эксклюзивного кэша Intel компенсирует просто, но весомо: наращивая его объёмы. Для топовых процессоров данной компании стал нормой L3-кэш объёмом 8 МБ — но AMD с её 512 КБ L2 на каждое из 2-6 ядер и максимум 6 МБ общего L3 также получает 7-9 МБ за счёт эксклюзивности.<p>Кроме того, увеличивать общий объём кэшируемой информации за счёт введения эксклюзивной архитектуры кэша имеет смысл только в том случае, когда выигрыш в объёме получается достаточно большим. Для AMD это актуально т.к. у её сегодняшних CPU суммарный объём L1D+L1I равен 128 КБ, а L2 — 512 КБ. Процессорам Intel, у которых оба числа вдвое меньше, введение эксклюзивной архитектуры дало бы намного меньше пользы.<p>А ещё есть распространённое заблуждение, что архитектура кэша у CPU компании Intel «инклюзивная». На самом деле — нет. Именно НЕ эксклюзивная. Инклюзивная архитектура предусматривает, что на «нижнем» уровне кэша не может находиться ничего, чего нет на более «верхнем». Не эксклюзивная архитектура всего лишь допускает дублирование данных на разных уровнях. <h3><a name="42"></a>Суперскалярность и внеочередное исполнение команд </h3><p>Основная черта всех современных процессоров состоит в том, что они способны запускать на исполнение не только ту команду, которую (согласно коду программы) следует исполнить в данный момент времени, но и другие «вблизи» неё. Приведём простой (канонический) пример. Пусть нам следует исполнить следующую последовательность команд:<ol><li> A = B + C<li>Z = X + Y<li>K = A + Z</ol><p>Легко заметить, что команды (1) и (2) совершенно независимы друг от друга — они не пересекаются ни по исходным данным (переменные B и C в первом случае, X и Y во втором), ни по месту размещения результата (переменная A в первом случае и Z во втором). Стало быть, если на данный момент у нас есть свободные исполняющие блоки в количестве более одного, данные команды можно распределить по ним, и выполнить одновременно, а не последовательно*. Таким образом, если принять время исполнения каждой команды равным N тактов процессора, то в классическом случае исполнение всей последовательности заняло бы N*3 тактов, а в случае с параллельным исполнением — всего N*2 тактов (так как команду (3) нельзя выполнить, не дождавшись результата исполнения двух предыдущих).<blockquote>* — разумеется, степень параллелизма не бесконечна: команды могут быть выполнены параллельно только в том случае, когда на данный момент времени есть в наличии соответствующее количество свободных от работы блоков (ФУ), причём именно таких, которые «понимают» рассматриваемые команды. Например, ALU физически неспособно исполнить инструкцию для FPU. Обратное также верно.</blockquote><p>На самом деле, всё ещё сложнее. Так, если у нас имеется следующая последовательность:<ol><li>A = B + C<li>K = A + M<li>Z = X + Y </ol><p> То очередь исполнения команд процессором будет изменена! Т.к. команды (1) и (3) независимы друг от друга ни по исходным данным, ни по месту размещения результата, они могут быть выполнены параллельно — и будут выполнены параллельно. А вот команда (2) будет выполнена после них (хронологически третьей) — поскольку для того, чтобы результат вычислений был корректен, необходимо, чтобы перед этим была выполнена команда (1). Именно поэтому обсуждаемый в данном разделе механизм и называется «внеочередным исполнением команд» (Out-of-Order Execution или «OoO»): в тех случаях, когда очерёдность выполнения никак не может сказаться на результате, команды отправляются на исполнение не в указанной в программе последовательности, а в той, которая позволяет достичь максимального быстродействия.<p>Теперь вам должно стать окончательно понятно, зачем современным CPU такое количество однотипных исполняющих блоков: они обеспечивают возможность параллельного выполнения нескольких одинаковых или близких по типу команд, которые в случае с «классическим» подходом к проектированию процессора пришлось бы выполнять так, как они содержатся в исходном коде, одну за другой.<div align="center"><img src="images/cpu-digest-2009/deneb.png" width="600" height="371" /><br /><em>«Исполнительная» часть ядра AMD Deneb в качестве наглядной<br /> иллюстрации возможностей параллельного выполнения команд</em></div><p>Процессоры, оснащённые механизмом параллельного исполнения нескольких подряд идущих команд, принято называть «суперскалярными». Однако не все суперскалярные процессоры поддерживают внеочередное исполнение. Так, в первом примере нам достаточно «простой суперскалярности» (выполнения двух последовательных команд одновременно) — а вот во втором примере без перестановки команд местами уже не обойтись, если мы хотим получить максимальное быстродействие. Все современные x86 CPU обладают обоими качествами: являются суперскалярными и поддерживают внеочередное исполнение команд — кроме процессора Intel Atom, который сделан с простой внутренней структурой, чтобы быть дешёвым и энергоэффективным одновременно. В то же время, были в истории x86 и «простые суперскаляры», OoO не поддерживающие. Например, классическим десктопным x86-суперскаляром без OoO был Intel Pentium (с или без MMX). Тот же Atom можно с натяжкой считать аналогом «Пентиума», хотя сильно продвинутым и по архитектуре, и по скорости.<p>Справедливости ради стоит заметить, что никаких заслуг в разработке концепций суперскалярности и OoO нет ни у Intel, ни у AMD, ни у какого-либо иного (в том числе из ныне почивших) производителя x86 CPU. Первый суперскалярный компьютер, поддерживающий OoO, был разработан Сеймуром Креем (Seymour Cray) ещё в 60-х годах XX века. Для сравнения: Intel свой первый суперскалярный процессор архитектуры x86 (Pentium) выпустила в 1993 г., первый суперскаляр с OoO (Pentium Pro) — в 1995 г.; первый суперскаляр с OoO от AMD (K5) увидел свет в 1996 г.. Комментарии, как говорится, излишни… <h3><a name="43"></a>Предварительное (опережающее) декодирование и кэширование </h3><h4><a name="44"></a>Предсказание ветвлений </h4><p>В любой более-менее сложной программе присутствуют команды условного перехода: «Если некое условие истинно — перейти к исполнению одного участка кода, если нет — другого». С точки зрения скорости выполнения кода программы современным процессором с большим числом подоготовительных стадий и собственно исполнением (так называемый исполнительный конвейер), любая команда условного перехода — воистину бич божий. Ведь до тех пор, пока не станет известно, какой участок кода после условного перехода окажется «актуальным» — его невозможно начать декодировать и исполнять. Для того чтобы как-то примирить концепцию «длинных» конвейеров с командами условного перехода, предназначается специальный блок: блок предсказания ветвлений. Занимается он, по сути, «пророчествами»: пытается предсказать, на какой участок кода укажет команда условного перехода, ещё до того, как она будет исполнена, и сработает ли переход вообще. В соответствии с указаниями «штатного внутриядерного пророка», процессором производятся вполне реальные действия: «напророченный» участок кода загружается в кэш (если он там отсутствует), и начинается декодирование и выполнение его команд. Причём среди выполняемых команд также могут содержаться инструкции условного перехода, и их результаты тоже предсказываются, что порождает целую цепочку из пока не проверенных предсказаний! Разумеется, если блок предсказания ветвлений ошибся, вся проделанная в соответствии с его предсказаниями работа просто аннулируется.<p>Алгоритмы, по которым работает блок предсказания ветвлений, вовсе не являются шедеврами искусственного интеллекта. Когда процессор впервые встречает условный переход, он пытается предсказать его поведение «по одёжке» — какого типа команда, куда происходит переход (вперёд по ходу исполнения программы или назад — это если он вообще произойдёт) и пр.. Точность такого предсказателя (он называется статическим) невелика. Самое интересное происходит, когда встречается уже знакомый переход. Чтобы его узнать, у предсказателя есть специальная таблица историй переходов, хранящая описание поведения нескольких сотен или тысяч последних обнаруженных в программе команд ветвления вместе с их адресами. Далее уже динамический предсказатель делает заключение о вероятном поведении команды не «по одёжке», а «по уму» — основываясь на детальной накопленной статистике поведения и этой команды перехода, и предыдущих её «коллег», исполненных до неё. Для поддержки этой статистики каждый раз, когда команда перехода доходит до исполнения, её результат попадает в предсказатель, чтобы тот скорректировал свою таблицу — перешли или нет, угадали или нет.<p>Несмотря на достаточно высокую эффективность алгоритмов, механизмы предсказания ветвлений в современных CPU всё равно постоянно совершенствуются и усложняются — но тут уже речь идёт о борьбе за единицы процентов: например, за то, чтобы повысить эффективность работы блока предсказания ветвлений с 95 процентов до 97, или даже с 97 до 99… <h4><a name="45"></a>Предвыборка данных </h4><p>Блок предвыборки данных (Prefetch) очень похож по принципу своего действия на блок предсказания ветвлений — но в данном случае речь идёт не о коде, а о данных. Общий принцип действия такой же: предзагрузчик (префетчер) анализирует запросы к данным, решает, что к некоему участку памяти, ещё не загруженному в кэш или ядро, скоро будет осуществлён доступ — и заранее даёт команду на загрузку данного участка ещё до того, как он понадобится программе. «Умно» (результативно) работающий блок предвыборки позволяет существенно сократить время доступа к нужным данным, и, соответственно, повысить скорость исполнения программы. Он хорошо компенсирует высокую латентность подсистемы памяти, подгружая нужные данные поближе к ядру или сразу в него, и тем самым, нивелируя задержки при доступе к ним, если бы они находились не в кэше, а в основном ОЗУ.<p>Разумеется, в случае предвыборки неизбежны негативные последствия: загружая ненужные (как позже окажется) данные в кэш, Prefetch вытесняет из него другие (быть может, как раз нужные). Кроме того, за счёт «предвосхищения» операции считывания, создаётся дополнительная нагрузка на контроллер памяти (причём в случае ошибки — совершенно бесполезная).<p>Алгоритмы Prefetch, как и алгоритмы блока предсказания ветвлений, тоже не блещут интеллектуальностью: как правило, данный блок стремится отследить, не считывается ли информация из памяти с определённым «шагом» (по адресам), и на основании этого анализа пытается предсказать, с какого адреса будут считываться данные далее. Как и в случае с блоком предсказания ветвлений, простота алгоритма вовсе не означает низкую эффективность: в среднем, блок предвыборки чаще «попадает», чем ошибается — это, как и в предыдущем случае, прежде всего связано с тем, что «массированное» чтение данных из памяти, как правило, происходит при исполнении различных циклов.<a name="47"></a>Приложение: генеалогия x86-процессоров от начала и до наших времён<p>Также, для справки, мы решили включить в данный материал своего рода «генеалогическое древо» всех десктопных x86-процессоров, т.к. оно позволяет проследить некоторые тенденции их развития, а заодно понять, насколько «взаимопроникающим» был процесс их разработки, особенно в самом начале. :)<br /><h3>«Доисторическая эпоха» — от Intel 8086 до Intel Pentium</h3><br /><a href="images/cpu-digest-2009/prehistory.png" class="big_img"><img src="images/cpu-digest-2009/prehistory.png" width="550" height="425" /></a><br /><h3>«Новейшая история» — от Intel Pentium до Intel Core i7 и AMD Phenom II</h3><br /><a href="images/cpu-digest-2009/newhistory.png" class="big_img"><img src="images/cpu-digest-2009/newhistory.png" width="550" height="775" /> </a><br /><br /><a name="46"></a>Заключение <div align="right"><em>Я — тот кролик, который не может начать жевать траву до тех пор, пока<br /> не поймёт во всех деталях, как происходит процесс фотосинтеза! <br /> (изложение личной позиции одним из близких знакомых автора)</em></div><p>Вполне возможно, чувства, которые у вас возникли после прочтения данной статьи, можно описать примерно так: «Вместо того, чтобы на пальцах объяснить, какой процессор лучше — взяли и загрузили мне мозги кучей специфической информации, в которой ещё разбираться и разбираться, и конца-края не видно!» Вполне нормальная реакция, мы вас хорошо понимаем. Скажем даже больше (и пусть с головы упадёт корона!): если вы думаете, что мы сами можем ответить на этот простецкий вопрос («какой процессор лучше?») — это не так. Не можем*. Для одних задач лучше один, для других — другой, а тут ещё цена разная, доступность, симпатии конкретного пользователя к определённым маркам… Не имеет задача однозначного решения. Если бы имела — наверняка кто-то бы его нашёл, и стал бы самым знаменитым обозревателем за всю историю независимых тестовых лабораторий.<blockquote>* — примечание одного из авторов: «Лучший процессор — мой процессор!» :)</blockquote><p>Хотелось бы подчеркнуть ещё раз: даже полностью усвоив и осмыслив всю информацию, изложенную в данном материале — вы по-прежнему не сможете предсказать, какой из двух процессоров будет быстрее в ваших задачах, глядя только на их характеристики. Во-первых — потому, что далеко не все характеристики процессоров здесь рассмотрены. Во-вторых — потому, что есть и такие параметры CPU, которые в числовом виде могут быть представлены только с очень большой «натяжкой». Так для кого же (и для чего) всё это написано? В основном — для тех самых «кроликов», которые непременно желают знать, что происходит внутри тех устройств, которыми они пользуются ежедневно. Зачем? Может, они просто лучше себя чувствуют, когда знают, что вокруг них происходит? :)<blockquote>P.S. Захотелось ещё подробнее? Вам поможет «<a href="cpu-microarchitecture-part-1.shtml">Обзор микроархитектур современных десктопных процессоров</a>» от Олега Бессонова. Эта серия статей хоть и вышла в 2006 году, но в части теоретических сведений и углублённого описания принципов работы x86 CPU, не устарела до сих пор.</blockquote></div><br /><br /><br /><script>
  window.___gcfg = {lang: 'ru'};
  (function() {
      function async_load(u,id) {        
          if (!gid(id)) {
              s="script", d=document,
              o = d.createElement(s);
              o.type = 'text/javascript';
                          o.id = id;
              o.async = true;
              o.src = u;
              x = d.getElementsByTagName(s)[0];
              x.parentNode.insertBefore(o,x);
          }
      }    
      function gid (id){
          return document.getElementById(id);
      }
      window.onload = function() {
      
          e = gid("s-twitter");
          e.setAttribute("data-lang", "ru"); 
          
          e = gid("s-facebook");
          e.setAttribute("data-layout", "button_count"); 
          e.setAttribute("data-colorscheme", "light"); 
          e.setAttribute("data-send", "false"); 

          e = gid("s-google");
          e.setAttribute("data-size", "medium");
          
          async_load("//platform.twitter.com/widgets.js", "id-twitter");             
          async_load("//connect.facebook.net/ru_RU/all.js#xfbml=1", "id-facebook");  
          async_load("//vk.com/js/api/openapi.js", "id-vkontakte");                  
          async_load("https://apis.google.com/js/plusone.js", "id-google")           
          async_load("/js/ya-share.js", "id-ya")                                     
      };
      window.vkAsyncInit = function(){
          VK.init({apiId: 4182896, onlyWidgets: true});
          VK.Widgets.Like("vk_like", {type: "mini", height: 20, width: "auto"});
      };    
  })();
</script><div style="clear:both;"></div></div>                                        </div>

                
                                <div class="bcontainer" id="n20"></div>
                <div class="bcontainer" id="n30"></div>
                <script>
                    if($(".b-article__content > p").length >= 1)
                        $('#n20').insertAfter(".b-article__content > p:first");

                    window.yaContextCb.push(()=>{
                        Ya.adfoxCode.createScroll({
                                ownerId: 263225,
                                containerId: 'n20',
                                params:
                                    {
                                        p1: blocksArray.n20, p2: isMobile ? 'ftsc' : 'ftsb','puid5': isMobile ? 'm20':'h20','puid10':'ixbtcom','puid4':'ixbt_art','puid3':'ix_cat_platform','puid14':Math.floor((Math.random()*100)),'partner-stat-id':30075003                                    },
                                lazyLoad: {
                                    fetchMargin: 150,
                                    mobileScaling: 2
                                }

                            }
                        )
                    })

                    if ($("#main-pagecontent__div > p").length >= 12) {
                        $('#n30').insertBefore("#main-pagecontent__div > p:nth-of-type(8)");

                        window.yaContextCb.push(()=>{
                            Ya.adfoxCode.createScroll({
                                    ownerId: 263225,
                                    containerId: 'n30',
                                    params:
                                        {
                                            p1: blocksArray.n30, p2: isMobile ? 'ftsc' : 'ftsb','puid5': isMobile ? 'm30':'h30','puid10':'ixbtcom','puid4':'ixbt_art','puid3':'ix_cat_platform','puid14':Math.floor((Math.random()*100)),'partner-stat-id':30075003                                        },
                                    lazyLoad: {
                                        fetchMargin: 150,
                                        mobileScaling: 2
                                    }

                                }
                            )
                        })
                    }
                </script>







                                    
                                    <div class="b-article__bottomb-article__bottom">

                        <div class="b-article__bottom-author">
                            <meta itemprop="datePublished" content="2009-10-30T00:17:00+03">
                        <meta itemprop="dateModified" content="2024-05-22T17:19:08+03">
                                                <p class="date">30 октября 2009 Г.</p>
                                                                                                                                        <p class="author" itemprop="author"><a href="/authors/286/" rel="author"><span itemprop="author" itemscope itemtype="http://schema.org/Person"><span itemprop="name">Тасит Мурки</span></span></a></p>
                                                                                            <p class="photo"><img src="/img/0000/00/00/05/15/003612.jpg" alt="" style="max-width: 22px; max-height: 22px;"/></p>
                                                            <p class="author" itemprop="author"><a href="/authors/515/" rel="author"><span itemprop="author" itemscope itemtype="http://schema.org/Person"><span itemprop="name">Станислав Гарматюк</span></span></a></p>
                            
                                                                                                        </div>


                                            <a name="comments" id="#comments"></a>
                        <div class="bcontainer" id="n40"></div>
                        <script>


                            window.yaContextCb.push(()=>{
                                Ya.adfoxCode.createScroll({
                                        ownerId: 263225,
                                        containerId: 'n40',
                                        params:
                                            {
                                                p1: blocksArray.n40, p2: isMobile ? 'ftsc' : 'ftsb','puid5': isMobile ? 'm40':'h40','puid10':'ixbtcom','puid4':'ixbt_art','puid3':'ix_cat_platform','puid14':Math.floor((Math.random()*100)),'partner-stat-id':30075003                                            },
                                        lazyLoad: {
                                            fetchMargin: 200,
                                            mobileScaling: 2
                                        }

                                    }
                                )
                            })

                        </script>


                    </div>

                

                    <div id="comments_area" class="jscomments" data-pagetype="ixbt_article_announce" data-pageid="7500" data-page="ixbt7500" data-url="https://www.ixbt.com/cpu/cpu-digest-2009.shtml"><div id="loader"></div></div><script src='https://www.ixbt.com/live/modules/ixbt/js/comments.min.js?v=200624'></script>
<script>
        init_iframe();
</script>
<script>
    function reload()
    {
        location.reload();
    }

</script>

                                
                <div itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
    <meta itemprop="url" content="//www.ixbt.com/">
    <div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject">
        <img itemprop="url" alt="iXBT.com logo" src="//www.ixbt.com/pic/articles/logo.png" style="display:none;"/>
        <meta itemprop="width" content="113">
        <meta itemprop="height" content="61">
    </div>
    <meta itemprop="name" content="iXBT.com">
    <meta itemprop="address" content="Москва">
</div>
                <div class="forum-comments" id="forum_comments"><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- ����-���� -->
<title>����������� ���������� ���������� ����������� x86: ����� �������� ������ (x86 CPU digest 2.0)</title>
<meta name="Keywords" content="����������� ���������� ���������� ����������� x86: ����� �������� ������ (x86 CPU digest 2.0)">
<meta name="Description" content="����������� ���������� ���������� ����������� x86: ����� �������� ������ (x86 CPU digest 2.0)">
<!-- /����-���� -->
<!-- JS � CSS -->
<!--#include virtual="/include/articles/header.shtml" -->
<!-- /JS � CSS -->
<!-- �������-����� -->
<!-- �������� ��������, ��� ������ �� ������ ���� �� ����� �����,
��� ��������� �� ���������� � �������� ������ ������, ���� ������
��������� ������ ��������� ��������� -->
<!--#include virtual="/cpu/include/rebrand_styles.html" -->
<!-- /�������-����� -->
</head>
<body class="wide_article_1080"  onmousemove="if(loaded) {close1(); }; if(loaded2) {close2(); }">
<!-- �������������� �������� �������� -->
<!--#include virtual="/cpu/include/rebrand_additional.html" -->
<!-- /�������������� �������� �������� -->
<div class="top_megabanner">
 <!-- 100% ������ -->
<!--#include virtual="/cpu/include/top_full_banner.html" -->
<!-- /100% ������ -->
</div>
<div class="limiter">
<div class="wrapper">
<!-- ����� -->
<!--#include virtual="/include/articles/top.shtml" -->
<!-- /����� -->
<div class="c_w">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td align="center">
<table width="960" class="main_table" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="700" class="main_content" valign="top">
<!-- ������ ��� ������� -->
<div align="center">
<!--#include virtual="/cpu/include/reklama_top.html" -->
</div>
<!-- /������ ��� ������� -->
<div class="content">
<div class="rebrand_article_content_block">
<!-- ������ (tools_f_z.shtml - flash+zoom, tools_f.shtml - flash, tools_z.shtml - zoom , tools_no.shtml - no Flash no zoom) -->
<!--#include virtual="/include/articles/tools_f_z.shtml" -->
<!-- /������ -->
<div class="path_links">
<!-- ������ �� ������ � ��������� -->
<!-- ���� ������� ������ ����� � ����������� � ��� ������ ������ -->
<!--#include virtual="/cpu/include/cpu.html" -->
<!-- #include virtual="/cpu/include/cooling.html" -->
<!-- #include virtual="/cpu/include/pc.html" -->
<!-- #include virtual="/cpu/include/memory.html" -->
<!-- #include virtual="/cpu/include/guide.html" -->
<!-- /������ �� ������ � ���������  -->
</div>
<!-- ������ -->
<h1>����������� ���������� ���������� ����������� x86</h1><h2>����� �������� ������ (x86 CPU digest 2.0)</h2>
<!--#include virtual="/cpu/include/reklama.html" -->
<p>����  �������� ������������ ����� ����������, ����������� �������������� � ����������� ������ ������ 2006 ����, ������� ���������� &laquo;<a href="x86-cpu-faq-2006.shtml">����������� ���������� ���������� ����������� x86: ����� �������� ������ (x86 CPU FAQ 1.0)</a>&raquo;. ������, ����� �� ������� ������������� ��������� � ����������� ������ &laquo;FAQ&raquo;, �� ������ ������� ����� �������� ����� ����������, ��� ��� �������, �������� &mdash; &laquo;��������&raquo;. �������������, ���� ������� ��� ����� &mdash; ��� �� ������ �� ���������� �������, � <em>�����������</em> � ������� ������� �� ���� ������ &mdash; �� ����������� ������������ �� ������� �������� ����������������� �������. ��� ���� ������������ ������ ��������? ��� ������� ��� ������ ������������� ���������.</p>
<p>������ &mdash; ��� ��, ��� <em>�����</em> ���������, ��� ��� ������������� ��������� ������, ��� �������� ����������� x86-���������. ��� ��� �� ���������� ������������� � ������ ������ ������������ ���������� �������� ��������, �������  ��������� �������� �����-����� ������ ������������� �� ���� ��������, ���� �� ���� �� ����� (�����) ������� ����������� ������: ����� ����������� �������� �������� ��������, ���������� ����������� CPU, �������� �������������� ��������� �� ������������ ����� �����, � ����� ���������� � ������������ �������� � �����.</p>
<p>������ ������ &mdash; ��� ��, ��� �� ����� � ������ ����� ������ ������ ��� ���� &mdash; �� �� �������� ���� ������ ����� ������� ��������������, ����� ������������� ������������ �� ����� ������ � ����� �����, &laquo;���������&raquo; ��, �����������������, �����������, ������������, � ��� �����. �� ���� ������� ��������, ��� ������ ������ ������ ��������� :) (� �������� &mdash; ������� ���������), ������� ���� ��� �������� ��� ���������� &mdash; �� � �������� ����� ��� ����������� �� ������������.</p>
<p>�� � ������������ ��������������: ���� ���� �� ������� ����, �� ����� &laquo;���������&raquo; � ������ ��������� ���������� &laquo;x86(-64) ���������, ��������������� ��� ��������� � �������� ��� (������� ����) ��������� ����������&raquo;. ��������� ����������, ������������������ ���������� � ������������ x86, ������������ embedded-�������� &mdash; �� ��� � ������ ������ <em>�� ���������������</em>.</p>
<h2>����������</h2>
  <ul type="disc">
    <li><a href="cpu-digest-2009.shtml#01">��������</a>
      <ul type="circle">
        <li><a href="cpu-digest-2009.shtml#02">����� ���������� �������������� ������</a></li>
        <li><a href="cpu-digest-2009.shtml#03">��� � ������: �������� ������� ������ ����������</a></li>
      </ul>
    </li>
    <li><a href="cpu-digest-2009.shtml#04">����� �������� �������������� ���������� � ���</a>
      <ul type="circle">
        <li><a href="cpu-digest-2009.shtml#05">���������� ������</a></li>
        <li><a href="cpu-digest-2009.shtml#06">������������ ����</a></li>
        <li><a href="cpu-digest-2009.shtml#07">����������� ������</a>
          <ul type="square">
            <li><a href="cpu-digest-2009.shtml#08">����������� ���� ������, N-��������� ����������� ������</a></li>
            <li><a href="cpu-digest-2009.shtml#09">�������� ������ � ������</a></li>
            <li><a href="cpu-digest-2009.shtml#10">�����������</a></li>
          </ul>
        </li>
      </ul>
    </li>
    <li><a href="cpu-digest-2009.shtml#11">���������: �������� ������ ���������</a>
      <ul type="circle">
        <li><a href="cpu-digest-2009.shtml#12">������� �����������</a>
          <ul type="square">
            <li><a href="cpu-digest-2009.shtml#13">����������� ��� ������������� � �����</a></li>
            <li><a href="cpu-digest-2009.shtml#14">����������� ��� �������������� ��������� �����������</a></li>
            <li><a href="cpu-digest-2009.shtml#15">64-������ ���������� ������������ x86 (IA32) �����������</a></li>
          </ul>
        </li>
        <li><a href="cpu-digest-2009.shtml#16">������������ ����</a>
          <ul type="square">
            <li><a href="cpu-digest-2009.shtml#17">� �������������� (�������������������) ��� ���������</a></li>
            <li><a href="cpu-digest-2009.shtml#18">����� ���� � ���������� HyperTherading</a></li>
            <li><a href="cpu-digest-2009.shtml#19">�������� ����� ������ ����� ����������������</a></li>
            <li><a href="cpu-digest-2009.shtml#20">�������</a></li>
            <li><a href="cpu-digest-2009.shtml#21">������� ������ ����</a></li>
          </ul>
        </li>
        <li><a href="cpu-digest-2009.shtml#22">�������������</a></li>
        <li><a href="cpu-digest-2009.shtml#23">����������� ����������� �������� �����������</a></li>
        <li><a href="cpu-digest-2009.shtml#24">��������� �������� �� ����������� &mdash; ��� ��� ��������?</a></li>
        <li><a href="cpu-digest-2009.shtml#25">� ��������� ������������ ���������� DDR � ��� HT � QPI</a></li>
        <li><a href="cpu-digest-2009.shtml#26">������� ������: ������, ������, ����������</a>&nbsp; </li>
      </ul>
    </li>
    <li><a href="cpu-digest-2009.shtml#27">���������: ���������</a>
      <ul type="circle">
        <li><a href="cpu-digest-2009.shtml#28">���</a>
          <ul type="square">
            <li><a href="cpu-digest-2009.shtml#29">����� �������� � ������� ��������</a></li>
            <li><a href="cpu-digest-2009.shtml#30">�������������� �����������</a></li>
          </ul>
        </li>
        <li><a href="cpu-digest-2009.shtml#31">�������</a></li>
        <li><a href="cpu-digest-2009.shtml#32">�������� ����������</a></li>
        <li><a href="cpu-digest-2009.shtml#33">�������������� ����������</a>
          <ul type="square">
            <li><a href="cpu-digest-2009.shtml#34">����������-���������� ����������</a></li>
            <li><a href="cpu-digest-2009.shtml#35">����� ���������� � ��������� ������� � ��������� ���������</a></li>
            <li><a href="cpu-digest-2009.shtml#36">����� ������ ������ � �������</a></li>
          </ul>
        </li>
        <li><a href="cpu-digest-2009.shtml#37">����������������</a></li>
      </ul>
    </li>
    <li><a href="cpu-digest-2009.shtml#38">���������: ��� ���������</a>
      <ul type="circle">
        <li><a href="cpu-digest-2009.shtml#39">����������� �����</a>
          <ul type="square">
            <li><a href="cpu-digest-2009.shtml#40">������� ������ ���� � ��� ����</a></li>
            <li><a href="cpu-digest-2009.shtml#41">������������ � �������������� ���</a></li>
          </ul>
        </li>
        <li><a href="cpu-digest-2009.shtml#42">���������������� � ������������ ���������� ������</a></li>
        <li><a href="cpu-digest-2009.shtml#43">��������������� (�����������) ������������� � �����������</a>
          <ul type="square">
            <li><a href="cpu-digest-2009.shtml#44">������������ ���������</a></li>
            <li><a href="cpu-digest-2009.shtml#45">����������� ������</a>&nbsp; </li>
          </ul>
        </li>
      </ul>
    </li>
    <li><a href="cpu-digest-2009.shtml#47">����������: ��������������� ����� x86-�����������</a></li>
    <li><a href="cpu-digest-2009.shtml#46">����������</a></li>
  </ul>
<h2><a name="01" id="01"></a>�������� </h2>
<h3><a name="02" id="02"></a>����� ���������� �������������� ������ </h3>
<p>�����  ��������� ��� ������������� ���������� ��� ������ � ����������� �������  ����� ������. ��� ��� ����� ����� ��������� �� 3 ����: ����������  ���������, �������� � ������ (�����-������), ������ ��������� �����  ������������ ����� ������� ��� ����� ����������� � ���������, ��� �  ����� ������� ������������. � �������������� ����� ������ ������ ������  ��� ���, ���� ��������, ��� ��������� &mdash; ���������� �������������, ��� ����� �������� �������, ������ � �.�., �� ��� ����� �����  ���� �����������. ��� ���� ������ ������� ��� ������� �� ����������  ����������������� ��� �����. ��������, ��������� ��������� �  ����������� ���������, �� ������ ���� ����� ����� ����������  ����������, ��������� ������ � ������. ������� ����� ���� ��� ���������� �������� ������� ���������� ������ ���������� ��� ������ �� ��������������. </p>
<h3><a name="03" id="03"></a>��� � ������: �������� ������� ������ ���������� </h3>
<p>����  �� �������� �������� ����� &laquo;���������&raquo; ���� ����������� ��� �������  �����, �� ������������ ��� �������� �� ��������� &mdash; ��� ��, ���  ��������� (�� ������� ������������) ��������� �� ���������, ����������  �� �����-������ ����� ���������������� (���� �� �������, ��, ��������,  ���� ������), � ��� ���������� �������� ���. �.�. ��������� ��� ����  �������� ������������������ ������, ����������� � ������ ����������, ��  ������� ������ ������ �� ������ � �����-�� ������������ ������, �� � �  ������ ���������������� �������� ������. ������ ������� �������� ��  ���������� ����, � ������� &mdash; 3-5. ��� ��, � �������� ������ (���, RAM)  ��������� � ������. ��� ����� ���������� � ��������� �������, � ����� �  ���� ���������� � �����. �������� ����� ����� � ������� ������� � ���,  ��� ������ &mdash; ��� ��, ��� ��� ��������� ���������� ��������. � ��� &mdash; ��� �������, ������� ��� ��������, ����� ������ ��������  �� ������ ����������. ������������ � ������ ������������� ���������  ��������, ����������� �� ������ � ��������� ��������� �����.</p>
<div align="center">
  <img src="images/cpu-digest-2009/von-neumann.png" width="582" height="417">
  <br><em>����-����� &laquo;<a href="http://ru.wikipedia.org/wiki/%D0%90%D1%80%D1%85%D0%B8%D1%82%D0%B5%D0%BA%D1%82%D1%83%D1%80%D0%B0_%D1%84%D0%BE%D0%BD_%D0%9D%D0%B5%D0%B9%D0%BC%D0%B0%D0%BD%D0%B0">������ ��� �������</a>&raquo;,<br>
    �� ��������� ������� ��������� ��� x86-����������</em>
</div>
<p>�����  ��������� �������, ��������� ������ ��������� � �� ������. �����  ���������� �������� ��� ������� (� ����� ������� ����� ������ �������),  ��������� ������ ��������� �� �� ������, �, ��������, �����  ������������ ��� ���� ������������ ��������, �������� �� ������� �  ������ � ���������� (����������) ����. ������� � ������  ���������������� �� �������, ������� ������������ ����� ����������  ����� ����� � ������, � �������� ��� ������ ���������� (���� ���  �������� ��������� ����). </p>
<h2><a name="04" id="04"></a>����� �������� �������������� ���������� � ��� </h2>
<p>��������,  ����-�� ������, ��� ���������� ������� ������ � &laquo;���������&raquo;,  ����������� x86 CPU, ������� ��� ���������� ������������  ���������������� ������ � ����������� ��������, ���������� �� ������  ���� �����������. ������ ����� &mdash; ������� ����: ���� x86-���������� ����  �������� ��� ����� ������, ���������� ������ �� ����������� �� ������ �  ���, ��� ������������ ��� ������ ����� ���� �� ���������� ������. �����  ������� ���� ���: ��, ���� �������, ��������� � ������������ ������ �  �������, ����� ������������ ������ ����� ����������� &mdash; �� � ���� ������  ����� ������������� � �������� ������� &laquo;��������&raquo;, ����������������  �������� ��������� ���������������� ������� �� �������� ������ CPU. ���  ��������� ������������ �������������� ���������� � �������, ����������  ������, �� ���� ���� ��� ��� ���� ��������� (�� ��� ���� �������)  ��������� ��������� ��������� ��� �������. </p>
<h3><a name="05" id="05"></a>���������� ������ </h3>
<p>����,  ����� ���� �� ��� �������� � ���, ��� ��� �������, ��� � ������,  �������� � ��������� �� ����������� ������. �� ����� ���� �� �������  �������. ��� ������� � ����������� x86-������ (�.�. ����������� �� ����  x86-�����������), ��������� � ������ ���������� ��� �� ���, �.�. ��  ���� � ���� ������� ��������������� �����. ��������� �� ����� �����,  �� ��� ���������� ������� ����������� (Intel Core 2, Celeron � Pentium  ���� �����) ���������� ����� ������������ ����������� � ������. � ����  ����� ��������� ���������� � &laquo;��������������&raquo; �������������������  ����������, ����������� ������������ ������, � ��� ���, � ���� �������  &mdash; � ����������� ���, ����������� �� ������� ������. ������ �� ���������  ������ &mdash; ��� ����� ������� ����� ������������� &laquo;��������&raquo; (���������� &mdash;  ��������� �����) � ����������� ������������ �� ���, ����������� �  ����������� ������� �� ��������� �����. ���� ����������� ���, �����  �������, ������: �� ������ ������ ���� &laquo;������&raquo; ����� ������� �  ������������� � ������������ (� ��� �� ������ ���������, �� �� ���� &mdash;  ���� �����).</p>
<div align="center">
  <img src="images/cpu-digest-2009/ext-vs-int.png" width="585" height="307">
  <br><em>x86-������� � ������� ������������ ������ (�����)<br> � � ������������ ������, ���������� � ��������� (������)</em>
</div>
<p>�  ������������ �����, ���������� ������ ������ � ������ ������� &mdash; ������  ���������, ����������� ������� ��������� �����. �� ��������������  ����������� �� ������ ������� �������� ������ ������� ����� �����������  � �������, ��� ���� �� ��������� �����������, �������� �� �����  ������������������ ����������. �� &laquo;�����&raquo; ����� (� ��� ���������  ���������� Intel Core � ������  &laquo;i&raquo;, � ��� ���� ����������� CPU  AMD), ���������� ������ ������ �  ������ ������ ���������� &mdash; ������ ������� ����������� ����� ������� �  ����������� ���, ��� ��� �������� �� ����������� ����� � �������.  ������ �������������� ����������� �����-������ ����� ���������  ����������� &mdash; �� ���� �� ������ ���� �� ���� ��� �������, �.�. ������  ������ �� ����� (� ���� ������� ����������� ������), � ������  ���������� � ������ ��������� ����� ���������, �������� ��� ��  ���������� ��������. ��� �� �����, ����� ����� �������� �������������,  ������ ���  ���������� ������ ����� �������� ������ � ������ ���  ����� �������, ���� ����� ���������� ���������� ������� ��� ������ ��������� &mdash;  ������ �� �������� ������� ������������ � �������������� ���  ����������, ������� �������� � ������. </p>
<h3><a name="06" id="06"></a>������������ ���� </h3>
<p>�����  ��������� ����������� ������� ��� ������� ����� ������������ �����,  ������� � ����� x86 CPU ������ �� �������� �������� FSB (Front Side  Bus), ���� ����������� ���������� ����� ��� �� ������ �������� (QPI  ��� Intel � HyperTransport ��� AMD). � ����������������� ������ �����  ��� ���������, � ������� ��� � ������� ������������ � ��������. �  �������� �����������, ��� ���������, ��� �������, ����, ���� � ���� ������������  (�� ������ ���� ������, ���� � ��������� ������� � ����������) �  ��������� ��� � ��������, � ����� ���� &mdash; �� ����� ����������  ������������. </p>
<h3><a name="07" id="07"></a>����������� ������ </h3>
<h4><a name="08" id="08"></a>����������� ���� ������, N-��������� ����������� ������ </h4>
<p>��  ����������� ���� ��� ������, ������������ � ����������� ����������  x86-��������, ����� ���� ������� 64 ����. ��� ��������, ��� �� ����  ���� �� ������ ���� ������������ ����� ���� �������� ����������  ����������, ������� 8 ������ (8 ���� ��� SDR-���, 16 ���� ��� DDR-���).  ��������� ����� ������ ������ ���� RDRAM, ������������� � �������� ��  ���� ����������� Intel Pentium 4 �� ���� ����������� �����������  NetBurst, �� ������ ��� ����������� �������� ��������� ��� x86-�� (�  ����� &mdash; ���� � ����� ��������� �� �� �� �������� Intel, ������� � ���  ����� ������� ���������������� ������ ��� ������). ���������  ����������� ������ ���� �������������� �����������, ��������������  ������������� ������ � ����������� ���������� ���� �� ����� 64-�������  ������. ������������� � 2-��������� ����������� ��������� �������������  �������� � &laquo;128-��������&raquo;. ������ ���������� �� ������ 1-�� ������ �  ������ ������ �������� � ���������: 2x64 ����� 128 ������ ����� ���  ������ �������� ������������. �.�. N-��������� ���������� ������  ������������ ����� ��������� �������� ������ � ������� � N ���, �� ���  ���� ������ ������ ���� ������ �� ���� ����������� ������������,  ����������� � x86-�������� ��-�������� ����� 64 �����. �� ������ ������  �������, ������������� ���������� ������ ����� ����� �������  ������������: ��� ����������� x86-������� �������� ��� �������  2-���������� ������������� ������, � ��������� &mdash; ���� 3-����������.<br>
</p>
<h4><a name="09" id="09"></a>�������� ������ � ������ </h4>
<p>��������  ������ � ������ ���������� � ������ ������������ ��������������  ������������� ���������� ������������ ����� ������. ���, ��������,  ������������� ���������� ������ ��������� DDR2-800 ������������  �������� ���������� �������� ������ � ������ ����������, ������ 8 ����  (������ ����) * 2 (���������� �������) * 2 (�������� DDR,  �������������� �������� 2 ������� ������ �� 1 ����) * 400'000'000  (����������� ������� ������ ���� ������ ������ 400 ���, �.�. 400 ���.  ������ � �������). ��������, ��� ���������� ������������ ���������� �� � ��/� (��/�), � ���. (����.) ����/�, ��� ��������� ������ ������� �������� &laquo;����-&raquo; � &laquo;����-&raquo;.  ���� � ������ �����, ��������, ���������� � ���������� ������������  ������, ��� �������, ���� ���� �������������: �����������  &laquo;�������������&raquo; ����������� ����������� ������, ���� ��������  (��������), ��������� ������� ���������� ����������� ������ ����������  (��. ���� ������ ��� ������������ ���). ������ �������� &laquo;������&raquo;  ���������� ���� �� � ���������, � � ���, ��� �������� &laquo;���������&raquo;  ������ ��� ������ �������� ����� �� ������������ ���������������,  �������� �� ����������� �������� ������ ���������� � ���. ����������  ����� �������� �������� ���������� ��� ������ ��������� ��� � �����  ��������������, ��� �����������. </p>
<h4><a name="10" id="10"></a>����������� </h4>
<p>�����������  (��� �� &mdash; ��������) �������� �� ����� ������ ��������������� � �����  ������ �������������� ���������� ������, ��� �������� &laquo;��������  ������&raquo;. ������� �������� ������ ������� ������ �����, ����� �� ������  ������������ �����, �� ���� ��� ��������� &laquo;��������� � ������ �������&raquo;  &mdash; �� �� ������ ���� ������� ������ �����������. ��� ��� �����? � �����  ������ &mdash; �����, ������� ��������� ��� ����, ����� ������ ���������  ���������� � ������������ ������. � �������������: � �������, �����  ��������� �������� ����������� ������ ������� �� ���������� (������), �  �� �������, ����� ��� �������� ��������������, �������� �����������  �����. ������ ��� ����� �� ����� �������, ������� ��������� ��  ��������� ������. ������ ������� �� ������ ��� ������ �� ����������,  ���������� ������ &laquo;���������&raquo; ��, � ����� ������� �� ������ ��������.  ������ � ������ ����������� ������� ������ �� ����� ���� ����������  ���������. ��������� ��������: ����� ������, �� ������ �� ������  ������������ � ���� ������, �������� ���� �� ��������� �� �������  ������ �� ���������� �������� ����� (�� ������� �������). � �����  ������, ��� �������� � ������� �������� ������������. � ������ �����  ������ ��� ������. ���, ��������, ������ ���� DDR3 ����� � ������� �������  ��������, ��� DDR2 (��� ���������� ������� �������� ������). �  ����������, ���� ������ � ��������� ����������� &laquo;��������&raquo; �  &laquo;���������� �������&raquo;, ���� ����� ���������� ��� ������ ������ ��  ����������������, �� �������� ������ ���������� ������� ����� ������,  ��� �������� ������� � &laquo;������ �����&raquo;, �.�. �������� ��� �������� ��  ��������� ����� ������ �� �������������� ������� ������� �������, ���  �������� ���������� ��� ������.</p>
<p>&laquo;������������&raquo;  ����� ��������� ������ (������) � ������������ &mdash; ���� �� ��������  �������� ����� ������������� ����������� ������: � ���������, ����  �������� ������ (������) ����� ������ �������� � ����������  �����������. ���, ��������, ������ ���� DDR �������� � ������� ������  (�������) ������������, ��� DDR2. � ���� �������, � DDR3 �����������  ��� ���� (�� ���� ����), ��� � DDR2. ������, ����� ������� ������  ��������, ����� ������� ������� ��������� ���������� �����������. ����  �� �������������� ������ ��������, ��� ��������� ������ ������� �������  ���� &laquo;4-4-4-12&raquo;, ������������ ��� ��� �������� �������� ��� ���������� ��������� ��������. �������� � ������ ������ ������� � ������  �������, �� ������� �������� ������. � �� �� �����, ���� ��� ����������  ����������� ��� ������� ��������� ��������, �� ������� � ����� �� � ������, � � ��������.  ������ �� ���� ����� &laquo;�������������&raquo; �� ����� ������ ������������� �  ������� ������������, �� ����������, ������ �����������, � �������, � 6  ������, ����� ���� ������, ��� ����������� � 4 �����. � ��  ����� ������: ��������, ���� ������ ������ � ������������ � 6 ������,  �������� �� ������� 800 ���, � ������ ������ � ������������ 4 &mdash; ��  ������� 400 ��� &mdash; �� ���������� ��������, ��� 6 ������ �� ������� 800  ��� ������ ������ �������, ��� 4 �� ������� 400.</p>
<p>�����  ������� ��������, ��� &laquo;�����&raquo; ����������� ���������� ������ ������� ��  ������ �� �� �����, �� � �� ����������� ������ � ����� ���  ������������ &mdash; ��� ��� ������� ���� ������ �� ��������. ������ �������  �������� AMD � �������� ���������� ����������� AMD64 ������ &laquo;�����  �����&raquo; ������ �������� ������� �����������, ������������ ����������  ����� � ��������� &mdash; ����� ����������� &laquo;��������� ���������&raquo; �����  ������������ ����� � �������� ���. ����� �������, �� � ��������: ������  ������� �� ���� ���������� AMD ����� �������� ������ � ��� �������, ��  ������� ��������� ���������� ����������. ��������, ������� ��������  Intel ����� �� �������� �� ����� ������������ ���, �����������  ����������� ������������� ��������: �������������� ���������� ������ �  ������� � �������� ������������ � ���������� (��� ���� ��. ����) &mdash; ����  ��-���� �� �����������, ��� ���� AMD ��������.</p>
<p>�  ���������� �������, ��� ������� &laquo;�������� ������ / ������&raquo; �  &laquo;�����������&raquo;, � ����� ������, ��������� � ������ ���� ������ &mdash; � ���  ����� �� ������ � ������������� ��� (SDR, Rambus, DDR, DDR2, DDR3, &hellip;),  �� � � ���� (��. ����). </p>
<h2><a name="11" id="11"></a>���������: �������� ������ ��������� </h2>
<h3><a name="12" id="12"></a>������� ����������� </h3>
<h4><a name="13" id="13"></a>����������� ��� ������������� � ����� </h4>
<p>���������  �� ����� ����������� � �������� &laquo;x86&raquo;, ��� &laquo;Intel-�����������  ���������&raquo; (��� &laquo;IBM PC compatible&raquo; &mdash; �� ��� ��� �� ��������� �  ����������). ������ ����� ����������� ������ &laquo;Pentium-�����������&raquo;  (������ ������ Pentium &mdash; �� ������� ���� ���� �����). ��� ���������� �� ����� ����� ����������? �� ������ ������ �������� ��������� � ����� ������ ������� �������� ��������� ������� ������������: �����������  x86-��������� &mdash; ��� ���������, ��������� ��������� ��������� ��������  ��� ����������� x86-64 (����������� 32-������ ����������� Intel,  ����������� 64-������� ������������ �� AMD). � ������ ����������� ����������� x86 &mdash; ���  ���, ����������� ����������� i80386 (��������� � ������ ��� &laquo;386-�&raquo;),  ������������ �� �������� ����� ������ 32-������ ����������� IA32  ������������� � ������� ���������� Intel Pentium Pro (� �����  �������������� ������������ � ��������� �����������). ��� ��������  &laquo;�������� �����&raquo; � ����� ���� ���? ��� ������ ������� �� ������ �����.  &laquo;��������&raquo; � ������ ������ �������� ��, ��� � ������� �������������  ����� ������ ������ ����� ���� �������� ����� ��������� ��� ����������  ����������� x86.</p>
<p>�����  ����, � ����������� IA32 ���������� &laquo;�����������&raquo; ����������  (�������������� ������ ������) �� ������������ ����� �����������,  �������� Intel: MMX, �������������� SSE (������ �� 4.2) � AVX. �����  ���������� &laquo;�������������&raquo; (�� �� Intel) ����������� ������ ������:  EMMX, 3DNow!, Extended 3DNow!, SSE4.a � XOP &mdash; �� ����������� ��������  AMD. �������, &laquo;�������������&raquo; � &laquo;���������������&raquo; � ������ ������  ������� ������������� &mdash; ��-����� �� �������� � ����, ��� ���������  ���������� ������ ������ Intel ��� ����������� ������������ ������  �������, � ��������� &mdash; ���, ������������ �� ������������ �����������  ���������� ��, ��� �� ����� ����� ��������. � ��������� �����������  ������� ������ ���������� ������� �������� ����: ������ ��� ��  ������������, ��������� ������ ���������, ������������ �� �� ���������.  ������ ����������� �� ����� ������� ����������� (� ����� ��������� �  ������������� ���������������� ��������), �� ���������� ��� ��������  ��������� ����������� ���������� ���������, � �� ����������.</p>
<p>���  ���� ������������� �������������� ������ ������? � ������ ������� &mdash; ���  ���������� �������������� ��� ���������� �������� ������ ��������. ����  ������� �� ��������������� ������, ��� �������, ��������� ��������, ���  �������� ������������ �� ��������� ���������, ��������� �� ������  ��������� ������, ������ ����������� ������� ����������� �����������  �������, ��� ���������� � ������������������. ������ �  99% ������� ������ ������, ���� ������ ���� �� ������� � �������  �������� ������, ������� �� ��������������� ������ ����� �� ������.  ����� �������, ���������� ���� ����������� �������� ���������  �������������� ������� ������ ����������� ������ ��������� �����  ������� �������: ����, ��������, ��������� ������������ SSE &mdash; ������,  ������� ����� ������ � � ������� ������ �� ������ SSE. ���� ��� &mdash; �����  ������� ���������, � ������� ������ �� ��������� ������. ���������  ���������� ��������� ������� ����������� ������ ���. �������, ������  ����������� ����� �� ��������� � ���������� ������� ��������� MMX, �.�.  ��� CPU, �������� �� ��������� 10 ���, ���� ����� ������������  ��������������. ��� ������� ������� ��������, �� ������� ��������  ���������� � ��������� ��������� ����������� ������� ������ ����������  ����������� (���������������� ��� ���������� ��) � ����������  ���������� ������������.</p>
<table border=0 cellpadding=3 cellspacing=1 WIDTH=85% ALIGN="CENTER">
  <tr class=thead>
<td>���������</td>
<td>��� �������</td>
<td>x86-64</td>
<td>PPro</td>
<td>MMX</td>
<td>������<br>SSE</td>
<td>3DNow!</td>
    </tr>
  <tr class=thead>
      <td colspan="7"><em>���������� Intel</em></td>
    </tr>
  <tr class=row1>
      <td>Pentium</td>
      <td align="center">1993</td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Pentium Pro</td>
      <td align="center">1995</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Pentium MMX</td>
      <td rowspan="2" align="center">1997</td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center"></td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Pentium II</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center"></td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Celeron</td>
      <td align="center">1998</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center"></td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Pentium III</td>
      <td align="center">1999</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">1</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Pentium 4</td>
      <td rowspan="2" align="center">2000</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">2</td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Celeron</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">1</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Celeron</td>
      <td align="center">2002</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">2</td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Pentium M</td>
      <td align="center">2003</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">2</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Pentium 4</td>
      <td rowspan="2" align="center">2004</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">3</td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Celeron D</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">3</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Pentium D, EE</td>
      <td rowspan="2" align="center">2005</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">3</td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Celeron D</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Celeron</td>
      <td rowspan="4" align="center">2006</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">3S</td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Celeron M</td>
      <td rowspan="2" align="center"></td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">3</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Core Solo, Duo</td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Core 2</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">3S</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Core 2</td>
      <td rowspan="4" align="center">2007</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">4.1</td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Celeron M</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">3S</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Pentium (DC)</td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Pentium (DC, M)</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">3</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Atom</td>
      <td rowspan="3" align="center">2008</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">3S</td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Celeron (DC)</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Core i7</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">4.2</td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>Core i3, i5</td>
      <td align="center">2009</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">4.2</td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>Core i9</td>
      <td align="center">2010</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">4.2</td>
      <td align="center"></td>
    </tr>
  <tr class=thead>
      <td colspan="7"><em>���������� AMD</em></td>
    </tr>
  <tr class=row1>
      <td>K5</td>
      <td align="center">1996</td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center"></td>
    </tr>
  <tr class=row2>
      <td>K6</td>
      <td align="center">1997</td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center"></td>
      <td align="center"></td>
    </tr>
  <tr class=row1>
      <td>K6-3D, K6-2+</td>
      <td align="center">1998</td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center"></td>
      <td align="center">x</td>
    </tr>
  <tr class=row2>
      <td>K6-III</td>
      <td rowspan="2" align="center">1999</td>
      <td align="center"></td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center"></td>
      <td align="center">x</td>
    </tr>
  <tr class=row1>
      <td>Athlon</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center"></td>
      <td align="center">x</td>
    </tr>
  <tr class=row2>
      <td>Duron</td>
      <td align="center">2000</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center"></td>
      <td align="center">x</td>
    </tr>
  <tr class=row1>
      <td>Athlon XP</td>
      <td rowspan="3" align="center">2001</td>
      <td rowspan="3" align="center"></td>
      <td rowspan="3" align="center">x</td>
      <td rowspan="3" align="center">x</td>
      <td rowspan="3" align="center">1</td>
      <td rowspan="3" align="center">x</td>
    </tr>
  <tr class=row2>
      <td>Athlon 4 (M)</td>
    </tr>
  <tr class=row1>
      <td>Duron</td>
    </tr>
  <tr class=row2>
      <td>Athlon 64</td>
      <td align="center">2003</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">2</td>
      <td align="center">x</td>
    </tr>
  <tr class=row1>
      <td>Sempron</td>
      <td align="center">2004</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">1 (2)</td>
      <td align="center">x</td>
    </tr>
  <tr class=row2>
      <td>Athlon XP-M</td>
      <td rowspan="5" align="center">2005</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">2</td>
      <td align="center">x</td>
    </tr>
  <tr class=row1>
      <td>Sempron</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">2 (3)</td>
      <td align="center">x</td>
    </tr>
  <tr class=row2>
      <td>Athlon (64) X2</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">3</td>
      <td rowspan="2" align="center">x</td>
    </tr>
  <tr class=row1>
      <td>Turion (M)</td>
    </tr>
  <tr class=row2>
      <td>Sempron (M)</td>
      <td align="center"></td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">3</td>
      <td align="center">x</td>
    </tr>
  <tr class=row1>
      <td>Phenom</td>
      <td align="center">2007</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">4.a</td>
      <td align="center">x</td>
    </tr>
  <tr class=row2>
      <td>Athlon X2</td>
      <td align="center">2008</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">4.a</td>
      <td align="center">x</td>
    </tr>
  <tr class=row1>
      <td>Athlon Neo</td>
      <td rowspan="3" align="center">2009</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">x</td>
      <td align="center">3</td>
      <td align="center">x</td>
    </tr>
  <tr class=row2>
      <td>Phenom II</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">x</td>
      <td rowspan="2" align="center">4.a</td>
      <td rowspan="2" align="center">x</td>
    </tr>
  <tr class=row1>
      <td>Athlon II, X3, X4</td>
    </tr>
  </table>
  <p>����������:<br>PPro &mdash; �������� ������� ���� ����� ������;<br>������ SSE � ����� ��������� �������������� ������, ������������ � ��� ����������;<br>��� SSE: SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2;<br>��� ����������� AMD ������� SSE4.a �������� ��������� ������ SSE, SSE2, SSE3 � SSE4.a;<br>(M) � ��������� ������, ���� ���� ���� � ����� �� �������;<br>(DC) � ����������� ���������, ������� � ������� ������.</p>

<p>��  ������ ������ �� ���������� ���������� ����������� �����������  (������������ ������� Windows � Linux, ������� ������, ������������  ����, � ������) ��������������� ������ ��� x86-�����������. ���  ����������� (�� ����������� &laquo;����� �����������&raquo; ��������) �� �����  x86-����������, ���������� �� ����, ��� ��� �������. ������� ������  ��������������� �� ������������ ����������� ����������� ��������  &laquo;Intel-�����������&raquo; ��� &laquo;Pentium-�����������&raquo;, ����� �����������  ����������� ��������: &laquo;x86-����������� ���������&raquo;, &laquo;��������� �  ������������ x86&raquo;. � ������ ������ ��� &laquo;������������&raquo; ����������  ����������� ������� ������ (ISA, <a title="Instruction set" href="http://en.wikipedia.org/wiki/Instruction_set">Instruction Set Architecture</a>) &mdash; ������������� � ����������� ������� ������ � ����� ������ ������������. ���� � ������ ��������� ���� �� �������. </p>
<h4><a name="14" id="14"></a>����������� ��� �������������� ��������� ����������� </h4>
<p>&laquo;�����������&raquo;  &mdash; ����, ���������� � �������� �� � ����������� ������������, � �  ���������� &mdash; ��� &laquo;������������&raquo; �������� ��������� ������ (������,  ����� ��������� ��, ��� ��� �������� &laquo;������������&raquo;, ����������  &laquo;�����������������&raquo;, �� ��������� &laquo;�����&raquo; ��������� ��������). ��� ���  &laquo;����������� CPU&raquo; &mdash; ��� ����� ����� �������, �������� ������ ���������  �����������, ��� �������, ������������ � ������� ������ ��� (�����  ������ &mdash; �� ����������� � &laquo;���������� �����������&raquo;). ��������, �����  ���������� �� x86 CPU ��� ������, ��� ��������� � ALU, ����������� ��  ��������� �������, QDR-�����, Trace cache, �, ��������, ����������  ���������� Hyper-Threading &mdash; ��� &laquo;��������� ����������� NetBurst&raquo; (��  ��������� ���������� �������� &mdash; ��� ������ ����� ���������� ����  �����). ����� �������, ������� &laquo;�����������&raquo; ������������� �  ����������� �����������: ��� ��� ����� ���������� ��� ������������� �  ������ ������� ������, ��� � ������������ ���������� �������, ��������  ����������� ���������� ������� ������ �����������. </p>
<h4><a name="15" id="15"></a>64-������ ���������� ������������ x86 (IA32) ����������� </h4>
<p>�  2003 �. ������� AMD, � ����� ��� &mdash; � Intel, ������������ �����������  ���������� ���������� (�������, AMD ������������ �������� ���  ������������), ��������� ������� ������������ x86 (IA32) CPU ��������  ������ 64-������. � ������ � AMD ������ ���������� ��������  ������������ &laquo;AMD64&raquo;, � ������ � Intel &mdash; ������� &laquo;EM64T&raquo;, � ������ Intel 64.  �������, ������� ����� ��������� ����������� &laquo;x86-64&raquo; &mdash; ��� �����  ����������� ���� 64-������ ���������� ����������� x86, �� ����������� �  ������������������ �������� ������. ������������ ������ �� ���  ���������� ������������ ������� ������ �� ������ ������������  ��������������, ��� �� ����������� �������� &mdash; ��� �������� ����� AMD64  � EM64T ��������� �� ������� ����� ������ ����. ��� ��� �����, ��  �������� � ����������: ��� ������������� �������� (������ ����������)  ����� ������ 32-������ 64-�������, ����� ��������� (� �����, �  ���������) ���������, 32-������ ������� x86-���� �������� ����  64-������ �������, � ����� ���������� ������ (� ����������, �  �����������) ����������� ���������� (�� ���� ����, ��� ���������� �����  ������� ������ 32-������� 64-������ ������). ���������� �������������  ���������� �� ���� &laquo;64-��������&raquo; ��������� ��� �������� �������,  ������� ������� ����������� ����������� ������� ������������.</p>
<p>���  �� ����������? � ������ ������� &mdash; �������������� �����������. ��������  ��������� ����� �������, ��� ���� � ��� �� ��������� ��� �������� ��  ���������� 32-������� � 64-������ ����� (� 32-������ ����� ��� ��������  x86 CPU ������������ � ������������ �������) ������ �������� �����  �������. ����������, � ��������� ������� ��������� �� �������������  64-������ ������������� ���������� ����� �������������� &mdash; �� ����������  ���� ������� ������ ����������, � ����������� ������������  ����������������� ������������ ����������� ��� ����� �� ��������.  ������: � ������ �� ���������� ������ &laquo;64-������ �������������  ����������&raquo;? � ������, ��� ����� �������� � ��������� ������ (��. ����)  �� ���� x86-����������� ��� ������-����� �� 32-������. � ���� ��  64-������. ������������ ������������ �����������, ������������ �������  ������ CPU ��� �� ������� ������� ������� 32-������� Intel Pentium* &mdash; ��� ��� 80-������ (� �� ��� ��� �����).  ��������� �������� ������ SSE (� ����� ������) &mdash; � ����� 128-������! �  ���� ����� ����������� x86 ���������� �������������: ������, ���  ��������� ���������� ������ ����������� ���������� ������ �����  ���������� 32-������� &mdash; ����������� ��� ������, ��� &laquo;������� ��������&raquo; ���� ������� ���������� &mdash; ������������ ���������� ���������� �� ��������� (<a href="cpu-bitness.shtml">����� �������� � �������� ����������� ����������� ����� �������� � ��������� ���������</a>).  ��������, ���������� AMD Athlon XP � Intel Pentium 4 &laquo;Northwood&raquo;  ��������� � ���� �����, ���������� � 32-�������, 80-�������, �  128-������� ����������. 32-������� ���������� ���� �������� �����  ������ (�������������� �� ������� ���������� ����������� IA32 &mdash; Intel  386) � ��������� ������ (�������� 4 ���������, ���� �� �������  &laquo;������������������� �������&raquo; �� Intel &mdash; <a href="http://ru.wikipedia.org/wiki/PAE">Physical Address Extension</a>, ������������ &laquo;32-������&raquo; ����������� ������������ 36(!)-������ ���������).</p>
<blockquote class="smaller">* &mdash; ������ x86 CPU, � ������� ��� ������������ FPU (����� �� �������������� �� ����� � �������� ���������� ����), ���� ��������� ����������� ��������� &mdash; i486DX. �� � ������� i486 ��-���� ������������� i486SX, � ������ �������� FPU �� ������. ������� � Pentium, Intel ������ �� ��������� x86 CPU ��� FPU, � ��� ���� ������ ���������� ��� ��������� �������������.</blockquote>
<p>�����  �������, ��, ��� ���������� AMD � Intel ����� &laquo;��������� 64-�������&raquo;,  �� �������� �������� ��� ���� ��� ������������������: ��������� ������  ��� ������ � 64-������� ������ �������, ���������� ���������� �/���  ����������� ���������, � ���������� ������������� ������ ����������  ������. �������: �������� ������ ���� ������������ (�������� ��������!)  ����� �� ��������. ����� ��� ����� �� �������� ������ �������� AMD �  ����������� ���� &laquo;���������������&raquo; (�� ���� �������� 64-��������)  x86-�����������. �� ���� ����� ������������ �� ���������� ��������: ��  ����� ��������� �� ��, ��� ���������, ������������ &laquo;� ������� ������  ����&raquo;, �� ��������� 64-������� ������������ ����������� ������ &laquo;�����  ����������&raquo;. ����� �� ����� �� ������... </p>
<h3><a name="16" id="16"></a>������������ ���� </h3>
<h4><a name="17" id="17"></a>� �������������� (�������������������) ��� ���������</h4>
<div align="center">
  <img src="images/cpu-digest-2009/1-th-1-cpu.png" width="311" height="486">
  <br><br>
  <em>������������ ����������� (����������������) �����: � ������ ��������� ��� ���������� �������� (&laquo;���������&raquo; ������� �����), �� � ���� ������ ������� ��������� ��������� ��� ������ ����� �� ���</em></div>
<p>������,  ��� �� ������ ��������� ����������� ������������ ������, ����� �������  ���������, ����� ������ ��� �����, � ��� �� ���� �������� ����������  ���� �/��� ����������� ����� �����������&nbsp; ������������� ������.&nbsp;�  ������ ������ �� ��� �������� �������, ��� �������, ��������� �� ����  ������ ���������� � ����� ������, ����������� ��������� �� �����������  ������� �� ���� ���� ����������� � ����� �����&nbsp;&mdash; ���� ���� � ����� ������� ���������*.  ����� ��������� ����������� ����� ��������� � ���������, ����� �������  ���������, �� ���� �� ������������ ������� �������� ������ ����������.  �� ������������� ��������� � ��������� SMP (<a href="http://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D0%BC%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%87%D0%BD%D0%BE%D0%B5_%D0%BC%D1%83%D0%BB%D1%8C%D1%82%D0%B8%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D1%81%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5">Symmetric Multiprocessing</a>, c����������� �������������������), �.�. ���� �� x86 �������� ������ ���� �������.&nbsp;�� �������, ����� ��� ����� ����� ����������� (������ ������ &mdash; ������������ ����) � ������� ��� ��� ���� ����������, ������ ����� ���� ������� ����� ������, � ��� ��� ������������ ������ � ������ � ���� �� ������� ������.</p>
  <blockquote class="smaller">
  * &mdash; p�����  ������������ ��������� �� �������� ����� ��� ������ �����������  ��������������, ������� � ��� ��������, ��� ����������� �������  ������������������ � ������������� �������, �������������� ������� ��  ������������, � �����������������. ������ ����, ����� ������������� N  ���� � ���� ��� &mdash; �� ��������� ����� ������������� N ��������, � � ���  &mdash; N ����������� �����������. �������,  ����������� ������� �� N-������� ����������, ����� ���������� �  N-������������ �������. �������, ����������������� ������� ���� �  ������ &mdash; ��� ���, ���� �� ���������� ����������� ��������� ����������  ���� � ����� CPU. ���, ��������, ���� ��� ����� 16-������������  (16-�������) ������� &mdash; �� ����� ���������� 16-������� x86-�����������  (����, �� 2009 �.&hellip;), ��� ������� ����������� �� 4-������������  �������, � ������� � ������� ���������� ����� �� 4 ����.</blockquote>
<div align="center">
  <img src="images/cpu-digest-2009/4-cpu-mb.png" width="391" height="435">
  <br><em>4-������������ ��������� �����, � ������ ����� ������� ����� ����������<br>
  6-������� ���������. � ���������� �� ������� 24-�������  x86-�������.</em></div>
  <p>����,  ��� ������� ������: ��� ���� �� ��� �����? ����� ������� �� ����  ���������� ���������� ���� (�����������) ������������� ��������������?  ����� ���������, ����� �������� ������ ��������� ��� ����� ���������  ������������ � ������������� (������������������) ���������: <em>&laquo;������  �������������� ������������� � ������ ������� ��-�������, � ������  ��  ������������� �����?&raquo;</em> ����� ����� ���������� ��� �� ������� ������� �  �������� �������� � ����� ����������� ������, � ����� �����������  �����. ���������� ��� ����� ���������������� ��������.</p>
  <p><strong><em>������� �1:</em></strong> ��������� ���������� ����������� ���� �� ����� �����.  ��������, �� ��������� � ���������� ����, � ��� ���������� ��������  ���� � �������� �����. ���� � ��� � ������������ ���� ������� &mdash;  �� ����� �������� ������� ������� ���� ����, � ����� ������, ����  ������ �� �����������, ������������ ����� ���� &mdash; �� �� ����� � ����  ���������� ������ ������� �� ����� ����� ���-�� �����. ���� �� ���� ���  �������� &mdash; �� ���� ����� �������� ������ ����, � ������ &mdash; ������ �����.  ��������: <em>���� �� ���� ������ �� ����� ����������� ������� &mdash; ��  �� �������� ����� �� ���� ����, ��� ��� ����������� �����������</em>.  ��������� ��������, �� ����� ������ �������� ���������� ����������� �  ������ �������� ���������� �����&nbsp; �� ������������� (� ��� � ���  ������������ ������������ ���� ��� ����������� ����������): ���� ���  ������ ��� ��� ������ �������� ������ �� ������� ������. ��� ��������:  ��������, ������ ����� ����� � ����� &mdash; �� ��� ������, ���� � ��� �����  ���� �����?</p>
  <p><strong><em>������� �2:</em></strong> ���� �������� ��� ��������� ������������������ ������.  ����� �������� ������������������ ������ (��� �������, ��� ��� ����  ��������� ����, ������� �������� ���������� ��������) &mdash; ��� �� �� �����  ����, ���, ��������, ����� �����. ������� � ���� �� ������ � �����,  ������� ���� ������� ���� &mdash; � �����! ��, ������, ��������� ��������,  �� ��������� ���������� ���������� �����, ��� ��� � ������ ������ ����  ���������������� ��������: ������ ���� ���� ��������� � ������� ����,  �� ���������� ������������ &mdash; � ����� ����������. � ������ �  ��������������� �� ���������� ����������: ������ ����������� ������,  ���� ���� ��� ������ ������������, �������� ����� ��������� ������:  ������������ �������� ����� ������������ ������ �������� ��������  �����, ������������ � �������� ���������� ����� ������ ������  ������������. ������� ��������� &laquo;� ���� ����� ���� ��� �����&raquo; ��������  ������������� ������ ��������.</p>
  <p>����� ������� ������ &mdash; ��������,  ����� �����. �������, ������� ����� �������� ����-�� ��������� �����,  ����-�� ��������, � �.�., �� �� ����� �� ��������� ����� � ���  �������� ���������� ���������� ������� (���������� �����), � �������  ������� ����� ��� ������ �������� ���������� �� ���������. ��� � ���� �������� ������������������ ������:  ��������� � ����� ����� ����������� �����������, � ��������� &mdash; ���.  ���������� ��������, ��� <em>���� ���� �������� �� ���������� ���� ������  ���� �����, � 2 ���� � ���������� �� ���������</em> (� ���� ������  &mdash; �� � ������ � ������, �������� ����� ��������� � ����������� �������  ������). � � ������������ ����������� �� �������� ������������������  ������ �� ��� ���� ����� ��������������� ������������ �� �����. � ������, ��������� �� ��� ��� ������� ������ ����� �����������.</p>
  <p>���������:  ���������� ��� ������ ���� �� ������ �������� � ���������, � ���� ����  � �������� &mdash; �� �� ������ ���������, ������� ����� ���� �� ������� �  ��������� ������. ����������, �� ������� �� �������� �����  (������������ ��������). ��������� ������ ������������ ������,  ��������� &mdash; �� �����, ��������� �� ������������ ������. ����� ��������  � ����������� ������� ������������ ��� ����������� ������, ��&hellip; ���  ����� �����, ����� � ��� ���������� ����� ��������� ����������� ������  ��������� ����������� ����� ������������! ������ ����������,  ������������ ��������� �� ���������� �������� ������������ � �������  ������� ��������� �������� ���� � �������, � 4-������� &mdash; �������� � ���  �� ��������� � �����������. � ��� ��� ������� &laquo;����������������&raquo;  �������� ��������� ��������� ����� ����� ����� ����� ����.</p>
<h4><a name="18" id="18"></a>����� ���� � ���������� Hyper-Threading </h4>
<p>������,  ��� ���� ������� � ����� &mdash; � ����� ���������� �� ������ �����. � �����  ��, ������ �����, �� ����� ����, � ������ �� ����� ���� �� 1 �� 6  (����� &mdash; � ������). ��� ���� ����������, �� ����� ��� � ���������� ����  � ������������� �� ����� ����� &mdash; ����� ���, ���������� ������ � ����  ������ � ������� ������������ �/��� � ��������. � �������� �����������  � ����� ������ ����� ��������� � ������������������ ����, ��������, ���  3D-������� � ������������� �����. ����� ������� �� ���������� ����, ��  ����� ����� ������ ���� ������������� ���������� (���� ���� ���������  &laquo;����&raquo; � ������������ �����).</p>
<div align="center">
  <img src="images/cpu-digest-2009/2-th-2-cpu.png" width="614" height="489">
  <br>
  <em>������������ (�����������������) �������: ��������� ������� ���� ���� (�����������), ����� ������������ ��������� ��� ���� ��������</em></div>
<p>���  ���� �������, � �������������� ���� ����������� �� ����������  ������������������. ����� ������ ��� �� ����� ����������� �����������,  ���� ����������� �� ������ � ����� ������. ��������, ���� ��������� ���  ������, ������ ��������� �� ���������� ����������� ������, � ������� ��  ������ ������ ���� ������� ����, �� ������������������ ������ ��� ����  ����, � ����� ����������� ������ ����� ���� ������������, �����  �������� ����� ��� ����. � ���������� ��� ��� ����� ����������� ��  �������� ������� &mdash; �������� ���������� �������� �� ��������� �  ������������ ����������� ����� ���� ������������. ���������������  ��������, ����� ��������� �������������� ��� ������������ ���������� �  �� ����������� ����������� �������, �������� �������� ���: ���������  ��������� ������� �������, ������� � ���� ����, ������ ������ ����� �  �������� ���������� ����� ������ ����, � ������� ���� ����� �����, �  ����� � ������� ���������� �����, ����� ���� ���������� ����������  ������� �� ����������� ����� �������� ���������� � �� ��������� �  ��������� ������ ����. ��������� �� ������ �������� ��������� ������  �������� ������ ������, � ��� �������������� ���� &mdash; ������ ���� ����.  ������ � ����� ������� � ������ �������� ��, ��� ���������� ��������  ������ ������������������ �� ����� ������� (���������� &mdash; ����): 2 ����  �������� ����� ������� ������, 4 &mdash; ����� ������� ����, � �.�.. ��  ������������� �������� � ����������������� ������, ��� ����� ����  ������� CPU ���� �������� �� ����� ���������.</p>
<p>�������������� ��������� ������ ��������� ���������� ������������ ����������  Hyper-Threading (���������������). ��� ��������� ������ ���� ��������  �� ��� &mdash; ���� � �� ��� ����������, ��� ������� ������������ ���� ����,  ���� ���� �������. ��� ���� ������������ ������� �������� � ����������  � ����� �������  ������ ����, ��������� ����� ����� ���� ���������� (�� �������������  ���������� ������������ ����������� ��������), � �� ���������� (��  ����� ������� �����������). ��������� ������������������ ����� ���� ��  ����� ����������� ���������� �� ������������� (20-50 %) ��������� �  ������ ������� �� ������ ����������� ��������, � � ������� �� ���������  ����� 10-15%. � ���������, ��� ����� ��������� �������������� ���  ��������� ��������������, ��� ������ ��� �������� �� &laquo;�����������&raquo; ��  ���� Hyper-Threading.</p>
<div align="center">
  <img src="images/cpu-digest-2009/2-th-1-cpu.png" width="311" height="486">
  <br>
  <em>��������� � ���������� Hyper-Threading: �� ����� ���������� ���� ������������ ����������� ��� ���� ����������</em></div>
<h4><a name="19" id="19"></a>�������� ����� ������ ����� ����������������</h4>
<p> &laquo;������������  ����&raquo; (��� �������, ��� ��������� ��� �������� ������ &laquo;����&raquo;) &mdash; ���  ���������� ���������� (�����)����������� (�.�. ����������� �  &laquo;����������&raquo; ������), ���������� ���������� ��� ����� �����  �����������. ��������, K10 &mdash; ��� ����������������, ������� ����� �  ������ ������ ����������� ����������� AMD: Athlon II, Phenom, Phenom  II, Opteron. ���������������� ����� ����� ��������: &laquo;�������&raquo; �� �����  ��������, ���������� �� ��� ������ �� ����, ������������ ��������� �  ������������ ����������, � ������ &laquo;����������&raquo; �����������. ���� &mdash;  ����� ���������� ����������. ��������, ���������� ���������������� �10  � ����� ������, ��� ��������� ������������������� � ���� L3, � �����  HyperTransport �������� � 2 ��� &mdash; ��� �����-����� ������ �������� ����  Regor ��� Athlon II.</p>
<p>�����  ������� ��� &laquo;����&raquo; &mdash; ��� ���������� ���������� �����������  ���������������� &laquo;� �������&raquo;, ���������� (� ������� �� �����  ����������������) ������� ������ ������������� �������������.  ���������������� &mdash; �������, ��� ��������� ����� �������� ����������  ����������. ���� &mdash; ����������������, &laquo;��������&raquo; �������������  ����������� � ����������������. ����������� ����� ������, �����  ���������� ������� ����������������, �������� ��������. �, ��������,  ����������� ����� ������������ ���������� ���� �� ��������� ��� ��  ����� ������ ������������� &laquo;������&raquo; ����. ��������, ����� ��������  ����� ����������� AMD &mdash; &laquo;Athlon 64&raquo; &mdash; ��� ���� ���������������� (K8),  �� ����� 13 ���� &mdash; �� Sledgehammer  (2003 �.) �� Huron (2009 �.). ������ ����, ����������� �� �����  ����������������, ����� ����� � ��� ����� ������ ��������������. </p>
<h4><a name="20" id="20"></a>������� </h4>
<p>�������  &mdash; ���� �� ����������� ����, ������ ������������� ������������ ��  ����������, ������ � �� ����������� ������ &laquo;������ ����&raquo;. ��� �������,  �� �������� ��������� ������� ������������� ����������� �� ������  �������� �������, ��� ���������� &laquo;� ������� �������&raquo;. ��� ��� ���� ����  �� ��������� ���� � ��� �� ���������, � ��������� ����������� ���������  � ����������������, �� � ���������� ���-�� � ������� &mdash; ������ ��������,  ���������� �� ����� ��� ������� ������. ������ ����� �������, ���  �������, ������ � ������-�� ������� ��������������������. ��������,  ������� ����-���� ������� �����������������, �������� ����������  �������, ���-�� ��������������, ��� ���� ��������� ���� ������ (������  �� �����&hellip;) ������. � ����� ������ ������������������ ���� ����� ����  ��������, ����� �� ���� ������� ���� ���������� �� ������ ���������  �����������, ����� �� ���� ����� ����� ��������. ���� �����  ������������ �������� � ����� ������� &mdash; ��������, ��������� �����������  ���� �� ������ ����������, ������������� �� ���������� ����������  ������. ������� ����, ����� ������� ��� &laquo;��������������&raquo; ���������  ����������� ���� ����� �� �����: � ����� ������ ������� ���������  ������� ������ �����-�� ������������ ���������. </p>
<h4><a name="21" id="21"></a>������� ������ ���� </h4>
<p>���  �������, ������ ���� �������� � ����������� ������� &laquo;��������  ����������&raquo;. ���� � ����� ������ ����������� &laquo;������� ������ ����&raquo; ��  �� ����� ���������, ��� ��� ���������� �� ����������� ��� ������������  CPU ������������� �� ��� �� �������, ��� � ���� (�������� ������  �������� ��������� �������� ������ &laquo;��������&raquo; x86 CPU &mdash; Intel Pentium  II � Pentium III ��� Slot 1, AMD Athlon ��� Slot A &mdash; � ��� L2-���  �������������� �� 1/2, � ���� ������ �� 1/3 ������� ������ ����).  �������� ����� ������� � ����������� ����������� �������� ��� L3 &mdash; ��  ����� ��������� �������, �������, ��� � ������� ����. ��� �����  ���������������� ������������ �������� ����������� � ���, ��� �������  ������ ���� ����������� ������� ���������� ������������������. ���  ������ �� ���.</p>
<p>��-������,  ������ ���������� ������������ ���� (� ����������� �� ����, ��� ���  ��������������, ������� �������� ����������� ������ ��������� �����, �  �.�. � �.�.) ����� ��������� ������ ����� ������ �� ���� ����, �������  �� &mdash; ��� ����� ���� ���������� ����� ������ � �������. ����� �������  (���������� ����� ���������, ����������, ����� ������ ��������)  ���������, ���� �������� ��������� 3 ���������� �� ����, ����� ����� ��  ����� ������� �������, ��� ���������, ����������� 2 ���������� �� ����  &mdash; � ��� ���� �������� ��������� ����������� ���������������.</p>
<p>��-������,  ���� � ������ ������ � ���� �� ����, ���������� ������� ����� �� ������  �������� � ����������������� ���������� ��������������. ����� ��� �����  ���������� ������, ������� �� ����� ���������� �� ������� &laquo;�����  �������� �������������� ���������� � ���&raquo;. ���� � ���, ��� ��������  ���������� ������ ����� ���������� &mdash; ��� ����� �� ������������  ����������, �������� �� �������� ���������� ���������. �� ����� �����  �������� ����������� ������ � ������ �� CPU. ���������� ���� �����  ������������ ����� �������: �������������� ���������� &mdash; 10'000 ������ �  �������, �������� ������ ������ &mdash; 1000 ���� � �������. ���� ����  �������, ��� ���� ������� �������� �� ����� ������ �����, � ������ �  ��� ��� ������, � ����� ��������� ����� ����������� ��������� � �����  �������? �� ����� 1000 ������ � �������, � ������������������ CPU ���  ���������� �� ��� ���: �� ����� ���������� �� ��, � ���������  ����������� ������ � ���������. ����� �������, ������� ��������:  ���������� ���������� ���������� ���� ������ ������� ����, �� �������  ������������ ���������� ������, ��� ��� � ���� ������ ������� �  ������������ �����, ���������� ������� CPU ���������� ����������� ��  ���������� �������������� ������� � �����.</p>
<p>�������,  � �������� Intel ���� ���������� TurboBoost, ����������� ������� � ���,  ��� ���������� � � ���������� ������ �� ����� ������� ����������  ������� ����-����. ����� TurboBoost &mdash; ����������� ������� �����������  ���� � ����������� �� ����� �������������, � ����� �� ����������� �  ����������������� ����� ����������. � ���������� &laquo;����������&raquo; �������  (���������� �� ������� ���������� ��� � �����-�����) ������� �����  ������ ����� ��������� �� 133-666 ��� (� ��������� ����������� �����  Core i7 �������� ������ �� 1333 ���, ���� �������� ������ ���� ����),  ������ �� ����� �������. ����� ������, ����� �������, ��� TurboBoost  ���� �������� +10% � �������� &laquo;�� ������ ���&raquo;. </p>
<h3><a name="22" id="22"></a>�������������</h3>
<p>�������������  � �������������� ������� &mdash; ��� ����������� ��������� ���������  ������������ ������ (� ��������� ��-��� ������ �� ���) ���, ��� ���  ����� �������� ����� �� �� ����� ��������� ����������� (�.�.  ��������������� ������������� &laquo;������&raquo;  �� ��������� � ���������). ������� ��� ��������� �� � 60-� ���� ��  ����������� IBM � �� ��������� ������� ���� ������� ���� ���  ���������������� � ���������������������� ������� ��������. ������  ����� �� ����� Microsoft Windows 7 ��� ������� ���������� ���������  ������������� � ����������, ���� �������������� ��������� 32-������  ���������, ���������� ��� Windows XP � ����� ������ ������ (�.�. �����  &mdash; ������). ��� ����� ����� ��� ���������� ���������, ���� ����� �  ����������� �����������? </p>
<p>���������� ���������  ������������� � ���������� ���������� �������� ������� ���������������  ��������� ������, ������� ��������� ������������, �������, ��������� �  ����������� ����������� �� ������� � � ����� ������� ��������� ���� ��  ����� (��� ����� ��� ������������ � ������������ ���� �������), ���  ������������ ����������. ��� ������, ��� ������� ������������� CPU  ��������� ����������� ������������ ����� ����������, ��� ��� �� ����  ������ �����: Intel Virtualization Technology (Intel VT) � AMD  Virtualization (AMD-V). ������ ����� ���� ������������� ���� ���������  �������, ��, ����� ��, ������ �������������� � �� ���������� �  ���������������. � ����� ������ ������������ ������� ����� &mdash; ���������  ������������� � ���������� ����� �����, ��� �� �����, �.�. ���� ����  ��� �� ���������� ������, ��, ��������, ���������� ����� ���� ���, �  ������� � ��������� � ����������� � � ��� �� ����� ���������. �����  ���� &mdash; � ����� CPU, ������������� ������������ ��� ������, ��� ���  &laquo;������, �� ������&raquo;&hellip; </p>
<h3><a name="23" id="23"></a>����������� ����������� �������� ����������� </h3>
<p>������, ����� ���� ���� �������, ���� &mdash; �������, � ������� &mdash; �������� <em>(����. ���.: ������ �������� �� ������ ��������� � ������� �������, �������� ������ �������)</em>,  ���������� �������� ������: ��� ������������� + �������� ����������  ���� (&laquo;�������&raquo;) + �������. ��������: &laquo;AMD K6-2 450 MHz&raquo;. � ���������  ����� ��� �������� ������������� �� ���� �������� ������ � ������  ������� ����������� �����-�� ���������� �������, ������������ �������  ���. � ������ ������ ������ �� ���� ����� ���� ������� ���������� ����,  ��� �� ��� ������� ����������. ������ � ��� ��� (� ������ ����� 3 ����)  ��� �������� ������������� x86 CPU ������������ ������ � ��������� ���  �������, ��� ��� ���������� �������� �� ���� � ������ ���� ���������  �������������� ����� ������ ����������, �� � �� ����� ���������. ����  ������� �����. ���� ��� ����� ������ �������� �������������� ������-��  ����������, ����� ����� ������ ������� ��� ������ ��� � ����� ���  �������, � ����� ������ ������� ����������� �� ��������� ������  ������� �������� ��� �������������. ���� �� ��������� �������� ������  ����������, �������� ������� �� �� ������� ��� �� ������, �������  ���������: ��� ������ <a href="http://en.wikipedia.org/wiki/List_of_AMD_microprocessors">���� ����������� AMD</a>, � ��� &mdash; <a href="http://en.wikipedia.org/wiki/List_of_Intel_microprocessors">���������� Intel</a>. ��� ��������� �������� ���� ��� <a href="http://en.wikipedia.org/wiki/List_of_VIA_microprocessors">���������� VIA</a>. ������ �� ��������� ������ ����������� �� �������� (Celeron, Sempron,  Core i7, Phenom, Nano � �.�.) ��. � ����� ����� �������� �������� �����  Lists.</p>
<p>���  �������� ������ ���������, �� � ����� �������� �������������� ��������  �������� ����� (� ��������������� ������������, ����������). �������  ����������� �������� ������� �����������. ��� ������� �� �����  �������������� ����������: ���������, �������� (mainstream), ������� �  ��������� (��� ��������), �������� � ��������� (��� ���������), ������  ������� � ������� � ���������� ������������������� (��� ������� �������  � ��������). ����� ����������� ����� ��������� ���� ������� &mdash; ��  ����������� ����������, �� ��� ������ &mdash; ��� &laquo;�����&raquo;. �����, �� ���  �����, ��� ����� ���� ������� &mdash; 2-4-������� ����� &laquo;��������&raquo;  ������������������, ������������ ����� ��������� ������� � ����������:</p>
<ul>
  <li>
    ����� ���������� ���� (���������� ������, ���� � ���������� ���� ���������� ���� Hyper-Threading);
    </li>
  <li>
    ��  ������� (��� ������� ���������� Turbo Boost ��� �� �������� &mdash; ������������  ������� ��������������� ������� ������ ���� ���� � �� ������  ���������, ������������ ���������� ������������ ������� ���������� �  &laquo;����������&raquo; ����������� �������);
    </li>
  <li>
    ������ ����� ���� �����;
    </li>
  <li>
    ����� ������������ � ��� ������ � �������; 
    </li>
  <li>
    ������� ���� ���; 
    </li>
  <li>
    ����������� ���������� ������� ������� ���������;
    </li>
  <li>
    ������� �������������� ������������������ ������ � ���; 
    </li>
  <li>
    ������ ������. 
    </li>
</ul>
<p>������  ��� ����� �� �������� ������� ����� ������������������, �.�. �� ��  ������ �� ������� �������, ��������� ������ 2300 ������� ������ 1200,  �� ���� � ����� �� ��� ������� � ���������� ���������. ����� ����  ����������, ��� � ����� ������ �������������, ������ 2300 <em>������� � ������������</em>, ��� ������ 1200 &mdash; � �� ���� ��������� ����������� ��������������, ������ ���� ��� ����, � �.�. � �.�. ���  ���� ���������������, ��� ��� �� ������ � ����� ������� �������  �������� ����� ����� &laquo;����������&raquo; &mdash; �� ��� � �������� ����� �������  (����� ����� ���� ��������?) ������  �������� ���������������, ��� ��������� ��� ������������� ������ ��  ������.</p>
<p>����� ������ � &laquo;��������&raquo; ������� ��� ����� ����������� 1-2  ����� ��� ����������� ������ ����������� �������: ��� �����������  ����������� &mdash; ������ &laquo;�������&raquo; � &laquo;���������&raquo;, � ��� ��������� &mdash; �����  ��������� ��������. </p>
<h4><a name="24" id="24"></a>��������� �������� &laquo;� ����������&raquo; &mdash; ��� ��� ��������? </h4>
<p>�����  ��� �� ��������, ������ ��� �������� �� ���������� � ����������, ��� ��  ���������� ���������� � �����������. ������ ������� ����������� �����  ��� ������, ��� � ��������� �������� ����� ������� � ����������  ��������� ������ ��������� &mdash; ������ ���������� �� ����, ��� �� �����  ���� ���� <em>(����. ������������: ������ �� ���� ����������?)</em> ������� �� � ������ ��� &laquo;������������ 1066-������������ ����&raquo;, ���������� �������  ������, ��� �������� ����� ���������� � ������� �������. �� ����� ����,  ��� �� ��������� ����� ����������� ���������, ����� ������ �����  ������������ ����, ��� ������� � ����. � ������� � ���� ���������: ����  �� &laquo;��������&raquo; ������ ���� �� N ����� &mdash; �� � ���������� �����������  ������������� ����� �������� �� ����, �� ����� ������� ������ ����  �������������, � ����� ���������� ������ ��� �������� ���������� ��  ����. �� ������� ������������ ���� � &laquo;���������&raquo; ��������� (����� ����  ����, ��������, � ���������� Intel Pentium III) �� ���� ��������� 64  ����, �� ���� 8 ����. ��������������, ���� ������� ������� ���� �����  100 ��� (100'000'000 ������ � �������) &mdash; �� �������� �������� ������  ����� ����� 8 ���� * 100'000'000 ���� &asymp;&nbsp;763 ��������� � ������� (� ���� ������� � &laquo;���������� ����������&raquo;, � ������� ������� ������� ������ ������,  �� ��� �������� &mdash; 800 �������� � �������). ��������������, ���� �� ���  �� 100 ���������� �������� DDR-����, ��������� ���������� �� ���� ����  ��������� ����� ������ &mdash; �������� �������� ����� �����. �������,  �������� �������������� ������ ������ ������������, ������ ���� �������  ��������� &laquo;200-������������&raquo;. ���� �������� ������� ������ � ������������� ��� ���������� &mdash; 100 ��������. ��� ��� &laquo;���������&raquo; � ����� ��������� ��������.</p>
<p>�������,  ����������� ��������� ����� ��������� ������������������ ���� �� �  ������, � � ����������� (�.�. ����� �������� ������) � ������� &mdash;&nbsp;��/s ��� G�/s (� ����������� ���� � ����). ��� ����� ���� �������� �� ������ ���� � ������. ���  �� �����, ������� ����� &mdash; ������� �������� ���� ������� �������: ����  �� �� ���������� ����� �����������, ��� ��������� �������� ���� ���  ����� ����� &laquo;� ����������&raquo; &mdash; �� ��� ����������� ������ ���� ����������  ������ � ������ ���� �������� �� ����. ����� ���������� ��� � �����  ������, ��� ������� ������� ���������, ��� ���������� ����������� AGP2X  (&laquo;133-������������&raquo;, �� 32-������ ����) &mdash; ����, ��� ���������� ����������� FSB � Pentium III 800 (�������� ������� 100 ���, ������ 64 ����). </p>
<h4><a name="25" id="25"></a>� ��������� ������������ ���������� DDR � ���&nbsp;�� � QPI </h4>
<p>���  ��� ���� �������, � ������ DDR �� ���� �� ���� ���� ���������  ��������� ����� ����������. ������, � ����������, ���������������  ������ �� ������������ ���������� ��������������, ��� �� �����������  ��������� ������, ������-�� �� ������ ��������� ���� ��������� &laquo;��&raquo;: ������ ��������� �������� ���������� ������ ��� �������� �������� ������, � ��� ������ �������� �� �� ���� ����� ���.  �.�. ���� �� ��������� �� ������ ������� ���������� � ������ X �� �����  Y &mdash; �� ��, ��� ��� ��������� ����� �������� � ��������� ���������. � ��� ��� ������ �� ������ ����� ���� ������� �� ���� � � &laquo;���������&raquo; ���������!&nbsp;��������������,  ���� �������� � ��� �����, � ������ ������������ ������ �� ����� �����,  �� ���������� ������, ������� &laquo;������������&raquo; �� ���� � ���������  ��������� (� ������ &mdash; ��� ���� ������) ����� ����� ����� ����������  ���, ������� ���������� �� ��������� ���������. ��� �������� ���  ������� � ������ � ������ ��� ����� � ��������, �� ����� ���� ��������  �������� �������� ��� ����� ����� ����������. ����� &mdash; ���  HyperTransport (��� �� &mdash; ��, �� �� ������� � HyperThreading) ���  ����������� AMD � QPI ��� Intel. � �������� ���� ������ �������  �����������, ���������� �� �� ���������� �������: ��� ���� ���  (��� �������, 32 ����), � ��������� ��� ������� �� �������, �����  ��������� ������ 2 ���������� (�� ������ ���� ����� &laquo;��������&raquo; � �����)  �, ����� ����������, &mdash; ��� ���������������. �.�. ���������� ������� ��  ���� ����������������� ���������, ����������� ������������ ����������  ������ � ��� �������. ��� ��� ��� ������ �������� ���� ��������� ���  �����: ������� ������ ���� (��� �������, � ������������� �����������  ������ ���), ���������� ������� ������ � ����� ����������� (�����  ������ ������� �� ���� DDR) � ����� ���������� ������� ������ � �����  ������������ (��� ����� ������). ������, ���� �������� ������ ���  ������ ����� �� ������ ���� � ������, �� ������� �������� ��������� �  ������� (������, ����. ����/�) &mdash; � ����� ��� ���� ������������. </p>
<p>��������, �����  ��������� ��� ����� �� ���������� ������������ � ���� ����� �����������  � ������� &mdash; ��� ������ �����, ������������ � ����������������. ������  ����������� ���������� ��������� ������� ������ ��������� ����������. </p>
<h4><a name="26" id="26"></a>������� ������: ������, ������, ���������� </h4>
<p>� ������ ���������� ���� �� ������ ��������, �� � ��������� &mdash; &laquo;�����&raquo;,  �� ������� ��� ���������. �� ������������, �������, �  �������-���������� �� ����������. ����� ��������� ������ ���������,  ��������� �������� ��������� ������ �������.</p>
<p>��-������,  � ���������� ���� ������ ������������ ������� � �����������  ����������� ������� � ����������� ������������ &mdash; �� ��� ������ �����  ��������� � ������� ��� CPU �� ����������� ����� (���������� ����������  ��� �������� � �������� ��������� ������ � ���. ������� ����� ���������  � ���). ��� ������� (������) ������������ ������ ��� ������ �������.  ��� ������� ���������� ����������� ��� ������, ������� ��� ����  ��������. ������ &laquo;��������&raquo;  �������� �� ������ ������������ ������������� (�.�. ��������� ���������  ��������� � ������� � ����������� ������ ���������, ������������  ����������� ������-������), �� � �������������, ������� � ������������.  ��������� �����������, ��� ������ � �������� ����������� � ���������  �������, �� ������ ������� ������� ������ �� ���������� � �� ����  ����, ������� �����, � � �������������� ������� ���������� ������ ����  � ����� ���������� ������� � ���������. �������, ��������� ����������  ������ ��������� ������ ������� ���� ��� ���������� ������� �� ������  ���������� ������, ������ ���&hellip;</p>
<p>��-������,  BIOS (����������� ���������, ���������� ����� ����� ���������  ���������� � ���������� � ���������� ����-������ �� ����������� �����)  ������� ���������� ���� �� ���� �����������, ������� � ���� ��������  ������������ ��������� �����. �� ���� ��� ����� ��������� ����� �����,  �� ��� ��������� ���� ��� ������� ������� �������� � ��� BIOS, �����  ������ �������� (&laquo;��������&raquo;)  ����� ��������� � ����� ������������� ����������� �����, ����������,  ��� � ��� ���� ��������� �������. �������, ������ ��� �� ��������� &mdash;  ���� ����� CPU �� ������ ���������� �� �������, �� � ���������� BIOS'�  ��� �� �����, �� ��� ������ ���� ���� ������� �������������� ����������  ��� ��������� �����.</p>
<p>�-�������,  ���� ���� ��������� ����� ��������� ����� ������ ���������� �  �����������, ���� ��� ���-���, ��� ���� ��� ������ ����� ����� ������  ���������� &mdash; ����������. ��� ������� ����� �������� �������� �� ��,  ������� ��������� �������� ������� (��� �������� ����� ����� �  �����������) &mdash; �������� TDP (Thermal Design Power), ���������� �  ������. ���������� ��� ���������� � ������� ���������� &mdash; ������ �������  ����� ������ �������� ����� ��� ��������, ����� ��������� ��  ������������ (��� ������� ���������� � ���� ������� ���� ����  ����������� ���������� �����������, ������������� ���������������  ������� ������). ���� �������� ��-���� ���������, ��������� �������  ������ ������� ����������� ������� ������ (������ ����������  �����������-���������� ��� �� ����������� �����������), � ����� ����� �  ����� ������ ������ ���������� ���������� ������� ����� ����������. ���  ����� � ������ ����������� CPU ������� ������ �����������, ��������  ��������� ��������� �����, � ����� ����������� ���������� ������,  ������� ���� ������� &mdash; �� ���� ��������� ����� ��������� (����� ������  ������������������ � ���� ������).</p>
<h2><a name="27" id="27"></a>���������:&nbsp;��������� </h2>
<h3><a name="28" id="28"></a>��� </h3>
<h4><a name="29" id="29"></a>����� �������� � ������� �������� </h4>
<p>��  ���� ����������� ����������� ���� ��� (cache). ��� ������������� ������  (������������ ������� ���� �� ��� &mdash; �������� ������ � ������� ��������  �������), ������� �������� ������ ���� &laquo;�������&raquo; ����� ������������  ������ � ����������� � ������ ��� ���������� �������� ������ � ���.  ����� �������? ����� ���������, ����� ��������� �� ������������ �������  ����� ���������, ������� ��������� ����������� � �����������������  ���������� �� ������������ �������� (��������, ����������� �������  ������� ��������, � �.�. � �.�.). ��-���� �������, ������� �������  ������ �� ����� ����� � �� ������&nbsp;<em>(����. ���. &mdash; � ���� ������ ��� ���������!)</em>,&nbsp;��������, �������� ��������� � &laquo;����������&raquo; ����� ����������� ����������, ��� ���������, ������� � �����������.</p>
<p>����,  ����������, ��� � ��� ���� ����� ������������ ��������� ������ (�����  ��� ����� ��� �������� 1 ��������) � ������������ ���� ����� �������  (����� ��� ����� ��� �������� ����� 1 ��������). ��� ��� � �������  ����� ����������� ��������� ��������� �������� ������ �� ���� �������  ������? � ��� ����� ������� ���������, ��� ������ � �������� ������  ���������, ��� �������, �� �������� �������������� � ����� �� ����� &mdash;  ��� ����������.  ������� �� ������ �������� �����-�� ����������, ��������� � ����  �����-�� ����� &mdash; �������� ������� �� �� �� �����. ������� ������,  ������������� �� ����������� &mdash; �����-���� �������� � ������. �.�. �  ������ ������ ��������� �������� �� �� ���� �������, �, ��� �������, �  ������������ ��������� � ����������. ������������� ������� &mdash; ���������  ���� �������� � &laquo;�������&raquo; ������, ���������� ��� ���, � ����� ���  �������� ������� � &laquo;���������&raquo; (��� ������ ������� �� ����, ���� ������  �� ����������). � ����� ������, ������ ��� � �������� ������������ ���:  ����� ����������� �� ������ ���������� �������� �� ������ � ���������,  �� � � ���. � ���� ��� �� ���������� ����� �����, ������� ���������  ���������: ��� �� � � ����? ���� ���� (� ����������� ���� ����������  ���������, ��� ��� ���������� � ����������� ����������� �������) &mdash;  ���������� ������ ������, � ��������� � ������ �� ���������� �����.  ���������� � �������: ����������, ���� � ����� ������� � ���, �������  ������ ����, � ������ �����, ����� ��������� �������� �������� ������,  � ������� ����������� ������ ������, ������, ���������� � ���, ����������� � ������� ������������� ���� &laquo;����������&raquo; ����������� � ���.</p>
<div align="center">
  <img src="images/cpu-digest-2009/cache.png" width="625" height="333">
  <br>
  <em>�������� ������� ������ ������������� ����. ������ ���� ��������������� ��� ��������� �������� �������� �������: ������� �����, ���� �������� ������� ������, � ������. ������ ���� � ������ �������� ������ �����������.</em></div>
<p>������ ��-��������, ��� ���������� �������, ������� ���������� ���������  � ���������������� ������������ ����������. ����������������  ����������� ��������, ��� ��������� ��������� � ������ ������  ���������� �� �������, ������ &laquo;�������&raquo; ���� � �����, ��� &laquo;������&raquo;.  ���� � ���, ��� ��� ������ ������, ������� �� ��������� � ����,  ��������� �� ������ �������� ������ ��, � ��� ������������� �����������  ���� ��� ��������� �������� ���� &laquo;������&raquo;. � ����������, ���� ������  ��������� ������������, ��, ������ �����, � ��� ���� ����������� �����  �� ����������� ���������� � ������. � ���������  ����������� ��������, ��� ������, � ������� ������� ����������, ������  ����� � ������� ���������� ������� ����������� ��� ��� ��� ����� ���.  ������� ����� �������� ��������� � ��� (������ ��� ��� ������� �  ���������� &mdash; ���-���������, � ���������� ������ ������ � ���� &mdash;  ���-������) ���������� ��� ������� � ���� �������� ������� &laquo;�������  ������������&raquo; (����� &mdash; ��. ����).</p>
<p>����������,  ����� ������, ����������� � ���������� �� �� ����� ������ ��������� &mdash;  ������� ������ ������ ����. ������� ��������� �� ��� ���������� �����  �� ������� �������, ����� � ��� ����� ����������� �����, �����  ����������. ����� ������� �� ��������� ���������� ����������� �������  �������� &mdash; ������������ ������� ���������� ��������� � ������,  ����������� � ����. ���, ���� ��� ���������� ��������� ����� ������ �  ���, � �� ��� &laquo;����� ��� �������&raquo;, ����������, ����������� �����,  �������: � ������ ��������� ���� �� ����������� ��������� ������ �����  (�� ����� &laquo;������������&raquo;). ���� �������� � �������� ������ ����������  �� &laquo;�����&raquo;, � �� ��� ����� ������������ ����� ������, � �������� �����  �������� ������.</p>
<p>�����  ���� �������, ��������� ����� ���, ������� ������� ������: ��������  ������ ������� ������������ ���������� � ���������� �� ����� �����  (��������� &mdash; ������� ����) � 5-10 ��� ����������� �������� ��� ������ �  �������, � �������� ������ � 50 ���! ����������, � ������ ����  ����������� ���������� �������� �������� ������ � �����: ��� ������ ���  ������������ � �������������� ��������� ������ �� ������ &mdash; ��� ��  ������� ��������� ������ �����������. �����-����, ������� ������:  ���������� ���������� ���������� ����������� ���������� �� 1 ����, �.�.  �� ������� �� ����� ��������� ����� ���������� ������� ����������,  ������ ��� ������� (�� ����� ���� ��� ������, �� ��� ������� ��  �����&hellip;). � ��� ����� �������� ������ �� ������ ����� � ������ ������  ��������� ����� 200 ������! ��� ������ ���������, ���� ��� ������  ������? � ������ �� ������. ���, � ������ ������, ��� �������  ���������� ���������������, ������������� �� ������ ����� ������,  �������� ��� ���� ����� �����, ��� � �����. </p>
<h4><a name="30" id="30"></a>�������������� ����������� </h4>
<p>���������  ��������������� ����������� ������������ ���� ������� � ����, ���  ������� ����������� � ����������� ����������� CPU ���������� ������  ��������������. ��� ������� ������ (����� &laquo;�������&raquo; � ����) �����������  ����������� �� ��� (��� �������, ������) �����: ��� ���������� (L1I) �  ��� ������ (L1D). ��� ���������� ����������������� ��� ����������  &laquo;����������� ������������&raquo; ����������, ������� �� ��������� �� �������  �������� ����� ���������� ������������� ������� ��� ����������  ����������� CPU. � L1I, ��������������, �������������� ������ �������  (� ��� �������� �������), � � L1D &mdash; ������ ������ (��� ������������,  ��� �������, �������� �� ���������� �������� ���������� &mdash; ��� ��� ����  ��. ����). ������������ &laquo;���&raquo; L1 ����� ��� ������� ������ &mdash; L2. ��, ���  �������, � 2-8 ��� ������ �� ������, �������� ����� ���������, �  �������� ��� &laquo;���������&raquo; &mdash; ��� ������������� � �������, � ������. �  ������ ������������ ����������� � ������� ���� ���� ���� L1, �� �����  L2. ������� � ������� ���� ���� ���� L2, ���� ����� ��� ���� ����  �������� L3 (��� �������� ������), ������� � 4-32 ���� ������, ��� L2,  � ��� �������� ����� ��������� (�� �� ��� ������� ������). ��������  ������ � �������������� ����� � ����� ������ �� ���������� �� ���������  ������ � �������������, ������ ����������� �������������� ��������:  ������� ���������� ������ � L1, ���� ��� ������ &mdash; � L2, ����� &mdash; � L3, �  ��� �����, ���� �� �� ����� ������ ���� ��� �� ������� &mdash; ��� ���������  � �������� ������ (���).</p>
<div align="center">
  <img src="images/cpu-digest-2009/k10-vs-k8.gif" width="510" height="344">
  <br><em>� ����� ����������� (�10) AMD ���������� ����� ��� ���� ���� ��� �������� ������.<br>
  ������, � AMD �8, ��� ���� ����� ������ ���� ����������� ���� 1 � 2 ������.<br>
  �������� ��� �� �������� ����� � ������ ����������� Intel.</em>
</div>
<h3><a name="31" id="31"></a>������� </h3>
<p>��  ����� ����, �������������� ����� ���� ����������� ����������  x86-����������� ����� �� �������� � ����� � ��������� x86. � �������  ���������� ���� ����, &laquo;����������&raquo; ������� ������, ������� ���� ������  � ���� ��������� (��� ����� &laquo;�����&raquo;), ������� ��������� �����. � �����  ������, �������, ����������� ����� &mdash; ������� �����, &laquo;�����������&raquo;, ���  ������� ��������� x86. ����� ��������� � ����� ������ ������������ ���  ������������ &laquo;������ ��������&raquo; ��� x86 CPU, ���������� �������: ����  ���� �������� �� �������������� &laquo;��������&raquo; x86-���� �� &laquo;����������&raquo;  �������, ����������� ����� (��� ���� ���������� ����� ���� �������  x86-���� ������������� � ��������� ����� ������� &laquo;����������&raquo;). �������  �������� ������ ������ ������������ ����������: �� ��� ��������������  ������� ��, ��������� ���������� ����� ����� ������, ����������� ��  ����������� �����. ���� ��� �� �������� �������� � ����� x86, �������  ����� �� ��� ���-�� ������ ��� ����������� &mdash; �� ������ ������� ��  ������������� ������ ��������.</p>
<h3><a name="32" id="32"></a>�������� ���������� </h3>
<p>��������  &mdash; �� ����, �� �� ������ ������, �� &laquo;��������������&raquo; ��� �����������  ����� � ������������ ����. ����������, �������� ������ � ����������  ������� ������ �� ������ �������� ������ � ���, �� � � ������ ������  ������. ������� ����������� ������ ����������� x86 ���������������  ������������� �������� ������ ��� ���������� ���������, � �� ���  ���������� ������. ������ ����� ����� ��������� ����������, ���  �������, ����� ��� &mdash; �� �� ������� ���� � ������� ����� ������� ������  � ���������� ����� ����� ����. ������� ��� ��������� (�� �� �����  �������� ������, � ������ ��������) ������ �������� �������� �����  ������������������ ��������: ��������� � �������� ���������� ����������  �� ���, ���������� ����� �������� ��� ���������� ���� ���������,  �������� ��������� ���� ��, � ��������, � ����� ����� ���������  ��������� � �������� ������. �.�. ������ � ������� ���� ���������, ����  �� �������, ����� ����� ������ � ��������� ��� ������ &mdash; �����  ������������� ���������� ���������� ����� ������� (��� �����&hellip;) �������  � ����, �� ��������� ���� � ���, ��� ����� ������� ������ ����������.  ������ ��������� ������ ��� ����� ��������� ����������� �������, ���  ��������� ��� �, ��� �����, ��������� ����� ������ (��� ������ �����  ����������� ������������ �������). ��� �� �����, �������� ��� � 5-10  ��� � ������������ �� ���� ������ ������ ��������� ����������� ���  ������� �� �����, ���� ���� �������� ����������� (� ��� �������� x86-64  � �������������� ���������� ��������� � ��, � ������).</p>
<h3><a name="33" id="33"></a>�������������� ����������</h3>
<p>������  ����� ��� ������ ����, ������� � ��������� ���������������� ������,  ������� �������-�� �������� � �� �����, ���� ������� ��� ��� ���������  � ������������: �������������� (�����������) ���������� (��). �� ����, ������ ��� � �������� ����������� ����������� ���������  ����������. ����� �������� ��� ���� &mdash; �������� ��������, �� ���������  �������� �����. ����� �������� ��� �������� &mdash; ����������� ����������  ������ �������, �� �������� ��������� �����. ����� ����, � �����������  � �������� ������ ��������� RISC (� ����� ������ ������������,  ����������� x86 � ��� �� ����������, �� ��� ������� ����� �����  ��������) ������� ����������� �������������. � ��� ��������������  ��������� �������� ����������, ��� ������ ��� ��������� �������� ���  �������. ������ �� ������ �����, �� ����� ������� �� ��� &mdash;  ����������-���������� ���������� (ALU), ����� ���������� � ���������  ������ (FPU), ����� ��������� ��������� (SIMD &mdash; ������ ����� ��������  ��������� ��������� ����������, ���������� &laquo;���� �������, �����  ������&raquo;) � ����� ������ ������ � �������.&nbsp;  ������ �� ����� ��������� ������ �� �������, ������� ������������� ���  ����. �������������� ������, ����������� � ��������, �� ���������  ����������� ����������� ���������� ����������� ����-�����������. </p>
<h4><a name="34" id="34"></a>����������-���������� ���������� </h4>
<p>ALU  (���� �� ������� ����, �� ��������������� ������ ������������� ����)  ����������� �������� �� ����� ������ ��������: ������� ��������������  �������� (��������, ���������, ���������) � ������ �������, ����������  �������� (&laquo;�&raquo;, &laquo;���&raquo;, &laquo;����������� ���&raquo; � &laquo;��&raquo;), ����������� � �������  �������������� �����, � ����� ������� ������. ������ ALU � �����������  �����������, ��� �������, 3. ��� ���� &mdash; �� ������ �����, ��������  ������ &laquo;���������������� � ������������ ���������� ������&raquo;.  ������������ �������� �������, ��� ���� �� ������� ��� ���������  ������� � ������ �������, �������, ����� �� ������ ���� ��������� �  ���. �������� &mdash; ���������. ������ �� �� ��� ������. ���� � ���, ���  ����� � ������������ �������������� ��������� ������� �� �������  ������� ������ ������. �.�. ������� ��������, ��������� � �����������  ����� ����� ����� �������� &laquo;���������&raquo;, ����� ����� ������ ���������  ���, ����������� ������ ��, � ��� ������������� ���������, �, ���  �����, ������� ����������� ���� ����, ������� ������������� ����������  ����� �� ���� ����������� ���� (������ &mdash; �������������, � �.�. � ���  ������������ �����), � �������� ��� ������ (��� �������� �������� �  ���������� � �������������� ����������� ������ �������� ��� ���������  �������). </p>
<h4><a name="35" id="35"></a>����� ���������� � ��������� �������* � ��������� ��������� </h4>
<p>FPU  ���������� ����������� ������, ���������� � ������� � ���������  �������, ����� ����, ����������� �� ���� &laquo;������ ���� �����&raquo; � ����  �������������� ������� ������ ��� ������ � ���������� ������� (MMX �  SSE � ������� �������) &mdash; ���������� �� ����, �������� ��� � ������� �  ��������� �������, ��� � ������. ���� �� ����� 3-4, �� ��� ������� ���  ��������� ���� &mdash; ��� �������, ������ ���� ����� ������ �����������  ������, �� ������ 2 ��� 3 ��������� ������� ������� (��� �  �������������� ��� &mdash; �� ������ �������� SIMD ALU ��� SSE ALU), ������  ���� &mdash; ��������� � �������, � ��� ���� &mdash; �� ��������� (�����������  ��������� �������, ������� �������������� �������� ������ � ��.).</p>
<blockquote class="smaller">* &mdash; �� �������� ������� �������������� �����, �� �������� FPU &laquo;������ ���������� � ��������� �������&raquo;, ���� ��������� ��� �������� (Floating Point Unit) ����������� ��� &laquo;&hellip;� ��������� ������&raquo; &mdash; �������� ������������� ��������� ��������� ����� �����.</blockquote>
<h4><a name="36" id="36"></a>����� ������ ������ � ������� </h4>
<p>���  ���� 3 ���� ������� &mdash; 2-3 ��� ���������� AGU ��� ���������� ���������  ������, ���������������� ����� �������� ������, � �� ������ �����  �������� � ���������� (��������), ����������� � ����� ������ �������  ������. ��� �� ������ &mdash; ������� �����, � ����� ���� ����� ������ ��  �������� � ���, ���� �������� &mdash; ������ �� ���� � �������.</p>
<h3><a name="37" id="37"></a>����������������</h3>
<p>������ �������������� &laquo;���������&raquo;,  � ����������� CPU ���� ��� � ��������� ���������� ��� ����������  ����������� �������. ������ ��� �������� ����������� �� ������ ���  ��������� ���������, �� � ��� ���������� ��, � ���� ��������. ���� �  ���, ��� ���������� ����������� �������������� ����� �������� �  ���������� ��������������, ������� �� ��������� ���� ������ ������� &mdash;  ��� 10 ��� ����� ���� ������ ���� �����������, ��� ������� ���������  ����� ���������� ������������� � �������� ����� ��� 100 ����, � �� �  ������. ������� ���������� �� ���� ���������� ������� �������� �  �������, ������, ��� ��� ���� �� ����� ��������� ����� ����������,  ��������� ����������� �����. � ���� ���������� �� ��������� &mdash; ���������  (��� ������ �������������� ���������) �����������. � ��������� � ������  �� ���� ��� ������� ����, �� � ��������� ��� �� �������� � ���, �����  �������������� ����. ������ ������ ����� ���������� �����������  ����������� ������� � ����������� �� ��������� �������� ����������. ���  Intel ��� ���������� SpeedStep, ��� AMD &mdash; Cool'n'Quiet � PowerNow!  (���� ����� ������).</p>
<p>����������  �������� ��������� ������ � ���, ���������� ���������������� �����  ������� �� ������� ������ (��� �����������, ������� ����� ��������  �����������) ��� ������������� ������������ ���������, � ����� �������  ����������� ����� �������� �������� ���������� (���� &mdash; �� �����  ����������, � ���������� ���� ��� �����, ���� � �� �������).  ����������� ���������� �������� ����������, �.�. �� ���� ������������ �  ���������� �������� ������� ������. ������ � ������� (�� �������  ������������) � ���������� �� ����� ������ �� ����: ������� �������  ������ � 2-3 ���� ������������ ���������, � ���������� &mdash; ��������� ��  20-30. �.�. ���� ��� ������ ������� (���� � ������������� �� �� ������  �������) ��������� �� ����� ����� ���������� ��������� ����, � �����  ����������������� CPU ��� ��������� &mdash; ���� �����. ��� �� �����, ��� ��  ������� ������, ��� � ������ ���������� ����������������� ����������.  ����������, �� ���� ����������� ����������� ������ � ��  ���������������� ���������� �������������� � �������� �� ���������. ���  �������� �������������, �� ���������, ��� ���������� AMD ���� �������  �� Intel, �� �������� ������� ������ ����� �������� ������������, �.�.  ��������� &mdash; �� ������������ ����� ����������. � ���������, �����������  ���������� &laquo;�������� �� �����&raquo; ��������� ������ ��������� CPU, ���� ���� ��� � ������� ����; ���������� � ��� ���������.</p>
<p>�����  �������, ��� ������� �� ����� ��������������� ������� ��� ������������  ��������� (����� ������, �� ���������� � ���������� � ����������  ����������� ������ �������� �� ����) ������ ����������� ����������  �������� ����� ������������ � ��������� �� ������������ ����� ��������  � � ������������ �����������������. ��� ���, ��������, ���������� ��  ���������� � ������� ����������, ������������� �� 65-������������ �  45-������������ ����������, ����� ���������� ������ ���������� �������  &mdash; � ������� ����� ���� ������� �������� ���������� � ������������ ���. </p>
<h2><a name="38" id="38"></a>���������: ���&nbsp;��������� </h2>
<h3><a name="39" id="39"></a>����������� ����� </h3>
<h4><a name="40" id="40"></a>������� ������ ���� � ��� ���� </h4>
<p>��  ���� ����������� x86 CPU ���� L1 � L2 �������� �� ��� �� �������, ��� �  ������������ ����, �� ��� ����� �� ������ ���� ��� (������ ������ ���  ���������� ����). ������ �������� ������ � ����� ������� �� ������ ��  �������, �� � �� ������ ����, � ������� ������� �� �������� � �����.  ��� �� �������, �������� �������� ������ �������� ������������� �������  ������ ���� (���������� ������ � �������) �� ���������� ����, �������  ���������� �� ���� �� ����. ��� ���������� ����� ����������� �� ����  �������� ���������� DDR (Double Data Rate) �/��� �� ���� ����������  ������ ����. � ������ � ����� ����� ��������� ������ ������� &mdash; �� �  ��������� ������� ��-�� &laquo;��������� ������������&raquo; DDR, ��������� ����.  ����� ����, ����� ��������� ����� ��� ������������ ����, ����������  ������ � ������ ������� &mdash; �.�. ������������ ���� � ���������������  (���������������) ��������� ������. ����� � ���, ����� �� ��������  ����� (��������������� ����, �� ����� ����� � ������ �����������, ���  ���������������� �������) &mdash; ������������ �� ��� ���, ��� � ���������  ������ ������ ������������ ����������� �������, ����������� �����  ��������� ������������ �� ����� x86 CPU. ����� ��� ���������� ��������  ������� ���� ���� ����������� ����������� ������� ���� ������  ����������, �.�. 64 ����. ������ �� ����������� ����� ������� �����  ���������� �������������� ���������� ������, ����� ����������� ������  �������� &mdash; 128 � ����� ���. ������ ������ ���������� ������ ��� �����  ����� � �����, � ����� ������ ������ ����� ���� ��� ����: � �����������  ������� &mdash; 256 ���. </p>
<h4><a name="41" id="41"></a>������������ � �� ������������ ��� </h4>
<p>���������  ������������� � �� ������������� ����������� ����� ������: � ������ ��  ������������� ����, ���������� �� ���� ������� ����������� �����  �������������. ����� �������, L2 ����� ��������� � ���� ������, �������  ��� ��������� � L1I � L1D, � L3 ����� ��������� � ���� ������ �����  ����� ����������� L2 (�, ��������������, L1I � L1D). ������������ ���,  � ������� �� �� �������������, ��������������� ������ �������������:  ���� ���������� ���������� �� �����-�� ������ ���� &mdash; �� �� ����  ��������� ��� �����������. ���� ������������� ���� ��������: �����  ������ ���������� ���������� ����� ���������� ������ ����� ���� �������  &mdash; � � �� ������������� ���� ������ ���������� ���������� (� ������  ������) ����� ������ ������ �������� (�� ������� � �� ������) ������  ����. ����� ������������� ���� ����� ��������, �� �� ����: ���������  ����������� ��������, ������� ������ �� ���������� &laquo;���������������&raquo;  (��������, &laquo;��������&raquo; ���������� �� L1 ���������� ���������� ������� �  ����������� � L2).</p>
<p>��  ������������ ��� ����������� ���������� �������� Intel, ������������ (�  ������� ��������� ����������� Athlon �� ���� Thunderbird) &mdash; ��������  AMD. � �����, �� ��������� ����� ������������ �������������� �����  ������� � ���������: �� ���� ��������������, ��� ���������� �������  L1/L2 � AMD ����� ������ ���������� ���������� ���������� ������ &mdash; ��  �� ���� �� �� �� �������� ��������� (��������, ��������� ��������  ��������� ����������� ��������������). ������� ��������, ��� ����������  �� ������������� ���� Intel ������������ ������, �� ������: ���������  ��� ������. ��� ������� ����������� ������ �������� ���� ������ L3-���  ������� 8 �� &mdash; �� AMD � � 512 �� L2 �� ������ �� 2-6 ���� � �������� 6  �� ������ L3 ����� �������� 7-9 �� �� ���� ��������������.</p>
<p>�����  ����, ����������� ����� ����� ���������� ���������� �� ���� ��������  ������������ ����������� ���� ����� ����� ������ � ��� ������, �����  ������� � ������ ���������� ���������� �������.  ��� AMD ��� ��������� �.�. � � ����������� CPU ��������� ����� L1D+L1I  ����� 128 ��, � L2 &mdash; 512 ��. ����������� Intel, � ������� ��� �����  ����� ������, �������� ������������ ����������� ���� �� ������� ������  ������.</p>
<p>�  ��� ���� ���������������� �����������, ��� ����������� ���� � CPU  �������� Intel &laquo;�����������&raquo;. �� ����� ���� &mdash; ���. ������ ��  ������������. ����������� ����������� ���������������, ��� �� &laquo;������&raquo;  ������ ���� �� ����� ���������� ������, ���� ��� �� ����� &laquo;�������&raquo;. �� ������������ ����������� ����� ���� ��������� ������������ ������ �� ������ �������. </p>
<h3><a name="42" id="42"></a>���������������� � ������������ ���������� ������ </h3>
<p>��������  ����� ���� ����������� ����������� ������� � ���, ��� ��� ��������  ��������� �� ���������� �� ������ �� �������, ������� (�������� ����  ���������) ������� ��������� � ������ ������ �������, �� � ������  &laquo;������&raquo; ��. ������� ������� (������������) ������. ����� ��� �������  ��������� ��������� ������������������ ������:</p>
<ol>
  <li> A = B + C</li>
  <li>Z = X + Y</li>
  <li>K = A + Z</li>
</ol>
<p>�����  ��������, ��� ������� (1) � (2) ���������� ���������� ���� �� ����� &mdash;  ��� �� ������������ �� �� �������� ������ (���������� B � C � ������  ������, X � Y �� ������), �� �� ����� ���������� ���������� (����������  A � ������ ������ � Z �� ������). ����� ����, ���� �� ������ ������ �  ��� ���� ��������� ����������� ����� � ���������� ����� ������, ������  ������� ����� ������������ �� ���, � ��������� ������������, � ��  ���������������*. ����� �������, ���� ������� ����� ���������� ������  ������� ������ N ������ ����������, �� � ������������ ������ ����������  ���� ������������������ ������ �� N*3 ������, � � ������ � ������������  ����������� &mdash; ����� N*2 ������ (��� ��� ������� (3) ������ ���������,  �� ���������� ���������� ���������� ���� ����������).</p>
<blockquote class="smaller">*  &mdash; ����������, ������� ������������ �� ����������: ������� ����� ����  ��������� ����������� ������ � ��� ������, ����� �� ������ ������  ������� ���� � ������� ��������������� ���������� ��������� �� ������  ������ (��), ������ ������ �����, ������� &laquo;��������&raquo; ��������������� �������. ��������, ALU ��������� ���������� ��������� ���������� ��� FPU. �������� ����� �����.</blockquote>
<p>�� ����� ����, �� ��� �������. ���, ���� � ��� ������� ��������� ������������������:</p>
<ol>
  <li>A = B + C</li>
  <li>K = A + M</li>
  <li>Z = X + Y </li>
</ol>
<p> ��  ������� ���������� ������ ����������� ����� ��������! �.�. ������� (1)  � (3) ���������� ���� �� ����� �� �� �������� ������, �� �� �����  ���������� ����������, ��� ����� ���� ��������� ����������� &mdash; � �����  ��������� �����������. � ��� ������� (2) ����� ��������� ����� ���  (�������������� �������) &mdash; ��������� ��� ����, ����� ���������  ���������� ��� ���������, ����������, ����� ����� ���� ���� ���������  ������� (1). ������ ������� ����������� � ������ ������� �������� �  ���������� &laquo;������������ ����������� ������&raquo; (Out-of-Order Execution  ��� &laquo;OoO&raquo;): � ��� �������, ����� ���������� ���������� ����� �� �����  ��������� �� ����������, ������� ������������ �� ���������� �� �  ��������� � ��������� ������������������, � � ���, ������� ���������  ������� ������������� ��������������.</p>
<p>������  ��� ������ ����� ������������ �������, ����� ����������� CPU �����  ���������� ���������� ����������� ������: ��� ������������ �����������  ������������� ���������� ���������� ����������  ��� ������� �� ���� ������, ������� � ������ � &laquo;������������&raquo; ��������  � �������������� ���������� �������� �� ��������� ���, ��� ���  ���������� � �������� ����, ���� �� ������.</p>
<div align="center">
  <img src="images/cpu-digest-2009/deneb.png" width="600" height="371">
  <br><em>&laquo;��������������&raquo; ����� ���� AMD Deneb � �������� ���������<br> ����������� ������������ ������������� ���������� ������</em>
</div>
<p>����������,  ���������� ���������� ������������� ���������� ���������� ������ ������  ������, ������� �������� &laquo;���������������&raquo;. ������ �� ���  �������������� ���������� ������������ ������������ ����������. ���, �  ������ ������� ��� ���������� &laquo;������� ����������������&raquo; (����������  ���� ���������������� ������ ������������) &mdash; � ��� �� ������ �������  ��� ������������ ������ ������� ��� �� ��������, ���� �� ����� ��������  ������������ ��������������. ��� ����������� x86 CPU �������� ������  ����������: �������� ��������������� � ������������ ������������  ���������� ������ &mdash; ����� ���������� Intel Atom, ������� ������ �  ������� ���������� ����������, ����� ���� ������� � �����������������  ������������.  � �� �� �����, ���� � ������� x86 � &laquo;������� ������������&raquo;, OoO ��  ��������������. ��������, ������������ ���������� x86-������������� ���  OoO ��� Intel Pentium (� ��� ��� MMX). ��� �� Atom ����� � ��������  ������� �������� &laquo;��������&raquo;, ���� ������ ����������� � �� �����������,  � �� ��������.</p>
<p>��������������  ���� ����� ��������, ��� ������� ������ � ���������� ���������  ���������������� � OoO ��� �� � Intel, �� � AMD, �� � ������-���� �����  (� ��� ����� �� ���� ��������) ������������� x86 CPU. ������  �������������� ���������, �������������� OoO, ��� ���������� ��������  ����� (Seymour Cray) ��� � 60-� ����� XX ����. ��� ���������: Intel  ���� ������ �������������� ��������� ����������� x86 (Pentium)  ��������� � 1993 �., ������ ����������� � OoO (Pentium Pro) &mdash; � 1995  �.; ������ ����������� � OoO �� AMD (K5) ������ ���� � 1996 �..  �����������, ��� ���������, �������&hellip; </p>
<h3><a name="43" id="43"></a>��������������� (�����������) ������������� � ����������� </h3>
<h4><a name="44" id="44"></a>������������ ��������� </h4>
<p>�  ����� �����-����� ������� ��������� ������������ ������� ���������  ��������: &laquo;���� ����� ������� ������� &mdash; ������� � ���������� ������  ������� ����, ���� ��� &mdash; �������&raquo;. � ����� ������ �������� ����������  ���� ��������� ����������� ����������� � ������� ������  ����������������� ������ � ���������� ����������� (��� ����������  �������������� ��������), ����� ������� ��������� �������� &mdash; ��������  ��� �����. ���� �� ��� ���, ���� �� ������ ��������, ����� ������� ����  ����� ��������� �������� �������� &laquo;����������&raquo; &mdash; ��� ���������� ������  ������������ � ���������. ��� ���� ����� ���-�� ��������� ���������  &laquo;�������&raquo; ���������� � ��������� ��������� ��������, ���������������  ����������� ����: ���� ������������ ���������. ���������� ��, �� ����,  &laquo;�������������&raquo;: �������� �����������, �� ����� ������� ���� ������  ������� ��������� ��������, ��� �� ����, ��� ��� ����� ���������, �  ��������� �� ������� ������. � ������������ � ���������� &laquo;��������  �������������� �������&raquo;, ����������� ������������ ������ ��������  ��������: &laquo;�������������&raquo; ������� ���� ����������� � ��� (���� �� ���  �����������), � ���������� ������������� � ���������� ��� ������.  ������ ����� ����������� ������ ����� ����� ����������� ����������  ��������� ��������, � �� ���������� ���� ���������������, ��� ���������  ����� ������� �� ���� �� �����������  ������������! ����������, ���� ���� ������������ ��������� ������, ���  ����������� � ������������ � ��� �������������� ������ ������  ������������.</p>
<p>���������,  �� ������� �������� ���� ������������ ���������, ����� �� ��������  ��������� �������������� ����������. ����� ���������&nbsp;�������  ��������� �������� �������, �� �������� ����������� ��� ��������� &laquo;��  �����&raquo; &mdash; ������ ���� �������, ���� ���������� ������� (����� �� ����  ���������� ��������� ��� ����� &mdash; ��� ���� �� ������ ���������) � ��..  �������� ������ ������������� (�� ���������� �����������) ��������.  ����� ���������� ����������, ����� ����������� ��� �������� �������.  ����� ��� ������, � ������������� ���� ����������� ������� �������  ���������, �������� �������� ��������� ���������� ����� ��� �����  ��������� ������������ � ��������� ������ ��������� ������ � ��  ��������. ����� ��� ������������ ������������� ������ ���������� �  ��������� ��������� ������� �� &laquo;�� �����&raquo;, � &laquo;�� ���&raquo; &mdash; ����������� ��  ��������� ����������� ���������� ��������� � ���� ������� ��������, �  ���������� � &laquo;������&raquo;, ����������� �� ��. ��� ��������� ����  ���������� ������ ���, ����� ������� �������� ������� �� ����������, �  ��������� �������� � �������������, ����� ��� �������������� ����  ������� &mdash; ������� ��� ���, ������� ��� ���.</p>
<p>��������  �� ���������� ������� ������������� ����������, ��������� ������������  ��������� � ����������� CPU �� ����� ��������� ���������������� �  ����������� &mdash; �� ��� ��� ���� ��� � ������ �� ������� ���������:  ��������, �� ��, ����� �������� ������������� ������ ����� ������������  ��������� � 95 ��������� �� 97, ��� ���� � 97 �� 99&hellip; </p>
<h4><a name="45" id="45"></a>����������� ������ </h4>
<p>����  ����������� ������ (Prefetch) ����� ����� �� �������� ������ ��������  �� ���� ������������ ��������� &mdash; �� � ������ ������ ���� ��� �� �  ����, � � ������. ����� ������� �������� ����� ��: �������������  (���������) ����������� ������� � ������, ������, ��� � ������� �������  ������, ��� �� ������������ � ��� ��� ����, ����� ����� ����������  ������ &mdash; � ������� ��� ������� �� �������� ������� ������� ���  �� ����, ��� �� ����������� ���������. &laquo;����&raquo; (�������������)  ���������� ���� ����������� ��������� ����������� ��������� �����  ������� � ������ ������, �, ��������������, �������� ��������  ���������� ���������. �� ������ ������������ ������� �����������  ���������� ������, ��������� ������ ������ ������� � ���� ��� ����� �  ����, � ��� �����, ��������� �������� ��� ������� � ���, ���� �� ���  ���������� �� � ����, � � �������� ���.</p>
<p>����������,  � ������ ����������� ��������� ���������� �����������: ��������  �������� (��� ����� ��������) ������ � ���, Prefetch ��������� �� ����  ������ (���� �����, ��� ��� ������). ����� ����, �� ����  &laquo;��������������&raquo; �������� ����������, �������� �������������� ��������  �� ���������� ������ (������ � ������ ������ &mdash; ���������� �����������).</p>
<p>���������  Prefetch, ��� � ��������� ����� ������������ ���������, ���� �� ������  �������������������: ��� �������, ������ ���� ��������� ���������, ��  ����������� �� ���������� �� ������ � ����������� &laquo;�����&raquo; (��  �������), � �� ��������� ����� ������� �������� �����������, � ������  ������ ����� ����������� ������ �����. ��� � � ������ � ������  ������������ ���������, �������� ��������� ����� �� �������� ������  �������������: � �������, ���� ����������� ���� &laquo;��������&raquo;, ���  ��������� &mdash; ���, ��� � � ���������� ������, ������ ����� ������� � ���,  ��� &laquo;�������������&raquo; ������ ������ �� ������, ��� �������, ����������  ��� ���������� ��������� ������.</p>
<h2><a name="47" id="47"></a>����������: ���������� x86-����������� �� ������ � �� ����� �����</h2>
<p>�����, ��� �������, �� ������ �������� � ������ �������� ������ ���� &laquo;��������������� �����&raquo; ���� ���������� x86-�����������, �.�. ��� ��������� ���������� ��������� ��������� �� ��������, � ������  ������, ��������� &laquo;�����������������&raquo; ��� ������� �� ����������, �������� � ����� ������. :)</p>
<br>
<h3>&laquo;�������������� �����&raquo; &mdash; �� Intel 8086 �� Intel Pentium</h3>
<br>
<a class="big_img" href="images/cpu-digest-2009/prehistory.png" title="&laquo;�������������� �����&raquo; &mdash; �� Intel 8086 �� Intel Pentium"><img src="images/cpu-digest-2009/prehistory.png" width="550" border="0" height="425"></a>
<br>
<h3>&laquo;�������� �������&raquo; &mdash; �� Intel Pentium �� Intel Core i7 � AMD Phenom II</h3>
<br>
<a class="big_img" href="images/cpu-digest-2009/newhistory.png" title="&laquo;�������� �������&raquo; &mdash; �� Intel Pentium �� Intel Core i7 � AMD Phenom II"><img src="images/cpu-digest-2009/newhistory.png" width="550" border="0" height="775">
</a>
<br><br>
<h2><a name="46" id="46"></a>���������� </h2>
<div align="right"><em>� &mdash; ��� ������, ������� �� ����� ������ ������ ����� �� ��� ���, ����<br>
�� ����� �� ���� �������, ��� ���������� ������� �����������! <br>
(��������� ������ ������� ����� �� ������� �������� ������)</em></div>
<p>������  ��������, �������, ������� � ��� �������� ����� ��������� ������  ������, ����� ������� �������� ���: &laquo;������ ����, ����� �� �������  ���������, ����� ��������� ����� &mdash; ����� � ��������� ��� ����� �����  ������������� ����������, � ������� ��� ����������� � �����������, �  �����-���� �� �����!&raquo; ������ ���������� �������, �� ��� ������  ��������. ������ ���� ������ (� ����� � ������ ����� ������!): ���� ��  �������, ��� �� ���� ����� �������� �� ���� ���������� ������ (&laquo;�����  ��������� �����?&raquo;) &mdash; ��� �� ���. �� �����*. ��� ����� ����� ����� ����, ��� ������ &mdash; ������, � ��� ��� ���� ������,  �����������, �������� ����������� ������������ � ����������� ������&hellip;  �� ����� ������ ������������ �������. ���� �� ����� &mdash; ��������� ���-��  �� ��� �����, � ���� �� ����� ���������� ������������� �� ��� �������  ����������� �������� �����������.</p>
<blockquote class="smaller">* &mdash; ���������� ������ �� �������: &laquo;������ ��������� &mdash; ��� ���������!&raquo; :)</blockquote>
<p>�������� �� ����������� ��� ���: ����  ��������� ������ � �������� ��� ����������, ���������� � ������  ��������� &mdash; �� ��-�������� �� ������� �����������, ����� �� ����  ����������� ����� ������� � ����� �������, ����� ������ �� ��  ��������������.  ��-������ &mdash; ������, ��� ������ �� ��� �������������� ����������� �����  �����������. ��-������ &mdash; ������, ��� ���� � ����� ��������� CPU,  ������� � �������� ���� ����� ���� ������������ ������ � ����� �������  &laquo;��������&raquo;. ��� ��� ���� �� (� ��� ����) �� ��� ��������? � �������� &mdash;  ��� ��� ����� &laquo;��������&raquo;, ������� ���������� ������ �����, ���  ���������� ������ ��� ���������, �������� ��� ���������� ���������.  �����? �����, ��� ������ ����� ���� ���������, ����� �����, ��� ������  ��� ����������? :)</p>
<blockquote class="smaller">P.S. ���������� ��� ���������? ��� ������� &laquo;<a href="cpu-microarchitecture-part-1.shtml">����� ��������������� ����������� ���������� �����������</a>&raquo; �� ����� ���������. ��� ����� ������ ���� � ����� � 2006 ����, �� � ����� ������������� �������� � ����������� �������� ��������� ������ x86 CPU, �� �������� �� ��� ���.</blockquote>

<!-- /������ --> 
</div> 
<!-- ����� ��� ������� ����� ������ -->
<!--#include virtual="/cpu/include/bottom_reklama.html" -->
<!-- /����� ��� ������� ����� ������ -->
<!-- ���� -->
<!--#include virtual="/cpu/include/tags.html" -->
<!-- /���� -->
<!-- ��������� ������ -->
<div class="article_author_block">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td height="31" valign="middle" width="105" class="aab_td_p">
<!-- ���� ���������� -->
<span class="aab_date">30 ������� 2009 �.
</span>
<!-- /���� ���������� --></td>
<td valign="middle" class="aab_td_p_links"><span class="aab_auth"><img class="aab_plain_icon" alt="�����" title="�����" src="/pic/articles/icons/man.png" width="16" height="13">
<!-- ����� � ��� ������ -->
<a href="mailto:nawhi@ixbt.com">��������� ��������</a>, <a href="mailto:felid@mailinator.com">����� �����</a> aka Felid
<!-- /����� � ��� ������ -->
</span></td>
<!-- ������ ������ -->
<!--#include virtual="/include/articles/bottom_tools.shtml" -->
<!-- /������ ������ -->
</tr>
</table>
</div>
<!-- �����: ��������� ������ -->
<!-- ������������� -->
<!-- ��������� "�������������" -->
<!--#include virtual="/include/articles/additional_header.shtml" -->
<!-- ��������� "�������������" -->
<div id="splr_1" class="spoiler-body" style="display: block; font-size: 0.9em;">
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<!-- ������� ����� ������ -->
<!--#include virtual="/cpu/include/news_after_article.html" -->
<!-- /������� ����� ������ -->
<!-- ������ �� ������ -->
<tr>
<td style="padding: 0 7px;">
<div class="conf_inc_block">
<br>
<!-- ������ ������ -->
<!--#include virtual="/cgi-bin/discuss-link.cgi?url=http://www.ixbt.com/cpu/cpu-digest-2009.shtml&name=����������� ���������� ���������� ����������� x86: ����� �������� ������ (x86 CPU digest 2.0)&forum=8"-->
<!-- /������ ������ -->
</div></td>
<!-- ������ �� ������ -->
</tr>
</table>
<!-- /������������� -->
</div>
</div></td>
<td valign="top" align="left" width="260" style="padding: 0 0 0 20px" class="right_col_banner_and_import">
<!-- ������ ������� -->
<!--#include virtual="/cpu/include/right_col.html" -->
<!-- /������ ������� --></td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<div class="push"></div>
</div>
<!-- ������ -->
<!--#include virtual="/include/articles/footer.shtml"-->
<!-- /������ -->
</div>
<!-- ����������� ������� -->
<!--#include virtual="/include/context.shtml" -->
<!-- /����������� ������� -->
</body>
</html>
</div>
                                </div>
            </div>
        <div class="g-grid_column g-grid_column__small">
    <div class="b-poll"></div>
<div class="deskadv ban600" id="v-10">
    <div class="vertb vertb1" id="v10"></div>
</div>
<script>
    if (isDesktop) {
        window.yaContextCb.push(()=>{
            Ya.adfoxCode.create({
            ownerId: 263225,
            containerId: 'v10',
            params:
                    {
                        p1: blocksArray.v10, p2: 'ftrh','puid10':'ixbtcom','puid4':'ixbt_art','puid3':'ix_cat_platform','puid14':Math.floor((Math.random()*100)),'puid5':'v10','partner-stat-id':30075003                      }
    })
    })
    }
</script>

    <div id="ixbt-video-news-block" style="height:785px;width:300px;"></div>
<script>
    $(document).ready(function(){
        $.ajax({
            url : 'https://ixbt.video/embed/ixbt_sidebar_block.html',
            async: true,
            type: 'GET',
            crossDomain: true,
            success: function(data){
                $('#ixbt-video-news-block').replaceWith(data);
            }
        });
    });
</script>


            <div class="b-block block__rightnewslist b-lined-title">
  <h3 class="lined">Новости</h3>
  <div class="rightnewslist-container">
    <ul>
          <li><a href="/news/2024/07/08/12-ryzen-9-9900x-16-ryzen-9-7950x.html"><p class="text"><span class="linktext">12-ядерный Ryzen 9 9900X может быть быстрее даже 16-ядерного Ryzen 9 7950X. Как минимум в новом тесте результаты именно таковы</span></p><p class="date">8 июля 2024</p></a></li>
          <li><a href="/news/2024/07/08/apu-ryzen-linglong.html"><p class="text"><span class="linktext">Полноценный ПК в корпусе маленькой складывающейся клавиатуры, да ещё и на мощном APU Ryzen. Linglong выпустила необычный компьютер по невысокой цене</span></p><p class="date">8 июля 2024</p></a></li>
          <li><a href="/news/2024/07/08/rossijskij-mikron-rasshiril-sborochnoe-proizvodstvo-mikroshem.html"><p class="text"><span class="linktext">Российский «Микрон» расширил сборочное производство микросхем</span></p><p class="date">8 июля 2024</p></a></li>
        </ul>
    <a href="/news/" class="btn btn-default">Раздел новостей ></a>
  </div>
</div>
    
<div class="deskadv">
    <div class="vertb" id="tgb"></div>
</div>
<script>
    if (isDesktop) {
        window.yaContextCb.push(()=>{
            Ya.adfoxCode.create({
            ownerId: 263225,
            containerId: 'tgb',
            params:
                    {
                                    p1: 'bziun',             p2: 'fugq','puid10':'ixbtcom','puid4':'ixbt_art','puid3':'ix_cat_platform','puid14':Math.floor((Math.random()*100)),'puid5':'sidebar_tgb','partner-stat-id':30075003                     }
    })
    })
    }
</script>



    <p class="banner-sticky-anchor-top"><a name="V20D"></a></p>

    <div class="banner-sticky desktop-show">
        <div class="banner-sticky-inner">
        <div class="deskadv  ban600" id="v-30">
    <div class="vertb vertb2" id="v30"></div>
</div>
<script>
    if (isDesktop) {
        window.yaContextCb.push(()=>{
            Ya.adfoxCode.create({
            ownerId: 263225,
            containerId: 'v30',
            params:
                    {
                        p1: blocksArray.v30, p2: 'ftrh','puid10':'ixbtcom','puid4':'ixbt_art','puid3':'ix_cat_platform','puid14':Math.floor((Math.random()*100)),'puid5':'v20','partner-stat-id':30075003                    }
    })
    })
    }
</script>
        </div>
    </div>

</div>        </div>
    </div>
</div>


<div class="recommend_item-container">
    <div class="bcontainer" id="n60"></div>
    <script>


        window.yaContextCb.push(()=>{
            Ya.adfoxCode.createScroll({
                    ownerId: 263225,
                    containerId: 'n60',
                    params:
                        {
                            p1: blocksArray.n60, p2: isMobile ? 'ftsc' : 'ftsb','puid5': isMobile ? 'm60':'h60','puid10':'ixbtcom','puid4':'ixbt_art','puid3':'ix_cat_platform','puid14':Math.floor((Math.random()*100)),'partner-stat-id':30075003                        },
                    lazyLoad: {
                        fetchMargin: 200,
                        mobileScaling: 2
                    }

                }
            )
        })

    </script>
</div>

<div class="b-content b-content__footer">
<link rel="stylesheet" href="https://www.ixbt.com/site2/resources/css/gpdr-panel.css">

<div class="gdpr-root" style="display: none;">
    <div class="gdpr-text">Для работы проектов iXBT.com нужны файлы cookie и сервисы аналитики. Продолжая посещать сайты проектов, вы соглашаетесь с нашей <a href="https://forum.ixbt.com/?id=rules:cookie"
                                                                                                                                                              target="_blank" rel="noopener noreferrer">Политикой сбора данных</a>
    </div>
    <button type="button" class="gdpr-dismiss" aria-label="Закрыть предупреждение" onclick="setCookie('cookie_policy_accepted','1',{path: '/', expires: 36500000, domain: '.ixbt.com'});const ele = document.querySelector('.gdpr-root');ele.style.display = 'none';">
        <svg data-testid="svg-symbol" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
             class="SvgSymbol-module_root__2CsRW SvgSymbol-module_medium__2eF5L SvgSymbol-module_cross__J2lCN"
             width="18" height="18" viewBox="0 0 18 18">
            <path fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                  stroke-width="1.5" vector-effect="non-scaling-stroke" d="M2 2l14 14M16 2L2 16"></path>
        </svg>
    </button>
</div>
<script>
    function getCookie(name) {
        var matches = document.cookie.match(new RegExp(
            "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
        ));
        return matches ? decodeURIComponent(matches[1]) : undefined;
    }

    // уcтанавливает cookie
    function setCookie(name, value, props) {

        props = props || {};

        var exp = props.expires;

        if (typeof exp == "number" && exp) {
            var d = new Date();
            d.setTime(d.getTime() + exp*1000);
            exp = props.expires = d
        }

        if(exp && exp.toUTCString) { props.expires = exp.toUTCString() }

        value = encodeURIComponent(value);

        var updatedCookie = name + "=" + value;

        for(var propName in props){
            updatedCookie += "; " + propName;
            var propValue = props[propName];
            if(propValue !== true){ updatedCookie += "=" + propValue }
        }
        document.cookie = updatedCookie;
    }


    if(getCookie('cookie_policy_accepted') == '1'){

    } else {
        const ele = document.querySelector('.gdpr-root');
        ele.style.display = 'flex';
    }
</script><div class="b-content b-content--wrapper" style="flex-wrap: wrap; justify-content:center; text-align: center; padding: 1rem; background-color: #15803d; margin-bottom: 1rem; border-radius: 1rem; display: flex; flex-direction: row"><a style="color: white; font-weight: 600; display: flex; white-space: nowrap; margin-top: 0.5rem; margin-bottom: 0.5rem;" href="https://www.ixbt.com/ch/design.html">Попробовать новый дизайн <svg style="margin-left: 0.5rem;width: 1.5rem; height: 1.5rem;" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
      <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 12c0-1.232-.046-2.453-.138-3.662a4.006 4.006 0 00-3.7-3.7 48.678 48.678 0 00-7.324 0 4.006 4.006 0 00-3.7 3.7c-.017.22-.032.441-.046.662M19.5 12l3-3m-3 3l-3-3m-12 3c0 1.232.046 2.453.138 3.662a4.006 4.006 0 003.7 3.7 48.656 48.656 0 007.324 0 4.006 4.006 0 003.7-3.7c.017-.22.032-.441.046-.662M4.5 12l3 3m-3-3l-3 3" />
    </svg>
  </a>&nbsp; &nbsp; &nbsp; <a style="color: white; font-weight:600; display:flex; white-space: nowrap; margin-top: 0.5rem; margin-bottom: 0.5rem;" href="https://www.ixbt.com/page/design.html">Подробнее</a></div>

<div class="b-footer">

        


        <div class="b-block block__footer">
          <div class="b-content--wrapper">
            <div class="g-grid" style="background-color: #5c5ca6;">
              <div class="g-grid_column g-grid_column__4">
                <div class="s-logo"><i class="icon icon-logo_ixbt"> </i></div>
                <p class="copy opacity">Copyright &copy; 1997—2024.</p><a href="https://www.ixbt.com/page/about.html" class="about">О сайте</a>
                <p>Адрес для связи info@ixbt.com</p>
              </div>
              <div class="g-grid_column g-grid_column__4">
                <div class="footer-menu">
                  <div class="footer-menu__title">Наши проекты</div>
                  <ul class="small">
                    <li><a href="https://www.ixbt.com/">ixbt.com</a></li>
                    <li><a href="https://forum.ixbt.com/">Конференция</a></li>
                    <li><a href="https://www.ixbt.com/live/">Live</a></li>
                    <li><a href="https://ixbt.photo/">Фото</a></li>
                    <li><a href="https://ixbt.video/">Видео</a></li>
                  </ul>
                  <ul class="small">
                    <li><a href="https://gametech.ru/">Gametech</a></li>
                    <li><a href="https://ixbt.market/">Market</a></li>
                    <li><a href="https://komok.com/">Komok</a></li>
                    <li><a href="https://prosound.ixbt.com/">Prosound</a></li>
                  </ul>
                </div>
              </div>
              <div class="g-grid_column g-grid_column__4">
                <div class="footer-menu">
                  <div class="footer-menu__title">Полезные ссылки</div>
                  <ul>
                      <li><a href="https://www.ixbt.com/authors/">Наши авторы</a></li>
                    <li><a href="https://ixbt.media/stat">Статистика</a></li>
                    <li><a href="http://www.ixbt.com/news/search/">Поиск</a></li>
                    <li><a href="https://www.ixbt.com/page/export.html">Экспорт данных</a></li>
                  </ul>
                </div>
              </div>
              <div class="g-grid_column g-grid_column__4">
                <div class="footer-menu">
                  <div class="footer-menu__title">Связь с администрацией</div>
                  <ul>
                    <li><a href="https://www.ixbt.com/page/advert.html">Реклама и пиар</a></li>
                    <li><a href="https://forum.ixbt.com/?id=rules:cookie">Политика использования cookie</a></li>
                    <li><a href="https://forum.ixbt.com/?id=rules:persdatapolicy">Политика защиты и обработки персональных данных</a></li>
                  </ul>
                </div>
              </div>
              <div class="g-grid_column g-grid_column__2">
                <div class="s-18plus"><i class="icon icon-mature"></i></div>
              </div>
            </div>
            <p class="opacity">Нашли ошибку? Выделите текст и нажмите Shift+Enter.</p>
          </div>
        </div>
      </div>
      <div class="b-footer__mobile">
        <div class="b-footer__mobile--wrapper">
          <div class="footer-top">
                      </div>
          <div class="footer-bottom">
              <ul>
                <li style="margin: 10px 10px 10px 0;"><a href="/">На главную</a></li>
                <li style="margin: 10px 10px 10px 0;"><a href="/page/about.html">О сайте</a></li>
                <li style="margin: 10px 10px 10px 0;">Адрес для связи info@ixbt.com</li>
                <li style="margin: 10px 10px 10px 0;"><a href="https://forum.ixbt.com/?id=rules:cookie">Куки</a></li>
                <li style="margin: 10px 10px 10px 0;"><a href="https://forum.ixbt.com/?id=rules:persdata">Персональные данные</a>
                <li style="margin: 10px 10px 10px 0;"><a href="/page/advert.html">Реклама и пиар</a></li>

                                                                            <li>/ <a href="/platform/">Платформа ПК</a></li>
                                                                    </ul>
            <p class="copy">Copyright &copy; 1997-2024</p><a href="#" class="logo"><i class="icon icon-logo_ixbt"></i></a>
          </div>
        </div>
      </div>
</div>





<script>
    $.each($(".b-poll"), function (index, value) {
        var that = $(this);
        $.ajax({
            url: '/include2/opinion.html?utm_time=' + Math.round(+new Date()/1000),
            type: 'GET',
            success: function(data){
                that.html(data);
            }
        });
    });
    $(document).ready(function() {
        var date = new Date;
        date.setDate(date.getDate()+7);
        $.ajax({
            url: "//cmt.ixbt.com/cgi/auth_jsp.pl",
            cache: false,
            type: "POST",
            data: {ref: 'ixbt'},
            dataType: 'json',
            xhrFields: {withCredentials: true},
            success: function (data, stat, xhr) {
                if (data.premium == 0) {
                    document.cookie = "auth_param=u~lg1#; site=.ixbt.com; path=/; expires="+date.toUTCString();
                } else if (data.premium == null) {
                    document.cookie = "auth_param=; site=.ixbt.com; path=/; expires="+date.toUTCString();
                } else if(data.hide_ad == true)  {
                    document.cookie = "auth_param=?y3%rN; site=.ixbt.com; path=/; expires="+date.toUTCString();
                }
            }
        });
    });
</script>


<script async src="https://cdnjs.cloudflare.com/ajax/libs/simplebar/2.6.1/simplebar.min.js" integrity="sha512-wN8RKJwlvu2G6zp9xnzzRF57pD4VkUfJA7QtE94wDJGyVkMQXkekaS9YeIM6lhIVhtjPda8sULo52dfCu6COuA==" crossorigin="anonymous"></script>

<script async src="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.2.1/jquery.fancybox.min.js" integrity="sha512-9s/WNXa83EmNcBiPEO2dFWJt1MmBzz+xCR0ca96zetZt9zIrVj8gn2xdD0edR3tab1rc/Ly34hnEZ7nT+tWLOw==" crossorigin="anonymous"></script>

    <script async type="text/javascript" src="https://www.ixbt.com/live/modules/ixbt/js/reorphus_utf.js"></script>

<script defer type="text/javascript" charset="UTF-8" src="https://www.ixbt.com/site2/resources/javascript/vendor/charts/chart.min.js"></script>
<script defer type="text/javascript" charset="UTF-8" src="https://www.ixbt.com/site2/resources/javascript/vendor/charts/chartjs-plugin-datalabels.min.js"></script>
<script defer type="text/javascript" charset="UTF-8" src="https://www.ixbt.com/site2/resources/javascript/vendor/charts/chartjs-plugin-deferred.min.js"></script>
<script defer type="text/javascript" charset="UTF-8" src="https://www.ixbt.com/site2/resources/javascript/vendor/charts/chart.init.js?v=1"></script>

<script>
    $(document).ready(function () {
        var data = $(".forum-comments").html()
        var nov_reg = "virtual=\"(.*)\"-->";
        try {
            if(data && data !== undefined) {
                var myAttr = data.match(nov_reg);
                $.ajax({
                    url: myAttr[1].replace("http:", location.protocol),
                    success: function (data) {
                        var nov_reg = "src=\"(.*)\" charset";
                        var myAttr = data.match(nov_reg);
                        $.ajax({
                            url: myAttr[1].replace("https:", location.protocol) + "&2018=1",
                            success: function (data) {
                            }
                        });

                    }
                });
            }
        } catch(err){};


    });

</script>


<script>

    // возвращает cookie с именем name, если есть, если нет, то undefined
    function getCookie(name) {
        var matches = document.cookie.match(new RegExp(
            "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
        ));
        return matches ? decodeURIComponent(matches[1]) : undefined;
    }

    $(document).ready(function () {
        if(getCookie("allow_to_view_article") == "0000001") {
            $(".b-article__header").append('<div style="position:relative; display: inline;"><a href="https://spot.ixbt.com/cgi-bin/admin/db_admin.pl?option=ShowString&id=7500&table=razdel30" class="edit-js-link"> </a></div> ');
        }
    })

</script>

</body>
</html>

<link rel="stylesheet" href="https://www.ixbt.com/live/modules/ixbt/css/reorphus.css">

<link rel="stylesheet" href="https://www.ixbt.com/site2/resources/css/jquery.fancybox.min.css" crossorigin="anonymous" media="print" onload="this.media='all'; this.onload=null;">


<link rel="stylesheet" href="https://www.ixbt.com/site2/resources/css/charts/chart.min.css" media="print" onload="this.media='all'">


<!-- fc 733 -->
